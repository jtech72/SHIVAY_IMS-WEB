{"version":3,"file":"static/js/65.d12e7cdd.chunk.js","mappings":"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","sources":["pages/shivay/stockIn/addStockIn/AddStockIn.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PageTitle from '../../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap'\nimport Select from 'react-select'; // Import React Select\nimport { IoIosAdd } from 'react-icons/io';\nimport { PiEye } from 'react-icons/pi';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport AddProductModal from '../../openingStock/addStock/AddProductModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createStockInActions, getWarehouseListActions, listingSupplierActions, listingUsersActions, updateStockInActions } from '../../../../redux/actions';\nimport { useForm } from 'react-hook-form';\nimport { useSearchParams } from 'react-router-dom';\n\nconst AddStockIn = () => {\n    const [searchParams] = useSearchParams();\n    const stockId = searchParams.get('id')\n    const dispatch = useDispatch();\n    const { handleSubmit, register, setValue } = useForm()\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n    const store = useSelector((state) => state)\n    const [today, setToday] = useState(new Date().toISOString().split('T')[0]);\n    const [openingProducts, setOpeningProducts] = useState([])\n    const StockInData = store?.stockInListReducer?.stockInList?.response;\n    const [selectedStock, setSelectedStock] = useState(null);\n    const Warehouse = store?.getWarehouseListReducer?.searchWarehouse?.response;\n    const UsersList = store?.listingUsersReducer?.listingUsers?.response;\n    const SupplierList = store?.listingSupplierReducer?.listingSupplier?.response;\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedQuantity, setEditedQuantity] = useState('');\n    const inputRef = useRef(null);\nconsole.log(editedQuantity, 'editedQuantity')\n    const handleQuantityChange = (e) => {\n        setEditedQuantity(e.target.value);\n    };\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSave();\n        }\n    };\n\n    // Handle save (when clicking outside or pressing Enter)\n    const handleSave = () => {\n        setIsEditing(false);\n        // Here you would typically also call an API to update the quantity in your backend\n    };\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n    useEffect(() => {\n        const handleClickOutside = (e) => {\n            if (inputRef.current && !inputRef.current.contains(e.target)) {\n                handleSave();\n            }\n        };\n\n\n        if (isEditing) {\n            document.addEventListener('mousedown', handleClickOutside);\n            return () => {\n                document.removeEventListener('mousedown', handleClickOutside);\n            };\n        }\n    }, [isEditing]);\n\n    useEffect(() => {\n        if (stockId && StockInData?.length > 0) {\n            const foundStock = StockInData?.find(item => item._id === stockId);\n            setSelectedStock(foundStock);\n        }\n    }, [stockId, StockInData]);\n\n    const warehouseOptions = Warehouse?.map((warehouse) => ({\n        value: warehouse._id,\n        label: warehouse.name,\n    }));\n\n    const usersOptions = UsersList?.map((users) => ({\n        value: users._id,\n        label: users.name,\n    }));\n\n    const supplierOptions = SupplierList?.map((users) => ({\n        value: users._id,\n        label: users.name,\n    }));\n\n    const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [selectedSupplier, setSelectedSupplier] = useState(null);\n    const [isAccordionOpen, setIsAccordionOpen] = useState(false);\nconsole.log(selectedWarehouse, 'selectedWarehouse')\n    useEffect(() => {\n        if (stockId && selectedStock) {\n            console.log(selectedStock, '2345432')\n            setToday(selectedStock?.createdAt ? new Date(selectedStock?.createdAt).toISOString().split('T')[0] : '')\n            const updateWarehouses = selectedStock?.warehouseData\n                ? { value: selectedStock.warehouseId, label: selectedStock.warehouseData?.find((ele) => ele?._id === selectedStock?.warehouseId)?.name }\n                : {};\n            setSelectedWarehouse(updateWarehouses)\n\n            const updatedUser = selectedStock?.receivedByData ? { value: selectedStock?.receivedBy, label: selectedStock.receivedByData?.find((ele) => ele?._id === selectedStock?.receivedBy)?.name }\n                : {}\n            setSelectedUser(updatedUser)\n\n            const updatedSupplier = selectedStock?.supplierId ? { value: selectedStock?.supplierId, label: selectedStock.supplierData?.find((ele) => ele?._id === selectedStock?.supplierId)?.name }\n                : {}\n            setSelectedSupplier(updatedSupplier)\n\n            setValue('invoiceNumber', selectedStock?.invoiceNumber || '');\n            setValue('description', selectedStock?.description || '');\n            setValue('invoiceValue', selectedStock?.fright || '');\n            setValue('invoiceAttachment', selectedStock?.invoiceAttachment || '');\n            setEditedQuantity(selectedStock?.productData?.stockInQty || '');\n        }\n\n    }, [stockId, selectedStock])\n    console.log(selectedWarehouse, 'selectedWarehouse')\n    const handleAccordionToggle = () => {\n        setIsAccordionOpen(prevState => !prevState);\n    };\n    const handleWarehouseChange = (selectedOption) => {\n        setSelectedWarehouse(selectedOption);\n    };\n\n    const handleUserChange = (selectedUser) => {\n        setSelectedUser(selectedUser);\n    };\n\n    const handleSupplierChange = (selectedSupplier) => {\n        setSelectedSupplier(selectedSupplier);\n    };\n\n    useEffect(() => {\n        dispatch(getWarehouseListActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingUsersActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingSupplierActions());\n    }, [dispatch]);\n\n    const onSubmit = (data) => {\n\n        const cleanedProducts = openingProducts.map(({ product, ...rest }) => rest);\n        const formData = new FormData();\n        if (data?.invoiceAttachment?.[0] instanceof File) {\n            formData.append('invoiceAttachment', data.invoiceAttachment[0]);\n        }\n\n        formData.append('warehouseId', selectedWarehouse?.value)\n        formData.append('receivedBy', selectedUser?.value);\n        formData.append('supplierId', selectedSupplier?.value);\n        formData.append('stockInQty', stockId?parseInt(editedQuantity):JSON.stringify(cleanedProducts));\n        formData.append('description', data?.description);\n        formData.append('date', data?.date);\n        formData.append('invoiceNumber', data?.invoiceNumber);\n        formData.append('fright', data?.invoiceValue);\n        if(stockId){\n            formData.append('_id', stockId);\n        }\nif(stockId){\n    alert('update')\ndispatch(updateStockInActions(formData))\n}else{\n    dispatch(createStockInActions(formData));\n}\n        // console.log(formData, 'formData');\n    };\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Stock In List\", path: \"/shivay/stockIn\" },\n                    { label: \"Add Stock In \", path: \"/shivay/stockIn\", active: true },\n                ]}\n                title={\"Add Stock In\"}\n            />\n            <Form onSubmit={handleSubmit(onSubmit)}>\n\n                <div className=\"accordion mb-3\" id=\"accordionExample\">\n                    <div className=\"accordion-item\" style={{ border: '2px solid #6655D9' }}>\n                        <h2 className=\"accordion-header mt-0\">\n                            <button\n                                className=\"accordion-button py-1 d-flex justify-content-between align-items-center w-100\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#collapseOne\"\n                                aria-expanded={isAccordionOpen ? \"true\" : \"false\"}\n                                aria-controls=\"collapseOne\"\n                                onClick={handleAccordionToggle}  // Toggle the accordion open state\n                            >\n                                <div className=\"flex-grow-1 text-black fw-bold\"> Add Stock In Details</div>\n\n                                {/* Right-aligned buttons */}\n                                <div className=\"d-flex\">\n                                    <Button\n                                        className=\"fw-bold custom-button me-2\"\n                                        onClick={handleShow}\n                                        disabled={!isAccordionOpen}\n                                    >\n                                        <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                                    </Button>\n                                </div>\n                            </button>\n                        </h2>\n\n                        <div\n                            id=\"collapseOne\"\n                            className={`accordion-collapse collapse ${isAccordionOpen ? \"show\" : \"\"}`}\n                            data-bs-parent=\"#accordionExample\"\n                        >\n                            <div className=\"accordion-body py-1\">\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className='mb-0'>Warehouse</Form.Label>\n                                            <Select\n                                                value={selectedWarehouse}\n                                                onChange={handleWarehouseChange}\n                                                options={warehouseOptions}\n                                                placeholder=\"Select a warehouse\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Received By</Form.Label>\n                                            <Select\n                                                value={selectedUser}\n                                                onChange={handleUserChange}\n                                                options={usersOptions}\n                                                placeholder=\"Select a User\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Supplier</Form.Label>\n                                            <Select\n                                                value={selectedSupplier}\n                                                onChange={handleSupplierChange}\n                                                options={supplierOptions}\n                                                placeholder=\"Select a Supplier\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className='mb-0'>Date Range</Form.Label>\n                                            <Form.Control\n                                                type=\"date\"\n                                                value={today}\n                                                {...register('date', { required: true })}\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Invoice Number</Form.Label>\n                                            <Form.Control\n                                                type=\"number\"\n                                                placeholder=\"Enter Invoice Number\"\n                                                {...register('invoiceNumber', { required: true })}\n\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Attach Invoice</Form.Label>\n                                            <Form.Control\n                                                type=\"file\"\n                                                placeholder=\"Upload file\"\n                                                {...register('invoiceAttachment', {\n                                                    required: !selectedStock?.invoiceAttachment, // only require if no existing\n                                                })}\n                                            />\n                                            {selectedStock?.invoiceAttachment && (\n                                                <div className=\"mt-2\">\n                                                    <a\n                                                        href={selectedStock.invoiceAttachment}\n                                                        target=\"_blank\"\n                                                        rel=\"noopener noreferrer\"\n                                                    >\n                                                        View Existing Invoice\n                                                    </a>\n                                                </div>\n                                            )}\n                                        </Form.Group>\n                                    </Col>\n\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Invoice Value</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                {...register('invoiceValue', { required: true })}\n                                                placeholder=\"Enter Invoice Value\"\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Description</Form.Label>\n                                            <Form.Control\n                                                as=\"textarea\"\n                                                rows={1}\n                                                {...register('description', { required: true })}\n                                                placeholder=\"Enter Description\"\n                                            />\n                                        </Form.Group>\n                                    </Col>\n\n                                </Row>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='mt-2'>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center py-1\">\n                            <table className=\"table table-striped bg-white\">\n                                <thead>\n                                    <tr className=\"table_header\">\n                                        <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                        <th scope=\"col\">Product Name</th>\n                                        <th scope=\"col\">Code</th>\n                                        <th scope=\"col\">Quantity</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {!stockId ? (\n                                        openingProducts && openingProducts.length > 0 ? (\n                                            openingProducts.map((data, index) => (\n                                                <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td className=\"text-uppercase fw-bold\">\n                                                        {data?.product?.name || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.product?.code || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.quantity || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td></td>\n                                                    <td>\n                                                        <div className=\"icon-container d-flex pb-0\">\n                                                            <span className=\"icon-wrapper\" title=\"View\">\n                                                                <PiEye className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                            </span>\n                                                            <span className=\"icon-wrapper\" title=\"Edit\">\n                                                                <AiOutlineEdit className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                            </span>\n                                                            <span className=\"icon-wrapper\" title=\"Delete\">\n                                                                <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                            </span>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                            ))\n                                        ) : (\n                                            <tr>\n                                                <td colSpan=\"6\" className=\"text-center text-muted py-3\">\n                                                    No products added yet. Please add products to add stockIn.\n                                                </td>\n                                            </tr>\n                                        )\n                                    ) : (\n                                        <tr>\n                                            <th scope=\"row\">1</th>\n                                            <td className=\"text-uppercase fw-bold\">\n                                                {selectedStock?.productData?.name || <span className=\"text-black\">-</span>}\n                                            </td>\n                                            <td className=\"fw-bold\">\n                                                {selectedStock?.productData?.code || <span className=\"text-black\">-</span>}\n                                            </td>\n                                            <td className=\"fw-bold\">\n                                                {isEditing ? (\n                                                   <input\n                                                   ref={inputRef}\n                                                   type=\"number\"  // or \"text\" depending on your needs\n                                                   value={editedQuantity}\n                                                   onChange={handleQuantityChange}\n                                                   onKeyPress={handleKeyPress}\n                                                   // autoFocus\n                                                   className=\"form-control form-control-md\"\n                                                   style={{ width: '5vw', display: 'inline-block', marginTop: '-10px' }}\n                                               />\n                                                ) : (\n                                                    <span onClick={handleEditClick} > {editedQuantity}</span>\n                                                )}\n\n                                            </td>\n                                            <div className=\"icon-container d-flex pb-0\">\n                                                <span\n                                                    className=\"icon-wrapper me-4\"\n                                                    title=\"Edit\"\n                                                    onClick={handleEditClick}\n                                                >\n                                                    <AiOutlineEdit className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                </span>\n                                            </div>\n                                            <td>\n                                                <div className=\"icon-container d-flex pb-0\">\n                                                    <span className=\"icon-wrapper\" title=\"View\">\n                                                        <PiEye className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                    <span className=\"icon-wrapper\" title=\"Edit\">\n                                                        <AiOutlineEdit className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                    <span className=\"icon-wrapper\" title=\"Delete\">\n                                                        <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    )}\n\n                                </tbody>\n\n                            </table>\n\n                        </Card.Body>\n                    </Card>\n                    <div className=\"text-end\">\n                        <Button\n                            className=\"fw-bold cancel-button me-2\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button className=\"fw-bold custom-button\" type='submit'>{stockId?'Update':\"Submit\"}</Button>\n                    </div>\n                </div>\n            </Form>\n            <AddProductModal openingProducts={openingProducts} setOpeningProducts={setOpeningProducts} showModal={showModal} handleClose={handleClose} />\n        </div >\n    )\n}\n\nexport default AddStockIn"],"names":["AddStockIn","_store$stockInListRed","_store$stockInListRed2","_store$getWarehouseLi","_store$getWarehouseLi2","_store$listingUsersRe","_store$listingUsersRe2","_store$listingSupplie","_store$listingSupplie2","_selectedStock$produc2","_selectedStock$produc3","searchParams","useSearchParams","stockId","get","dispatch","useDispatch","handleSubmit","register","setValue","useForm","showModal","setShowModal","useState","store","useSelector","state","today","setToday","Date","toISOString","split","openingProducts","setOpeningProducts","StockInData","stockInListReducer","stockInList","response","selectedStock","setSelectedStock","Warehouse","getWarehouseListReducer","searchWarehouse","UsersList","listingUsersReducer","listingUsers","SupplierList","listingSupplierReducer","listingSupplier","isEditing","setIsEditing","editedQuantity","setEditedQuantity","inputRef","useRef","console","log","handleSave","handleEditClick","useEffect","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","length","foundStock","find","item","_id","warehouseOptions","map","warehouse","value","label","name","usersOptions","users","supplierOptions","selectedWarehouse","setSelectedWarehouse","selectedUser","setSelectedUser","selectedSupplier","setSelectedSupplier","isAccordionOpen","setIsAccordionOpen","_selectedStock$wareho","_selectedStock$wareho2","_selectedStock$receiv","_selectedStock$receiv2","_selectedStock$suppli","_selectedStock$suppli2","_selectedStock$produc","createdAt","updateWarehouses","warehouseData","warehouseId","ele","updatedUser","receivedByData","receivedBy","updatedSupplier","supplierId","supplierData","invoiceNumber","description","fright","invoiceAttachment","productData","stockInQty","getWarehouseListActions","listingUsersActions","listingSupplierActions","_jsxs","children","_jsx","PageTitle","breadCrumbItems","path","active","title","Form","onSubmit","data","_data$invoiceAttachme","cleanedProducts","_ref","product","rest","formData","FormData","File","append","parseInt","JSON","stringify","date","invoiceValue","alert","updateStockInActions","createStockInActions","className","id","style","border","type","onClick","handleAccordionToggle","prevState","Button","handleShow","disabled","IoIosAdd","Row","Col","sm","Group","Label","Select","onChange","selectedOption","options","placeholder","isClearable","required","Control","href","rel","as","rows","Card","boxShadow","Body","scope","code","ref","onKeyPress","key","width","display","marginTop","AiOutlineEdit","cursor","PiEye","RiDeleteBinLine","index","_data$product","_data$product2","quantity","colSpan","AddProductModal","handleClose"],"sourceRoot":""}
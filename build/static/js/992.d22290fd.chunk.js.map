{"version":3,"file":"static/js/992.d22290fd.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","helpers/Pagination.js","helpers/PageTitle.js","pages/shivay/inventory/modal/AddProductModal.js","pages/shivay/inventory/inventory.js"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null || onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null || onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null || onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n    onExit == null || onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null || onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null || onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>{size}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page <strong>{pageIndex} of {totalPages}</strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\r\n                        return <li key={page} className=\"page-ittotalPagesem disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useEffect, useState } from 'react'\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { createProductActions, updateProductActions } from '../../../../redux/actions';\n\nconst AddProductModal = ({ showModal, handleClose, ProductData }) => {\n\n    const { type } = ProductData;\n    const dispatch = useDispatch();\n    const {\n        handleSubmit,\n        register,\n        setValue,\n        reset,\n        formState: { errors },\n    } = useForm();\n\n    const [threshold, setThreshold] = useState(100);\n\n    const closeModal = () => {\n        reset();\n        handleClose()\n    }\n\n    useEffect(() => {\n\n        if (ProductData?.data) {\n\n            setValue('name', ProductData.data?.name)\n            setValue('model', ProductData.data?.modelData?.name)\n            setValue('code', ProductData.data?.code)\n            setValue('description', ProductData.data?.description)\n\n            setThreshold(Number(ProductData?.data?.lowestStock));\n\n        }\n    }, [ProductData]);\n\n    const onSubmit = (data) => {\n        const payload = {\n            name: data?.name,\n            modelName: data?.model,\n            code: data?.code,\n            description: data?.description,\n            lowestStock: threshold,\n        };\n        if (ProductData?.data?._id) {\n            const updatedData = {\n                ...payload,\n                productId: ProductData?.data?._id,\n            };\n            dispatch(updateProductActions(updatedData));\n        } else {\n        dispatch(createProductActions(payload));\n        }\n        console.log(payload, 'payload')\n        closeModal();\n    };\n\n    return (\n        <div>\n            <Modal show={showModal} centered size='lg' onHide={handleClose}>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title className='text-black'>{type} Product</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {/* Your form or content here */}\n                        <Row>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-1\">\n                                    <Form.Label className='mb-0'>Product Name</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Enter Product Name\"\n                                        name=\"Product Name\"\n                                        {...register(\"name\", { required: true })}\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-1\">\n                                    <Form.Label className='mb-0'>Model</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Enter Model\"\n                                        name=\"Model\"\n                                        {...register(\"model\", { required: true })}\n                                        required\n                                    />\n                                </Form.Group>\n\n                            </Col>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-1\">\n                                    <Form.Label className='mb-0'>Code</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Enter Code\"\n                                        name=\"Code\"\n                                        {...register(\"code\", { required: true })}\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"mb-1\">\n                                    <Form.Label className='mb-0'>Description</Form.Label>\n                                    <Form.Control\n                                        as=\"textarea\"\n                                        rows={3}\n                                        placeholder=\"Enter Description\"\n                                        name=\"Description\"\n                                        {...register(\"description\", { required: true })}\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-1\">\n                                    <Form.Label className='mb-5'>Low Stock Threshold</Form.Label>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <span>0</span>\n                                        <input\n                                            type=\"range\"\n                                            className=\"w-75\"\n                                            min=\"0\"\n                                            max=\"1000\"\n                                            step=\"100\"\n                                            defaultValue=\"100\"\n                                            onChange={(e) => setThreshold(Number(e.target.value))}\n                                        />\n                                        <span>1000</span>\n                                    </div>\n                                    {/* Display the current value */}\n                                    <div className=\"text-center mt-2\">\n                                        <strong>Current Threshold: {threshold}</strong>\n                                    </div>\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className='cancel-button' onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button className='custom-button' type='submit'>\n                            {type === 'Add' ? 'Save' : 'Update'}\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AddProductModal","import React, { useEffect, useState } from 'react'\nimport { Button, Card, Col, Form, Modal, Row } from 'react-bootstrap'\nimport { IoIosAdd } from \"react-icons/io\";\nimport PageTitle from '../../../helpers/PageTitle';\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport AddProductModal from './modal/AddProductModal';\nimport { deleteProductActions, getProductListActions } from '../../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport Pagination from '../../../helpers/Pagination';\n\nconst Inventory = () => {\n\n    const dispatch = useDispatch();\n    const [showModal, setShowModal] = useState(false);\n    const [showConfirm, setShowConfirm] = useState(false);\n    const [productToDelete, setProductToDelete] = useState(null);\n    const totalRecords = '0';\n    const [pageIndex, setPageIndex] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [totalPages, setTotalPages] = useState(Math.ceil(totalRecords / pageSize));\n    const [search, setSearch] = useState('')\n    const handleShow = () => setShowModal(true);\n    const store = useSelector((state) => state)\n    const ProductData = store?.productListReducer?.productList?.response;\n    console.log(ProductData, 'ProductData')\n    const createResponse = store?.createProductReducer?.createProduct?.status;\n    const updateResponse = store?.updateProductReducer?.updateProduct?.status;\n    const deleteResponse = store?.deleteProductReducer?.deleteProduct?.status;\n\n    useEffect(() => {\n        dispatch(getProductListActions({\n            limit: pageSize,\n            page: pageIndex,\n            search: search,\n            stockFilter: true,\n        }));\n    }, [dispatch, search, pageSize, pageIndex]);\n\n    useEffect(() => {\n        if (createResponse === 200 || updateResponse === 200 || deleteResponse === 200) {\n            dispatch(getProductListActions({\n                limit: pageSize,\n                page: pageIndex,\n                search: search,\n                stockFilter: true,\n            }));\n        }\n    }, [createResponse, updateResponse, deleteResponse]);\n\n    const handleDelete = () => {\n        dispatch(deleteProductActions({ productId: productToDelete }));\n        setShowConfirm(false);\n    };\n\n    const [showProductModal, setShowProductModal] = useState({\n        data: null,\n        type: null,\n        status: false\n    })\n\n    useEffect(() => {\n        setTotalPages(Math.ceil(totalRecords / pageSize));\n    },\n        [totalRecords, pageSize]);\n\n    const handleUserModal = (productDetails, modalType, modalStatus) => {\n        setShowProductModal({ ...showProductModal, data: productDetails, type: modalType, status: modalStatus })\n    }\n    const handleClose = () => {\n        setShowProductModal({ ...showProductModal, data: null, status: false })\n    }\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Inventory\", path: \"/shivay/inventory\" },\n                    { label: \"Inventory\", path: \"/shivay/inventory\", active: true },\n                ]}\n                title={\"Inventory\"}\n            />\n            <Form>\n                <Row>\n                    <Col sm={12}>\n                        <div className='d-flex justify-content-end mt-1'>\n                            <input\n                                type=\"text\"\n                                className=\"form-control w-auto me-2\"\n                                style={{ height: '42px', marginTop: '10px' }}\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={(e) => setSearch(e.target.value)}\n                            />\n                            <Button className=\"mt-2 fw-bold custom-button\" onClick={handleShow}>\n                                <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                            </Button>\n                        </div>\n                    </Col>\n\n                    <div className='mt-2'>\n                        <Card\n                            style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                        >\n                            <Card.Body className=\"text-center py-1\">\n                                <table className=\"table table-striped bg-white mb-0\">\n                                    <thead>\n                                        <tr className=\"table_header\">\n                                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                            <th scope=\"col\">Product Name</th>\n                                            <th scope=\"col\">Modal</th>\n                                            <th scope=\"col\">Code</th>\n                                            <th scope=\"col\">Qty</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {ProductData?.map((data, index) => (\n                                            <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td className=\"text-uppercase fw-bold \">\n                                                    {data?.name || <span className=\"text-danger\">N/A</span>}\n                                                </td>\n                                                <td className=\"text-uppercase fw-bold \">\n                                                    {data?.modelData?.name || <span className=\"text-danger\">N/A</span>}\n                                                </td>\n                                                <td className=\"text-uppercase fw-bold \">\n                                                    {data?.code || <span className=\"text-danger\">N/A</span>}\n                                                </td>\n                                                <td className=\"text-uppercase fw-bold \">\n                                                    {data?.quantity !== undefined ? data.quantity : <span className=\"text-danger\">N/A</span>}\n                                                </td>\n                                                <td ></td>\n                                                <div className=\"icon-container d-flex  pb-0\" >\n                                                    <span className=\"icon-wrapper\" title=\"Edit\">\n                                                        <AiOutlineEdit\n                                                            className=\"fs-4 text-black\"\n                                                            style={{ cursor: 'pointer' }}\n                                                            onClick={() => handleUserModal(data, 'Edit', true)}\n                                                        />\n                                                    </span>\n                                                    <span className=\"icon-wrapper\" title=\"Delete\" onClick={() => { setProductToDelete(data?._id); setShowConfirm(true); }}>\n                                                        <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                </div>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                                <Pagination\n                                    pageIndex={pageIndex}\n                                    pageSize={pageSize}\n                                    totalPages={useSelector((state) => state?.productListReducer?.productList?.totalPages)}\n                                    setPageIndex={setPageIndex}\n                                    onChangePageSize={setPageSize}\n                                />\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </Row>\n            </Form>\n\n            <AddProductModal showModal={showProductModal?.status} handleClose={handleClose} ProductData={showProductModal} />\n\n            {/* delete modal */}\n            <Modal show={showConfirm} onHide={() => setShowConfirm(false)} >\n                <Modal.Body className='text-center'>\n                    <h4 className='text-black'>Confirm Deletion</h4>\n                    <p className='mt-2 mb-3'> Are you sure you want to delete this User?</p>\n                    <span className='bg-light rounded-circle p-3 '>\n                        <MdDeleteOutline className='fs-1  text-danger' />\n                    </span>\n                    <div className='d-flex justify-content-center mt-3 gap-2'>\n                        <Button className='cancel-button' onClick={() => setShowConfirm(false)}>\n                            Cancel\n                        </Button>\n                        <Button className='custom-button' onClick={handleDelete}>\n                            Delete\n                        </Button>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Inventory"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","ModalBody","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","ModalDialog","contentClassName","centered","fullscreen","children","scrollable","dialogClass","fullScreenClass","ModalFooter","ModalHeader","closeLabel","closeButton","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","ariaLabel","show","animation","backdrop","keyboard","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalStyle","setStyle","useState","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","removeEventListener","window","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","Provider","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","Object","assign","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","Math","max","_jsxs","onChange","newSize","Number","map","type","placeholder","min","enteredPage","Link","to","Array","from","length","_","i","page","isCurrentPage","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","showModal","handleClose","ProductData","dispatch","useDispatch","handleSubmit","register","setValue","reset","formState","errors","useForm","threshold","setThreshold","_ProductData$data","_ProductData$data2","_ProductData$data2$mo","_ProductData$data3","_ProductData$data4","_ProductData$data5","data","name","modelData","code","description","lowestStock","Form","onSubmit","_ProductData$data6","payload","modelName","model","_id","_ProductData$data7","updatedData","productId","updateProductActions","createProductActions","console","log","sm","Group","Label","Control","required","rows","step","defaultValue","Button","Inventory","_store$productListRed","_store$productListRed2","_store$createProductR","_store$createProductR2","_store$updateProductR","_store$updateProductR2","_store$deleteProductR","_store$deleteProductR2","setShowModal","showConfirm","setShowConfirm","productToDelete","setProductToDelete","setPageSize","setTotalPages","ceil","search","setSearch","store","useSelector","state","productListReducer","productList","response","createResponse","createProductReducer","createProduct","status","updateResponse","updateProductReducer","updateProduct","deleteResponse","deleteProductReducer","deleteProduct","getProductListActions","limit","stockFilter","showProductModal","setShowProductModal","PageTitle","marginTop","handleShow","IoIosAdd","Card","boxShadow","scope","_data$modelData","quantity","AiOutlineEdit","cursor","handleUserModal","productDetails","modalType","modalStatus","RiDeleteBinLine","Pagination","_state$productListRed","_state$productListRed2","AddProductModal","MdDeleteOutline","handleDelete","deleteProductActions"],"sourceRoot":""}
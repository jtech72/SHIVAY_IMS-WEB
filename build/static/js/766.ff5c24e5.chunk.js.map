{"version":3,"file":"static/js/766.ff5c24e5.chunk.js","mappings":"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","sources":["pages/shivay/dispatch/addDispatch/AddDispatch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PageTitle from '../../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap'\nimport Select from 'react-select'; // Import React Select\nimport { IoIosAdd } from 'react-icons/io';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport AddProductModal from '../../openingStock/addStock/AddProductModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createDispatchActions, getWarehouseListActions, listingCustomerActions, listingUsersActions } from '../../../../redux/actions';\nimport { useForm } from 'react-hook-form';\n\nconst AddDispatch = () => {\n\n    const dispatch = useDispatch();\n    const { handleSubmit, register } = useForm()\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n    const store = useSelector((state) => state)\n    const today = new Date().toISOString().split('T')[0];\n    const [openingProducts, setOpeningProducts] = useState([])\n    console.log(openingProducts, 'openingProducts')\n\n    const Warehouse = store?.getWarehouseListReducer?.searchWarehouse?.response;\n    const UsersList = store?.listingUsersReducer?.listingUsers?.response;\n    const CustomerList = store?.listingCustomerReducer?.listingCustomer?.response;\n\n    const warehouseOptions = Warehouse?.map((warehouse) => ({\n        value: warehouse._id,\n        label: warehouse.name,\n    }));\n\n    const usersOptions = UsersList?.map((users) => ({\n        value: users._id,\n        label: users.name,\n    }));\n\n    const customerOptions = CustomerList?.map((customer) => ({\n        value: customer._id,\n        label: customer.name,\n    }));\n\n    // State to handle selected warehouse\n    const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n    const [isAccordionOpen, setIsAccordionOpen] = useState(false);\n\n    const handleAccordionToggle = () => {\n        setIsAccordionOpen(prevState => !prevState);\n    };\n    const handleWarehouseChange = (selectedOption) => {\n        setSelectedWarehouse(selectedOption);\n    };\n\n    const handleUserChange = (selectedUser) => {\n        setSelectedUser(selectedUser);\n    };\n\n    const handleCustomerChange = (selectedCustomer) => {\n        setSelectedCustomer(selectedCustomer);\n    };\n\n    useEffect(() => {\n        dispatch(getWarehouseListActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingUsersActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingCustomerActions());\n    }, [dispatch]);\n\n    const onSubmit = (data) => {\n\n        const cleanedProducts = openingProducts.map(({ product, ...rest }) => rest);\n\n        const formData = new FormData();\n        if (data?.attachmentGRfile?.[0] instanceof File) {\n            formData.append('attachmentGRfile', data.attachmentGRfile[0]);\n        }\n\n        formData.append('warehouseId', selectedWarehouse?.value)\n        formData.append('dispatchBy', selectedUser?.value);\n        formData.append('customerId', selectedCustomer?.value);\n        formData.append('productDispatchQty', JSON.stringify(cleanedProducts));\n        formData.append('description', data?.description);\n        formData.append('date', data?.date);\n        formData.append('grNumber', data?.grNumber);\n\n        dispatch(createDispatchActions(formData));\n        console.log(formData, 'formData');\n    };\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Dispatch List\", path: \"/shivay/dispatch\" },\n                    { label: \"Add Dispatch \", path: \"/shivay/dispatch\", active: true },\n                ]}\n                title={\"Add Dispatch\"}\n            />\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"accordion mb-3\" id=\"accordionExample\">\n                    <div className=\"accordion-item\" style={{ border: '2px solid #6655D9' }}>\n                        <h2 className=\"accordion-header mt-0\">\n                            <button\n                                className=\"accordion-button py-1 d-flex justify-content-between align-items-center w-100\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#collapseOne\"\n                                aria-expanded={isAccordionOpen ? \"true\" : \"false\"}\n                                aria-controls=\"collapseOne\"\n                                onClick={handleAccordionToggle}\n                            >\n                                <div className=\"flex-grow-1 text-black fw-bold\"> Add Dispatch Details</div>\n\n                                <div className=\"d-flex\">\n                                    <Button\n                                        className=\"fw-bold custom-button me-2\"\n                                        onClick={handleShow}\n                                        disabled={!isAccordionOpen}\n                                    >\n                                        <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                                    </Button>\n                                </div>\n                            </button>\n                        </h2>\n                        <div\n                            id=\"collapseOne\"\n                            className={`accordion-collapse collapse ${isAccordionOpen ? \"show\" : \"\"}`}\n                            data-bs-parent=\"#accordionExample\"\n                        >\n                            <div className=\"accordion-body py-1\">\n                                <Form>\n                                    <Row>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className='mb-0'>Warehouse</Form.Label>\n                                                <Select\n                                                    value={selectedWarehouse}\n                                                    onChange={handleWarehouseChange}\n                                                    options={warehouseOptions}\n                                                    placeholder=\"Select a warehouse\"\n                                                    isClearable\n                                                    required\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">Customer</Form.Label>\n                                                <Select\n                                                    value={selectedCustomer}\n                                                    onChange={handleCustomerChange}\n                                                    options={customerOptions}\n                                                    placeholder=\"Select a Customer\"\n                                                    isClearable\n                                                    required\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">Dispatch By</Form.Label>\n                                                <Select\n                                                    value={selectedUser}\n                                                    onChange={handleUserChange}\n                                                    options={usersOptions}\n                                                    placeholder=\"Select a User\"\n                                                    isClearable\n                                                    required\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className='mb-0'>Date Range</Form.Label>\n                                                <Form.Control\n                                                    type=\"date\"\n                                                    defaultValue={today}\n                                                    {...register('date', { required: true })}\n                                                    required\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">GR Number</Form.Label>\n                                                <Form.Control\n                                                    type=\"number\"\n                                                    placeholder=\"Enter Invoice Number\"\n                                                    {...register('grNumber', { required: true })}\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">Attach GR File</Form.Label>\n                                                <Form.Control\n                                                    type=\"file\"\n                                                    placeholder=\"Upload file\"\n                                                    required\n                                                    {...register('attachmentGRfile', { required: true })}\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">Description</Form.Label>\n                                                <Form.Control\n                                                    as=\"textarea\"\n                                                    rows={1}\n                                                    placeholder=\"Enter Description\"\n                                                    {...register('description', { required: true })}\n                                                />\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                </Form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='mt-2'>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center py-1\">\n                            <table className=\"table table-striped bg-white\">\n                                <thead>\n                                    <tr className=\"table_header\">\n                                        <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                        <th scope=\"col\">Product Name</th>\n                                        <th scope=\"col\">Modal</th>\n                                        <th scope=\"col\">Code</th>\n                                        <th scope=\"col\">Quantity</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {openingProducts && openingProducts.length > 0 ? (\n                                        openingProducts.map((data, index) => (\n                                            <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td className=\"text-uppercase fw-bold\">\n                                                    {data?.product?.name || <span className=\"text-danger\">N/A</span>}\n                                                </td>\n                                                <td className=\"fw-bold\">\n                                                    {data?.product?.modelId?.name || <span className=\"text-danger\">N/A</span>}\n                                                </td>\n                                                <td className=\"fw-bold\">\n                                                    {data?.product?.code || <span className=\"text-danger\">N/A</span>}\n                                                </td>\n                                                <td className=\"fw-bold\">\n                                                    {data?.quantity || <span className=\"text-danger\">N/A</span>}\n                                                </td>\n                                                <td></td>\n                                                {/* <td></td> */}\n                                                <div className=\"icon-container d-flex pb-0\">\n                                                    <span className=\"icon-wrapper\" title=\"Edit\">\n                                                        <AiOutlineEdit className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                    <span className=\"icon-wrapper\" title=\"Delete\">\n                                                        <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                </div>\n                                            </tr>\n                                        ))\n                                    ) : (\n                                        <tr>\n                                            <td colSpan=\"6\" className=\"text-center text-muted py-3\">\n                                                No products added yet. Please add products to add dispatch.\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n\n                        </Card.Body>\n                    </Card>\n                    <div className=\"text-end\">\n                        <Button\n                            className=\"fw-bold cancel-button me-2\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button className=\"fw-bold custom-button\" type='submit'>Submit</Button>\n                    </div>\n                </div>\n            </Form>\n\n            <AddProductModal selectedWarehouse={selectedWarehouse} openingProducts={openingProducts} setOpeningProducts={setOpeningProducts} showModal={showModal} handleClose={handleClose} />\n        </div>\n    )\n}\n\nexport default AddDispatch"],"names":["AddDispatch","_store$getWarehouseLi","_store$getWarehouseLi2","_store$listingUsersRe","_store$listingUsersRe2","_store$listingCustome","_store$listingCustome2","dispatch","useDispatch","handleSubmit","register","useForm","showModal","setShowModal","useState","store","useSelector","state","today","Date","toISOString","split","openingProducts","setOpeningProducts","console","log","Warehouse","getWarehouseListReducer","searchWarehouse","response","UsersList","listingUsersReducer","listingUsers","CustomerList","listingCustomerReducer","listingCustomer","warehouseOptions","map","warehouse","value","_id","label","name","usersOptions","users","customerOptions","customer","selectedWarehouse","setSelectedWarehouse","selectedUser","setSelectedUser","selectedCustomer","setSelectedCustomer","isAccordionOpen","setIsAccordionOpen","useEffect","getWarehouseListActions","listingUsersActions","listingCustomerActions","_jsxs","children","_jsx","PageTitle","breadCrumbItems","path","active","title","Form","onSubmit","data","_data$attachmentGRfil","cleanedProducts","_ref","product","rest","formData","FormData","attachmentGRfile","File","append","JSON","stringify","description","date","grNumber","createDispatchActions","className","id","style","border","type","onClick","handleAccordionToggle","prevState","Button","handleShow","disabled","IoIosAdd","Row","Col","sm","Group","Label","Select","onChange","selectedOption","options","placeholder","isClearable","required","Control","defaultValue","as","rows","Card","boxShadow","Body","scope","length","index","_data$product","_data$product2","_data$product2$modelI","_data$product3","modelId","code","quantity","AiOutlineEdit","cursor","RiDeleteBinLine","colSpan","AddProductModal","handleClose"],"sourceRoot":""}
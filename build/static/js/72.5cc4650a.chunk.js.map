{"version":3,"file":"static/js/72.5cc4650a.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","helpers/PageTitle.js","pages/shivay/openingStock/addStock/AddOpeningStock.js","pages/shivay/openingStock/addStock/AddProductModal.js"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null || onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null || onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null || onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null || removeStaticModalAnimationRef.current();\n    onExit == null || onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null || onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null || onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useEffect, useRef, useState } from 'react'\nimport PageTitle from '../../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap'\nimport Select from 'react-select';\nimport { IoIosAdd } from 'react-icons/io';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport AddProductModal from './AddProductModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createStockActions, getStockListActions, getWarehouseListActions, updateStockActions } from '../../../../redux/actions';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nconst AddOpeningStock = () => {\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const { handleSubmit, register, setValue } = useForm()\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n    const store = useSelector((state) => state)\n    const [today,setToday] = useState(new Date().toISOString().split('T')[0]);\n    const [searchParams] = useSearchParams();\n    const stockId = searchParams.get('Id');\n    const isEditMode = Boolean(stockId);\n    const StockInData = store?.stockListReducer?.stockList?.response;\nconsole.log(StockInData,'1232232')\n    const Warehouse = store?.getWarehouseListReducer?.searchWarehouse?.response;\n    const warehouseOptions = Warehouse?.map((warehouse) => ({\n        value: warehouse._id,\n        label: warehouse.name,\n    }));\n\n    const [openingProducts, setOpeningProducts] = useState([])\n    const [selectedStock, setSelectedStock] = useState(null);\n    console.log(openingProducts, 'openingProducts')\n    const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedQuantity, setEditedQuantity] = useState(selectedStock?.quantity || '');\n    const inputRef = useRef(null);\n\n    const createResponse = store?.createStockReducer?.createStock?.status;\n    // console.log(store?.createStockReducer, 'createResponse')\n\n    useEffect(() => {\n            if (createResponse === 200) {\n                navigate(\"/shivay/openingStock\");\n            }\n        }, [createResponse]);\n\n    const handleWarehouseChange = (selectedOption) => {\n        setSelectedWarehouse(selectedOption);\n    };\n\n    useEffect(() => {\n        dispatch(getWarehouseListActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n\n        dispatch(getStockListActions({\n            limit: '',\n            page: '',\n            search: '',\n        }));\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (stockId && StockInData?.length > 0) {\n            const foundStock = StockInData?.find(item => item._id === stockId);\n            setSelectedStock(foundStock);\n        }\n    }, [stockId, StockInData]);\n\n    console.log(StockInData, 'StockInData')\n\n    const onSubmit = (data) => {\n        const cleanedProducts = openingProducts.map(({ product, ...rest }) => rest);\n\n        const payload = {\n            warehouseId: selectedWarehouse?.value,\n            ...(!stockId&&{productStock: cleanedProducts}),\n            description: data?.description,\n            date: data?.date\n        };\n        if (stockId) {\n            dispatch(updateStockActions({ ...payload, _id:stockId, quantity: editedQuantity }));\n        } else {\n        dispatch(createStockActions(payload));\n        }\n    };\n\n    const handleDeleteProduct = (indexToRemove) => {\n        const updatedProducts = openingProducts.filter((_, index) => index !== indexToRemove);\n        setOpeningProducts(updatedProducts);\n    };\n\n    useEffect(() => {\n\n        if (selectedStock) {\n            setEditedQuantity(selectedStock?.quantity || '');\n            const updateWarehouses = selectedStock?.warehouseData\n                ? [{ value: selectedStock.warehouseData._id, label: selectedStock.warehouseData.name }]\n                : [];\n\n            setSelectedWarehouse(updateWarehouses)\n            setToday(selectedStock?.date?new Date(selectedStock?.date).toISOString().split('T')[0]:'')\nconsole.log(selectedStock?.date,'selectedStock?.date')\n\n  \n              setValue('description', selectedStock?.description)\n        }\n    }, [selectedStock]);\n    console.log(selectedStock, 'selectedStock')\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n\n    // Handle input change\n    const handleQuantityChange = (e) => {\n        setEditedQuantity(e.target.value);\n    };\n\n    // Handle save (when clicking outside or pressing Enter)\n    const handleSave = () => {\n        setIsEditing(false);\n        // Here you would typically also call an API to update the quantity in your backend\n    };\n\n    // Handle key press (for Enter key)\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSave();\n        }\n    };\n\n    // Close the input when clicking outside\n    useEffect(() => {\n        const handleClickOutside = (e) => {\n            if (inputRef.current && !inputRef.current.contains(e.target)) {\n                handleSave();\n            }\n        };\n\n        if (isEditing) {\n            document.addEventListener('mousedown', handleClickOutside);\n            return () => {\n                document.removeEventListener('mousedown', handleClickOutside);\n            };\n        }\n    }, [isEditing]);\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Opening Stock List\", path: \"/shivay/openingStock\" },\n                    { label: isEditMode ? \"Edit Opening Stock\" : \"Add Opening Stock\", path: \"/shivay/openingStock\", active: true },\n                ]}\n                title={isEditMode ? \"Edit Opening Stock\" : \"Add Opening Stock\"}\n            />\n\n\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Row>\n                    <Col sm={3}>\n                        <Form.Group className=\"mb-1\">\n                            <Form.Label className='mb-0'>Warehouse</Form.Label>\n                            <Select\n                                value={selectedWarehouse}\n                                onChange={handleWarehouseChange}\n                                options={warehouseOptions}\n                                placeholder=\"Select a warehouse\"\n                                isClearable\n                                required\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col sm={3}>\n                        <Form.Group className=\"mb-1\">\n                            <Form.Label className='mb-0'>Date Range</Form.Label>\n                            <Form.Control\n                                type=\"date\"\n                                value={today}\n                                {...register('date', { required: true })}\n                                onChange={(e) => setToday( e.target.value)}\n                                required\n                            />\n                        </Form.Group>\n                    </Col>\n\n                    <Col sm={3}>\n                        <Form.Group className=\"mb-1\">\n                            <Form.Label className='mb-0'>Description</Form.Label>\n                            <Form.Control\n                                as='textarea'\n                                rows={1}\n                                {...register('description', { required: true })}\n                                placeholder='Enter Description'\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col sm={3} className='text-end mt-1'>\n                        {!isEditMode && <Button className=\"mt-2 fw-bold custom-button\"\n                            onClick={handleShow}\n                        >\n                            <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                        </Button>}\n                    </Col>\n                </Row>\n\n                <div className='mt-2'>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center py-1\">\n                            <table className=\"table table-striped bg-white\">\n                                <thead>\n                                    <tr className=\"table_header\">\n                                        <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                        <th scope=\"col\">Product Name</th>\n                                        <th scope=\"col\">Code</th>\n                                        <th scope=\"col\">Quantity</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {stockId ?\n                                        <>{[selectedStock] && [selectedStock]?.length > 0 ? (\n                                            [selectedStock]?.map((data, index) => (\n                                                <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td className=\"text-uppercase fw-bold\">\n                                                        {data?.productData?.name || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.productData?.code || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold px-0 pb-0\">\n                                                        {isEditing ? (\n                                                            <input\n                                                                ref={inputRef}\n                                                                type=\"number\"  // or \"text\" depending on your needs\n                                                                value={editedQuantity}\n                                                                onChange={handleQuantityChange}\n                                                                onKeyPress={handleKeyPress}\n                                                                // autoFocus\n                                                                className=\"form-control form-control-md\"\n                                                                style={{ width: '5vw', display: 'inline-block', marginTop: '-10px' }}\n                                                            />\n                                                        ) : (\n                                                            <span onClick={handleEditClick} >{editedQuantity}</span> || <span className=\"text-black\">-</span>\n                                                        )}\n                                                    </td>\n\n                                                    <div className=\"icon-container d-flex pb-0\">\n                                                        <span\n                                                            className=\"icon-wrapper me-4\"\n                                                            title=\"Edit\"\n                                                            onClick={handleEditClick}\n                                                        >\n                                                            <AiOutlineEdit className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                        </span>\n                                                    </div>\n                                                </tr>\n                                            ))\n                                        ) : (\n                                            <tr>\n                                                <td colSpan=\"6\" className=\"text-center text-muted py-3\">\n                                                    No products added yet. Please add products to add opening stock.\n                                                </td>\n                                            </tr>\n                                        )}</>\n                                        : <>\n                                            {openingProducts && openingProducts.length > 0 ? (\n                                                openingProducts?.map((data, index) => (\n                                                    <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td className=\"text-uppercase fw-bold\">\n                                                            {data?.product?.name || <span className=\"text-black\">-</span>}\n                                                        </td>\n                                                        <td className=\"fw-bold\">\n                                                            {data?.product?.code || <span className=\"text-black\">-</span>}\n                                                        </td>\n                                                        <td className=\"fw-bold\">\n                                                            {data?.quantity || <span className=\"text-black\">-</span>}\n                                                        </td>\n\n                                                        <div className=\"icon-container d-flex pb-0\">\n                                                            {/* <span className=\"icon-wrapper\" title=\"Edit\">\n                                                                <AiOutlineEdit className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                            </span> */}\n                                                            <span className=\"icon-wrapper me-4\" title=\"Delete\" onClick={() => handleDeleteProduct(index)}>\n                                                                <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                            </span>\n                                                        </div>\n                                                    </tr>\n                                                ))\n                                            ) : (\n                                                <tr>\n                                                    <td colSpan=\"6\" className=\"text-center text-danger py-3\">\n                                                       Note : No products added yet. Please add products to add opening stock.\n                                                    </td>\n                                                </tr>\n                                            )}\n                                        </>\n                                    }\n                                </tbody>\n                            </table>\n\n                        </Card.Body>\n                    </Card>\n                    <div className=\"text-end\">\n                        <Button\n                            className=\"fw-bold cancel-button me-2\"\n                            onClick={() => navigate(\"/shivay/openingStock\")}\n                        >\n                            Cancel\n                        </Button>\n                        <Button className=\"fw-bold custom-button\" type='submit'>\n                            {isEditMode ? \"Update\" : \"Submit\"}\n                        </Button>\n                    </div>\n                </div>\n            </Form>\n\n            <AddProductModal openingProducts={openingProducts} setOpeningProducts={setOpeningProducts} showModal={showModal} handleClose={handleClose} />\n\n        </div>\n    )\n}\n\nexport default AddOpeningStock","import React, { useEffect, useState } from 'react'\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Select from 'react-select'; // Import React Select\nimport { createStockCheckActions, searchProductActions } from '../../../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport ToastContainer from '../../../../helpers/toast/ToastContainer';\nimport { useLocation } from 'react-router-dom';\n\nconst AddProductModal = ({ showModal, handleClose, openingProducts, setOpeningProducts, selectedWarehouse }) => {\n\n    const dispatch = useDispatch();\n    const { handleSubmit, register, reset } = useForm()\n    const store = useSelector((state) => state)\n    const ProductSearch = store?.searchProductReducer?.searchProduct?.response;\n    const StockCheck = store?.createStockCheckReducer?.createStockCheck;\n    console.log(StockCheck, 'StockCheck')\n    const [searchTerm, setSearchTerm] = useState('');\n    const [productName, setProductName] = useState('');\n    const [quantity, setQuantity] = useState()\n    const location = useLocation()\n    console.log(ProductSearch,'ProductSearch')\n\n    const [searchType, setSearchType] = useState('modelName'); // default search type\n    useEffect(() => {\n        if (location.pathname === '/shivay/addDispatch' && quantity) {\n            dispatch(createStockCheckActions({\n                warehouseId: selectedWarehouse?.value, qty: quantity, productId: ProductSearch?.[0]?._id\n            }))\n        }\n    }, [location, quantity])\n    useEffect(() => {\n        const delayDebounceFn = setTimeout(() => {\n            if (searchTerm) {\n                if (searchType === 'modelName') {\n                    dispatch(searchProductActions({ modelName: searchTerm }));\n                } else if (searchType === 'code') {\n                    dispatch(searchProductActions({ code: searchTerm }));\n                }\n            }\n        }, 500);\n\n        return () => clearTimeout(delayDebounceFn);\n    }, [searchTerm, dispatch, searchType]);\n\n    const modalOptions = ProductSearch?.map((data) => ({\n        value: data?._id,\n        label: data?.modelId?.name,\n        data: data\n    })) || [];\n\n    const codeOptions = ProductSearch?.map((data) => ({\n        value: data?._id,\n        label: data?.code,\n        data: data\n    })) || []\n\n    // State to handle selected options\n    const [selectedModal, setSelectedModal] = useState(null);\n    console.log(selectedModal, 'selectedModalselectedModal')\n    const [selectedCode, setSelectedCode] = useState(null);\n    console.log(selectedCode, 'selectedCode')\n\n    // Handle changes in modal selection\n    const handleModalChange = (selectedOption) => {\n        setSelectedModal(selectedOption);\n        setSelectedCode({\n            value: selectedOption?.data?._id,\n            label: selectedOption?.data?.code,\n            data: selectedOption?.data\n\n        });\n        setProductName(selectedOption?.data?.name);\n    };\n\n    const handleCodeChange = (selectedOption) => {\n        setSelectedCode(selectedOption);\n        setSelectedModal({\n            value: selectedOption?.data?._id,\n            label: selectedOption?.data?.modelId?.name,\n            data: selectedOption?.data\n        });\n        setProductName(selectedOption?.data?.name);\n    };\n\n    useEffect(() => {\n        dispatch(searchProductActions());\n    }, [dispatch]);\n\n    const loadModalOptions = async (inputValue) => {\n        if (!inputValue) return [];\n\n        console.log(inputValue, 'inputValue')\n        dispatch(searchProductActions({ modelName: inputValue }))\n    };\n\n    const onSubmit = (data) => {\n        if (openingProducts?.some((data) => data?.productId === selectedModal?.value)) {\n            ToastContainer('Product Already Exist', 'danger')\n        } else {\n            const productsData = {\n                productId: selectedModal?.value,\n                quantity: quantity,\n                product: selectedModal?.data\n            }\n            console.log(productsData, 'productsData')\n\n            setOpeningProducts(prev => [...prev, productsData]);\n            handleClose();\n            reset();\n            setSelectedCode('');\n            setSelectedModal('');\n            setQuantity('');\n        }\n    }\n    console.log(ProductSearch, 'ProductSearch')\n    console.log(StockCheck, '0987')\n    return (\n        <div>\n            <Modal show={showModal} centered size='lg' onHide={handleClose} backdrop=\"static\" keyboard={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title className='text-black'>Add Product</Modal.Title>\n                </Modal.Header>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    <Modal.Body>\n                        {/* Your form or content here */}\n                        <Row>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label className=\"mb-0\">Search By</Form.Label>\n                                    <Form.Select\n                                        value={searchType}\n                                        onChange={(e) => {\n                                            setSearchType(e.target.value);\n                                            setSearchTerm(''); // clear input\n                                            setSelectedModal(null);\n                                            setSelectedCode(null);\n                                            setProductName('');\n                                        }}\n                                    >\n                                        <option value=\"modelName\">Model</option>\n                                        <option value=\"code\">Code</option>\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n\n                            {searchType === 'modelName' ? (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Model Name</Form.Label>\n                                        <Select\n                                            value={selectedModal}\n                                            onChange={handleModalChange}\n                                            onInputChange={(inputValue) => setSearchTerm(inputValue)}\n                                            options={modalOptions}\n                                            placeholder=\"Search Modal\"\n                                            isClearable\n                                            isSearchable\n                                            isLoading={store?.searchProductReducer?.loading}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            ) : (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Code</Form.Label>\n                                        <Select\n                                            value={selectedCode}\n                                            onChange={handleCodeChange}\n                                            onInputChange={(inputValue) => setSearchTerm(inputValue)}\n                                            options={codeOptions}\n                                            placeholder=\"Search Code\"\n                                            isClearable\n                                            isSearchable\n                                            isLoading={store?.searchProductReducer?.loading}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            )}\n                            {searchType === 'modelName' ? (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\" >Code</Form.Label>\n                                        <Form.Control type='text' placeholder=\"Code\" value={selectedCode?.label} />\n                                    </Form.Group>\n                                </Col>\n                            ) : (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\" >Model Name</Form.Label>\n                                        <Form.Control type='text' placeholder=\"Modal Name\" value={selectedModal?.label} />\n                                    </Form.Group>\n                                </Col>\n                            )}\n\n                            {(selectedModal || selectedCode) && (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Product Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={productName}\n                                            placeholder=\"Enter Product Name\"\n                                            onChange={(e) => setProductName(e.target.value)}\n                                            required\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            )}\n\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label className=\"mb-0\">Quantity</Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        placeholder=\"Enter Number\"\n                                        value={quantity}\n                                        onChange={(e) => {\n                                            const val = parseInt(e.target.value);\n                                            setQuantity(val > 0 ? val : '');\n                                        }}\n                                        required\n                                        min={1}\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n                        {StockCheck?.status==400 && location.pathname === '/shivay/addDispatch' && (\n                            <Row className=\"px-2\">\n                                <div className=\"py-1 text-center border border-primary rounded bg-light text-primary\">\n                                    {StockCheck?.error || JSON.stringify(StockCheck)}\n                                </div>\n                            </Row>\n                        )}\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className='cancel-button' onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button type='submit' className='custom-button' >\n                            Save\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AddProductModal"],"names":["size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","ModalBody","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","ModalDialog","contentClassName","centered","fullscreen","children","scrollable","dialogClass","fullScreenClass","ModalFooter","ModalHeader","closeLabel","closeButton","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","ariaLabel","show","animation","backdrop","keyboard","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","modalStyle","setStyle","useState","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","removeEventListener","window","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","Provider","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","Object","assign","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","Row","Col","_jsxs","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","color","label","path","title","AddOpeningStock","_store$stockListReduc","_store$stockListReduc2","_store$getWarehouseLi","_store$getWarehouseLi2","_store$createStockRed","_store$createStockRed2","_ref2","_ref3","dispatch","useDispatch","navigate","useNavigate","handleSubmit","register","setValue","useForm","showModal","setShowModal","store","useSelector","state","today","setToday","Date","toISOString","split","searchParams","useSearchParams","stockId","get","isEditMode","Boolean","StockInData","stockListReducer","stockList","response","console","log","Warehouse","getWarehouseListReducer","searchWarehouse","warehouseOptions","warehouse","_id","name","openingProducts","setOpeningProducts","selectedStock","setSelectedStock","selectedWarehouse","setSelectedWarehouse","isEditing","setIsEditing","editedQuantity","setEditedQuantity","quantity","inputRef","createResponse","createStockReducer","createStock","status","getWarehouseListActions","getStockListActions","limit","page","search","length","foundStock","find","updateWarehouses","warehouseData","date","description","handleEditClick","handleQuantityChange","handleSave","handleKeyPress","key","handleClickOutside","contains","PageTitle","Form","onSubmit","data","cleanedProducts","product","rest","payload","warehouseId","productStock","updateStockActions","createStockActions","sm","Group","Label","Select","onChange","selectedOption","options","placeholder","isClearable","required","Control","type","rows","Button","handleShow","IoIosAdd","Card","boxShadow","scope","_Fragment","_data$productData","_data$productData2","productData","code","onKeyPress","marginTop","AiOutlineEdit","cursor","colSpan","_data$product","_data$product2","indexToRemove","updatedProducts","filter","_","handleDeleteProduct","RiDeleteBinLine","AddProductModal","handleClose","_store$searchProductR","_store$searchProductR2","_store$createStockChe","_store$searchProductR3","_store$searchProductR4","reset","ProductSearch","searchProductReducer","searchProduct","StockCheck","createStockCheckReducer","createStockCheck","searchTerm","setSearchTerm","productName","setProductName","setQuantity","location","useLocation","searchType","setSearchType","_ProductSearch$","pathname","createStockCheckActions","qty","productId","delayDebounceFn","setTimeout","searchProductActions","modelName","clearTimeout","modalOptions","_data$modelId","modelId","codeOptions","selectedModal","setSelectedModal","selectedCode","setSelectedCode","some","ToastContainer","productsData","prev","_selectedOption$data","_selectedOption$data2","_selectedOption$data3","onInputChange","inputValue","isSearchable","isLoading","loading","_selectedOption$data4","_selectedOption$data5","_selectedOption$data6","_selectedOption$data7","val","parseInt","min","error","JSON","stringify"],"sourceRoot":""}
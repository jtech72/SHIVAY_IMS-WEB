{"version":3,"file":"static/js/337.66ebe0c1.chunk.js","mappings":"4TAaA,MAwLA,EAxLgBA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAEpB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAC/BC,GAAQC,EAAAA,EAAAA,KAAaC,GAAUA,KAC9BC,EAAeC,IAAoBL,EAAAA,EAAAA,UAAS,OAC5CM,EAAaC,IAAkBP,EAAAA,EAAAA,WAAS,IAExCQ,EAAWC,IAAgBT,EAAAA,EAAAA,UAAS,IACpCU,EAAUC,IAAeX,EAAAA,EAAAA,UAAS,KAClCY,EAAYC,IAAiBb,EAAAA,EAAAA,UAASc,KAAKC,KAH7B,IAGiDL,IAEhEM,EAAmB,OAALf,QAAK,IAALA,GAAyB,QAApBZ,EAALY,EAAOgB,0BAAkB,IAAA5B,GAAa,QAAbC,EAAzBD,EAA2B6B,mBAAW,IAAA5B,OAAjC,EAALA,EAAwC6B,SACtDC,EAAsB,OAALnB,QAAK,IAALA,GAA2B,QAAtBV,EAALU,EAAOoB,4BAAoB,IAAA9B,GAAe,QAAfC,EAA3BD,EAA6B+B,qBAAa,IAAA9B,OAArC,EAALA,EAA4C+B,OACnEC,QAAQC,IAAIT,EAAa,sCACzBU,EAAAA,EAAAA,YAAU,KACR9B,GAAS+B,EAAAA,EAAAA,IAAsB,CAC7BC,MAAOlB,EACPmB,KAAMrB,EACNV,OAAQA,IACP,GACF,CAACF,EAAUE,EAAQY,EAAUF,KAEhCkB,EAAAA,EAAAA,YAAU,KACe,MAAnBN,GACFxB,GAAS+B,EAAAA,EAAAA,IAAsB,CAC7BC,MAAOlB,EACPmB,KAAMrB,EACNV,OAAQA,IAEZ,GACC,CAACsB,KAEJM,EAAAA,EAAAA,YAAU,KACRb,EAAcC,KAAKC,KA3BA,IA2BoBL,GAAU,GAEjD,CA7BmB,IA6BJA,IAOjB,OACEoB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,gBAAiB,CACf,CAAEC,MAAO,uBAAwBC,KAAM,mBACvC,CAAED,MAAO,gBAAiBC,KAAM,kBAAmBC,QAAQ,IAE7DC,MAAO,mBAETN,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAAAR,UACHD,EAAAA,EAAAA,MAACU,EAAAA,EAAG,CAAAT,SAAA,EACFC,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,GAAI,GAAGX,UACVD,EAAAA,EAAAA,MAAA,OAAKa,UAAU,kCAAiCZ,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLD,UAAU,2BACVE,MAAO,CAAEC,OAAQ,OAAQC,UAAW,QACpCC,YAAY,YACZC,MAAOnD,EACPoD,SAAWC,GAAMpD,EAAUoD,EAAEC,OAAOH,UAEtCnB,EAAAA,EAAAA,MAACuB,EAAAA,EAAM,CAACV,UAAU,6BAEhBW,QAASA,KACP5D,EAAS,qBAAqB,EAC9BqC,SAAA,EAEFC,EAAAA,EAAAA,KAACuB,EAAAA,IAAQ,CAACZ,UAAU,SAAS,wBAKnCX,EAAAA,EAAAA,KAAA,OAAKW,UAAU,OAAMZ,UACnBC,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CACHX,MAAO,CAAEY,UAAW,sIAAuI1B,UAE3JD,EAAAA,EAAAA,MAAC0B,EAAAA,EAAKE,KAAI,CAACf,UAAU,mBAAkBZ,SAAA,EACrCD,EAAAA,EAAAA,MAAA,SAAOa,UAAU,oCAAmCZ,SAAA,EAClDC,EAAAA,EAAAA,KAAA,SAAAD,UACED,EAAAA,EAAAA,MAAA,MAAIa,UAAU,eAAcZ,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAI2B,MAAM,MAAK5B,UAACC,EAAAA,EAAAA,KAAA,KAAGW,UAAU,qBAC7BX,EAAAA,EAAAA,KAAA,MAAI2B,MAAM,MAAK5B,SAAC,cAChBC,EAAAA,EAAAA,KAAA,MAAI2B,MAAM,MAAK5B,SAAC,iBAChBC,EAAAA,EAAAA,KAAA,MAAI2B,MAAM,MAAK5B,SAAC,eAChBC,EAAAA,EAAAA,KAAA,MAAI2B,MAAM,MAAK5B,SAAC,UAChBC,EAAAA,EAAAA,KAAA,MAAI2B,MAAM,MAAK5B,SAAC,kBAKd,OAAL9B,QAAK,IAALA,GAAyB,QAApBR,EAALQ,EAAOgB,0BAAkB,IAAAxB,GAAzBA,EAA2BmE,SAC1B5B,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIW,UAAU,cAAckB,QAAS,EAAE9B,UACrCC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAO,SAIZ9B,EAAAA,EAAAA,KAAA,SAAAD,SAC2B,KAAb,OAAXf,QAAW,IAAXA,OAAW,EAAXA,EAAa+C,SACZ/B,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAI6B,QAAS,EAAGlB,UAAU,cAAaZ,UACrCC,EAAAA,EAAAA,KAAA,KAAGW,UAAU,aAAYZ,SAAC,mCAInB,OAAXf,QAAW,IAAXA,OAAW,EAAXA,EAAagD,KAAI,CAACC,EAAMC,KAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC3B1C,EAAAA,EAAAA,MAAA,MAAgBa,UAAU,8CAA6CZ,SAAA,EACrEC,EAAAA,EAAAA,KAAA,MAAI2B,MAAM,MAAK5B,SAAEmC,EAAQ,KACzBlC,EAAAA,EAAAA,KAAA,MAAIW,UAAU,0BAAyBZ,UAChC,OAAJkC,QAAI,IAAJA,GAAkB,QAAdE,EAAJF,EAAMQ,oBAAY,IAAAN,GAAK,QAALC,EAAlBD,EAAqB,UAAE,IAAAC,OAAnB,EAAJA,EAAyBM,QAAQ1C,EAAAA,EAAAA,KAAA,QAAMW,UAAU,aAAYZ,SAAC,SAEjEC,EAAAA,EAAAA,KAAA,MAAIW,UAAU,UAASZ,UAChB,OAAJkC,QAAI,IAAJA,OAAI,EAAJA,EAAMU,iBAAiB3C,EAAAA,EAAAA,KAAA,QAAMW,UAAU,aAAYZ,SAAC,SAEvDC,EAAAA,EAAAA,KAAA,MAAIW,UAAU,UAASZ,UAChB,OAAJkC,QAAI,IAAJA,GAAmB,QAAfI,EAAJJ,EAAMW,qBAAa,IAAAP,GAAK,QAALC,EAAnBD,EAAsB,UAAE,IAAAC,OAApB,EAAJA,EAA0BI,QAAQ1C,EAAAA,EAAAA,KAAA,QAAMW,UAAU,aAAYZ,SAAC,SAElEC,EAAAA,EAAAA,KAAA,MAAIW,UAAU,UAASZ,SAChB,OAAJkC,QAAI,IAAJA,GAAAA,EAAMY,UACL,IAAIC,KAAS,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMY,WAAWE,mBAAmB,UAE7C/C,EAAAA,EAAAA,KAAA,QAAMW,UAAU,aAAYZ,SAAC,SAGjCC,EAAAA,EAAAA,KAAA,MAAIW,UAAU,UAASZ,UAChB,OAAJkC,QAAI,IAAJA,GAAqB,QAAjBM,EAAJN,EAAMe,uBAAe,IAAAT,GAAK,QAALC,EAArBD,EAAwB,UAAE,IAAAC,OAAtB,EAAJA,EAA4BS,YAAYjD,EAAAA,EAAAA,KAAA,QAAMW,UAAU,aAAYZ,SAAC,SAExEC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAF,EAAAA,EAAAA,MAAA,OAAKa,UAAU,8BAA6BZ,SAAA,EAI1CC,EAAAA,EAAAA,KAAA,QAAMW,UAAU,eAAeL,MAAM,OAAMP,UACzCC,EAAAA,EAAAA,KAACkD,EAAAA,IAAa,CAAC5B,QAASA,IAAM5D,EAAS,yBAA6B,OAAJuE,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,OAAQxC,UAAU,kBAAkBE,MAAO,CAAEuC,OAAQ,gBAE7HpD,EAAAA,EAAAA,KAAA,QAAMW,UAAU,eAAeL,MAAM,SAASgB,QAASA,KAAQjD,EAAqB,OAAJ4D,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,KAAM5E,GAAe,EAAK,EAAIwB,UAClHC,EAAAA,EAAAA,KAACqD,EAAAA,IAAe,CAAC1C,UAAU,kBAAkBE,MAAO,CAAEuC,OAAQ,oBA/B3DlB,EAkCJ,UAKflC,EAAAA,EAAAA,KAACsD,EAAAA,EAAU,CACT9E,UAAWA,EACXE,SAAUA,EACVE,YAAYV,EAAAA,EAAAA,KAAaC,IAAK,IAAAoF,EAAAC,EAAA,OAAU,OAALrF,QAAK,IAALA,GAAyB,QAApBoF,EAALpF,EAAOc,0BAAkB,IAAAsE,GAAa,QAAbC,EAAzBD,EAA2BrE,mBAAW,IAAAsE,OAAjC,EAALA,EAAwC5E,UAAU,IACrFH,aAAcA,EACdgF,iBAAkB9E,iBAS9BqB,EAAAA,EAAAA,KAAC0D,EAAAA,EAAK,CAACC,KAAMrF,EAAasF,OAAQA,IAAMrF,GAAe,GAAOwB,UAC5DD,EAAAA,EAAAA,MAAC4D,EAAAA,EAAMhC,KAAI,CAACf,UAAU,cAAaZ,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAIW,UAAU,aAAYZ,SAAC,sBAC3BC,EAAAA,EAAAA,KAAA,KAAGW,UAAU,YAAWZ,SAAC,kDACzBC,EAAAA,EAAAA,KAAA,QAAMW,UAAU,+BAA8BZ,UAC5CC,EAAAA,EAAAA,KAAC6D,EAAAA,IAAe,CAAClD,UAAU,yBAE7Bb,EAAAA,EAAAA,MAAA,OAAKa,UAAU,2CAA0CZ,SAAA,EACvDC,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACV,UAAU,gBAAgBW,QAASA,IAAM/C,GAAe,GAAOwB,SAAC,YAGxEC,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACV,UAAU,gBAAgBW,QAvIvBwC,KACnBlG,GAASmG,EAAAA,EAAAA,GAAqB,CAAEZ,IAAK/E,KACrCG,GAAe,EAAM,EAqI2CwB,SAAC,qBAM3D,C,mEC9LV,MA0FA,EA1FmBiE,IAA0E,IAAzE,UAAExF,EAAS,SAAEE,EAAQ,WAAEE,EAAU,aAAEH,EAAY,iBAAEgF,GAAkBO,EAQnF,OAPAtE,EAAAA,EAAAA,YAAU,KAEFlB,EAAYI,GACZH,EAAaK,KAAKmF,IAAI,EAAGrF,GAC7B,GACD,CAACJ,EAAWI,EAAYH,KAGvBqB,EAAAA,EAAAA,MAAA,OAAKa,UAAU,qDAAoDZ,SAAA,EAE/DD,EAAAA,EAAAA,MAAA,OAAKa,UAAU,sBAAqBZ,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOW,UAAU,OAAMZ,SAAC,eACxBC,EAAAA,EAAAA,KAAA,UACIiB,MAAOvC,EACPwC,SAAWC,IACP,MAAM+C,EAAUC,OAAOhD,EAAEC,OAAOH,OAChCwC,EAAiBS,GACjBzF,EAAa,EAAE,EAEnBkC,UAAU,oCAAmCZ,SAC5C,CAAC,GAAI,GAAI,GAAI,KAAKiC,KAAKoC,IACpBpE,EAAAA,EAAAA,KAAA,UAAmBiB,MAAOmD,EAAKrE,SAAEqE,GAApBA,WAMzBtE,EAAAA,EAAAA,MAAA,QAAMa,UAAU,OAAMZ,SAAA,CAAC,SACdD,EAAAA,EAAAA,MAAA,UAAAC,SAAA,CAASvB,EAAU,OAAKI,SAIjCoB,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,SACIY,KAAK,SACLI,YAAa,GAAGxC,IAChB6F,IAAI,IACJJ,IAAKrF,EACLsC,SAAWC,IACP,MAAMmD,EAAcH,OAAOhD,EAAEC,OAAOH,OAChCqD,GAAe,GAAKA,GAAe1F,GACnCH,EAAa6F,EACjB,EAEJ3D,UAAU,mCACVE,MAAO,CAAE0D,MAAO,WAIpBzE,EAAAA,EAAAA,MAAA,MAAIa,UAAU,kFAAiFZ,SAAA,CAE1FvB,EAAY,IACTwB,EAAAA,EAAAA,KAAA,MAAIW,UAAU,YAAYW,QAASA,IAAM7C,EAAaD,EAAY,GAAGuB,UACjEC,EAAAA,EAAAA,KAACwE,EAAAA,GAAI,CAACC,GAAG,IAAI9D,UAAU,YAAWZ,SAAC,eAK1C2E,MAAMC,KAAK,CAAE5C,OAAQnD,IAAcoD,KAAI,CAAC4C,EAAGC,KACxC,MAAMhF,EAAOgF,EAAI,EACXC,EAAgBjF,IAASrB,EAI/B,OAAII,GAAc,GAHIiB,GAAQrB,EAAY,GAAKqB,GAAQrB,EAAY,IACvC,IAATqB,GAAcA,IAASjB,IAIlCoB,EAAAA,EAAAA,KAAA,MAAeW,UAAW,cAAamE,EAAgB,SAAW,IAC9DxD,QAASA,IAAM7C,EAAaoB,GAAME,UAClCC,EAAAA,EAAAA,KAACwE,EAAAA,GAAI,CAACC,GAAG,IAAI9D,UAAU,YAAWZ,SAAEF,KAF/BA,GAKI,IAATA,GAAcrB,GAAa,GAAOqB,IAASjB,EAAa,GAAKJ,GAAaI,EAAa,GACxFoB,EAAAA,EAAAA,KAAA,MAAeW,UAAU,+BAA8BZ,UAACC,EAAAA,EAAAA,KAACwE,EAAAA,GAAI,CAACC,GAAG,IAAI9D,UAAU,iBAAgBZ,SAAC,SAAvFF,GAGb,IAAI,IAIdrB,EAAYI,IACToB,EAAAA,EAAAA,KAAA,MAAIW,UAAU,YAAYW,QAASA,IAAM7C,EAAaD,EAAY,GAAGuB,UACjEC,EAAAA,EAAAA,KAACwE,EAAAA,GAAI,CAACC,GAAG,IAAI9D,UAAU,YAAWZ,SAAC,gBAI7C,C,qFCvEd,MA6BA,EA7BmBgF,IAEX/E,EAAAA,EAAAA,KAACQ,EAAAA,EAAG,CAAAT,UACAC,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAAAV,UACAD,EAAAA,EAAAA,MAAA,OAAKa,UAAU,iBAAgBZ,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKW,UAAU,mBAAkBZ,UAC7BD,EAAAA,EAAAA,MAACkF,EAAAA,EAAU,CAACC,UAAW,CAAEtE,UAAW,OAAQZ,SAAA,EACxCC,EAAAA,EAAAA,KAACgF,EAAAA,EAAWE,KAAI,CAACC,KAAK,IAAGpF,SAAE,cAE1BgF,EAAM7E,gBAAgB8B,KAAI,CAACoD,EAAMlD,IACvBkD,EAAK/E,QACRL,EAAAA,EAAAA,KAACgF,EAAAA,EAAWE,KAAI,CAAC7E,QAAM,EAAaQ,MAAO,CAAEwE,MAAO,QAAStF,SACxDqF,EAAKjF,OADmB+B,IAI7BlC,EAAAA,EAAAA,KAACgF,EAAAA,EAAWE,KAAI,CAAaC,KAAMC,EAAKhF,KAAKL,SACxCqF,EAAKjF,OADY+B,WAOtClC,EAAAA,EAAAA,KAAA,MAAIW,UAAU,aAAaE,MAAO,CAAEwE,MAAO,QAAStF,SAAEgF,EAAMzE,c,oFCtChF,MAAMwB,EAAUA,KAER9B,EAAAA,EAAAA,KAAA,OAAKa,MAAO,CAAEC,OAAQ,OAAQwE,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAAWzF,UAC5FC,EAAAA,EAAAA,KAACyF,EAAAA,GAAS,CACNJ,MAAM,UACNK,YAAY,IACZC,kBAAkB,OAClBpB,MAAM,KACNqB,SAAS,MAMnBC,EAAmBA,KAEjB7F,EAAAA,EAAAA,KAAA,OAAKa,MAAO,CAAEC,OAAQ,OAAQwE,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAAWzF,UAC5FC,EAAAA,EAAAA,KAACyF,EAAAA,GAAS,CACNJ,MAAM,UACNK,YAAY,IACZC,kBAAkB,OAClBpB,MAAM,KACNqB,SAAS,MAOnBE,EAAgBA,KAGd9F,EAAAA,EAAAA,KAAA,OAAKW,UAAU,0DAA0DE,MAAO,CAAEC,OAAQ,SAAUf,UAChGC,EAAAA,EAAAA,KAAC+F,EAAAA,GAAS,CACNH,SAAS,EACT9E,OAAO,KACPyD,MAAM,KACNyB,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,W","sources":["pages/shivay/stockIn/StockIn.js","helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PageTitle from '../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Modal, Row } from 'react-bootstrap'\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { IoIosAdd } from 'react-icons/io';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteStockInActions, getStockInListActions } from '../../../redux/actions';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport Pagination from '../../../helpers/Pagination';\nimport { Loading } from '../../../helpers/loader/Loading';\n\nconst StockIn = () => {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState('')\n  const store = useSelector((state) => state);\n  const [stockToDelete, setStockToDelete] = useState(null);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const totalRecords = '0';\n  const [pageIndex, setPageIndex] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(Math.ceil(totalRecords / pageSize));\n\n  const StockInData = store?.stockInListReducer?.stockInList?.response;\n  const deleteResponse = store?.deleteStockInReducer?.deleteStockIn?.status;\n  console.log(StockInData, 'StockInDataStockInDataStockInData')\n  useEffect(() => {\n    dispatch(getStockInListActions({\n      limit: pageSize,\n      page: pageIndex,\n      search: search,\n    }));\n  }, [dispatch, search, pageSize, pageIndex]);\n\n  useEffect(() => {\n    if (deleteResponse === 200) {\n      dispatch(getStockInListActions({\n        limit: pageSize,\n        page: pageIndex,\n        search: search,\n      }));\n    }\n  }, [deleteResponse]);\n\n  useEffect(() => {\n    setTotalPages(Math.ceil(totalRecords / pageSize));\n  },\n    [totalRecords, pageSize]);\n\n  const handleDelete = () => {\n    dispatch(deleteStockInActions({ _id: stockToDelete }));\n    setShowConfirm(false);\n  };\n\n  return (\n    <div>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"SHIVAY Stock In List\", path: \"/shivay/stockIn\" },\n          { label: \"Stock In List\", path: \"/shivay/stockIn\", active: true },\n        ]}\n        title={\"Stock In List\"}\n      />\n      <Form>\n        <Row>\n          <Col sm={12}>\n            <div className='d-flex justify-content-end mt-1'>\n              <input\n                type=\"text\"\n                className=\"form-control w-auto me-2\"\n                style={{ height: '42px', marginTop: '10px' }}\n                placeholder=\"Search...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button className=\"mt-2 fw-bold custom-button\"\n                // onClick={handleShow}\n                onClick={() => {\n                  navigate('/shivay/addStockIn')\n                }}\n              >\n                <IoIosAdd className=\"fs-3\" />&nbsp;Stock In\n              </Button>\n            </div>\n          </Col>\n\n          <div className='mt-2'>\n            <Card\n              style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n            >\n              <Card.Body className=\"text-center py-1\">\n                <table className=\"table table-striped bg-white mb-0\">\n                  <thead>\n                    <tr className=\"table_header\">\n                      <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                      <th scope=\"col\">Supplier</th>\n                      <th scope=\"col\">Control No.</th>\n                      <th scope=\"col\">Warehouse</th>\n                      <th scope=\"col\">Date</th>\n                      <th scope=\"col\">Quantity</th>\n\n                      {/* <th scope=\"col\">Action</th> */}\n                    </tr>\n                  </thead>\n                  {store?.stockInListReducer?.loading ? (\n                    <tr>\n                      <td className='text-center' colSpan={6}>\n                        <Loading />\n                      </td>\n                    </tr>\n                  ) : (\n                    <tbody>\n                      {StockInData?.length === 0 ? (\n                        <tr>\n                          <td colSpan={6} className='text-center'>\n                            <p className='my-5 py-5 '>No data found in Stock In.</p>\n                          </td>\n                        </tr>\n                      ) : (\n                        StockInData?.map((data, index) => (\n                          <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                            <th scope=\"row\">{index + 1}</th>\n                            <td className=\"text-uppercase fw-bold \">\n                              {data?.supplierData?.[0]?.name || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td className=\"fw-bold\">\n                              {data?.controlNumber || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td className=\"fw-bold\">\n                              {data?.warehouseData?.[0]?.name || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td className=\"fw-bold\">\n                              {data?.createdAt ? (\n                                new Date(data?.createdAt).toLocaleDateString('en-GB')\n                              ) : (\n                                <span className=\"text-black\">-</span>\n                              )}\n                            </td>\n                            <td className=\"fw-bold\">\n                              {data?.stockInProducts?.[0]?.quantity || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td></td>\n                            <td></td>\n                            <div className=\"icon-container d-flex  pb-0\" >\n                              {/* <span className=\"icon-wrapper\" title=\"View\">\n                            <PiEye className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                          </span> */}\n                              <span className=\"icon-wrapper\" title=\"Edit\">\n                                <AiOutlineEdit onClick={() => navigate(`/shivay/addStockIn?id=${data?._id}`)} className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                              </span>\n                              <span className=\"icon-wrapper\" title=\"Delete\" onClick={() => { setStockToDelete(data?._id); setShowConfirm(true); }}>\n                                <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                              </span>\n                            </div>\n                          </tr>\n                        )))}\n                    </tbody>\n                  )}\n                </table>\n                <Pagination\n                  pageIndex={pageIndex}\n                  pageSize={pageSize}\n                  totalPages={useSelector((state) => state?.stockInListReducer?.stockInList?.totalPages)}\n                  setPageIndex={setPageIndex}\n                  onChangePageSize={setPageSize}\n                />\n              </Card.Body>\n            </Card>\n          </div>\n        </Row>\n      </Form>\n\n      {/* delete modal */}\n      <Modal show={showConfirm} onHide={() => setShowConfirm(false)} >\n        <Modal.Body className='text-center'>\n          <h4 className='text-black'>Confirm Deletion</h4>\n          <p className='mt-2 mb-3'> Are you sure you want to delete this Stock?</p>\n          <span className='bg-light rounded-circle p-3 '>\n            <MdDeleteOutline className='fs-1  text-danger' />\n          </span>\n          <div className='d-flex justify-content-center mt-3 gap-2'>\n            <Button className='cancel-button' onClick={() => setShowConfirm(false)}>\n              Cancel\n            </Button>\n            <Button className='custom-button' onClick={handleDelete}>\n              Delete\n            </Button>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\n\nexport default StockIn","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>{size}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page <strong>{pageIndex} of {totalPages}</strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\r\n                        return <li key={page} className=\"page-ittotalPagesem disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { ColorRing, ThreeDots } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '54vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DashboardLoading = () => {\r\n    return (\r\n        <div style={{ height: '30vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\" style={{ height: '2.2vh' }}>\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"25\"\r\n                width=\"25\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading, DashboardLoading };\r\n"],"names":["StockIn","_store$stockInListRed","_store$stockInListRed2","_store$deleteStockInR","_store$deleteStockInR2","_store$stockInListRed3","navigate","useNavigate","dispatch","useDispatch","search","setSearch","useState","store","useSelector","state","stockToDelete","setStockToDelete","showConfirm","setShowConfirm","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","Math","ceil","StockInData","stockInListReducer","stockInList","response","deleteResponse","deleteStockInReducer","deleteStockIn","status","console","log","useEffect","getStockInListActions","limit","page","_jsxs","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Form","Row","Col","sm","className","type","style","height","marginTop","placeholder","value","onChange","e","target","Button","onClick","IoIosAdd","Card","boxShadow","Body","scope","loading","colSpan","Loading","length","map","data","index","_data$supplierData","_data$supplierData$","_data$warehouseData","_data$warehouseData$","_data$stockInProducts","_data$stockInProducts2","supplierData","name","controlNumber","warehouseData","createdAt","Date","toLocaleDateString","stockInProducts","quantity","AiOutlineEdit","_id","cursor","RiDeleteBinLine","Pagination","_state$stockInListRed","_state$stockInListRed2","onChangePageSize","Modal","show","onHide","MdDeleteOutline","handleDelete","deleteStockInActions","_ref","max","newSize","Number","size","min","enteredPage","width","Link","to","Array","from","_","i","isCurrentPage","props","Breadcrumb","listProps","Item","href","item","color","display","justifyContent","alignItems","ThreeDots","strokeWidth","animationDuration","visible","DashboardLoading","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}
{"version":3,"file":"static/js/476.783a5e2f.chunk.js","mappings":"sMAgBA,MAAMA,EAAgBC,IAClB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAuBC,EAAAA,EAAAA,QAAO,MAEpCL,EAAaM,aAAe,CACxBC,MAAO,YAGX,MAAMA,EAAQN,EAAMM,MACdC,EAAYP,EAAMQ,UAAY,MAE9B,iBAAEC,IAAqBC,EAAAA,EAAAA,KAAaC,IAAK,CAC3CF,iBAAkBE,EAAMC,OAAOH,qBAc7BI,EAAoBC,IACtB,GAAIL,EAAkB,CAClB,GAAIN,GAAmBA,EAAgBY,SAAWZ,EAAgBY,QAAQC,SAASF,EAAEG,QAAS,OAEzFhB,GAASiB,EAAAA,EAAAA,MAClB,GAUJ,OAPAC,EAAAA,EAAAA,YAAU,KACNC,SAASC,iBAAiB,YAAaR,GAAkB,GAClD,KACHO,SAASE,oBAAoB,YAAaT,GAAkB,EAAM,MAKtEU,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAhB,SAAA,EACIe,EAAAA,EAAAA,MAAA,OAAKE,UAAU,UAAUC,IAAKvB,EAAgBK,SAAA,EAC1Ce,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBjB,SAAA,EAC3BmB,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,IAAIJ,UAAU,2BAA2BK,QA3B7ChB,IACjBA,EAAEiB,iBACF9B,GAASiB,EAAAA,EAAAA,MAAmB,EAyBuDV,UACnEmB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iCAEjBE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,MAAKjB,SAAEF,QAGzBqB,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,MAAO,CAAEC,UAAW,OAAQC,OAAQ,KAASC,QAAS,IAAKC,iBAAkB,IAAI7B,UACxFmB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBjB,SAAED,UAIjDoB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAChB,EAIX,G","sources":["layouts/RightSidebar.js"],"sourcesContent":["// @flow\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SimpleBar from 'simplebar-react';\r\n\r\n// actions\r\nimport { hideRightSidebar } from '../redux/actions';\r\n\r\ntype RightSideBarProps = {\r\n    hideRightSidebar?: () => void,\r\n    title?: string,\r\n    children?: any,\r\n};\r\n\r\nconst RightSideBar = (props: RightSideBarProps): React$Element<React$FragmentType> => {\r\n    const dispatch = useDispatch();\r\n\r\n    const rightBarNodeRef: any = useRef(null);\r\n\r\n    RightSideBar.defaultProps = {\r\n        title: 'Settings',\r\n    };\r\n\r\n    const title = props.title;\r\n    const component = props.children || null;\r\n\r\n    const { showRightSidebar } = useSelector((state) => ({\r\n        showRightSidebar: state.Layout.showRightSidebar,\r\n    }));\r\n\r\n    /**\r\n     * Handles the close\r\n     */\r\n    const handleClose = (e: any) => {\r\n        e.preventDefault();\r\n        dispatch(hideRightSidebar());\r\n    };\r\n\r\n    /**\r\n     * Handle the click anywhere in doc\r\n     */\r\n    const handleOtherClick = (e: any) => {\r\n        if (showRightSidebar) {\r\n            if (rightBarNodeRef && rightBarNodeRef.current && rightBarNodeRef.current.contains(e.target)) return;\r\n            // else hide the right sidebar\r\n            else dispatch(hideRightSidebar());\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleOtherClick, false);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleOtherClick, false);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"end-bar\" ref={rightBarNodeRef}>\r\n                <div className=\"rightbar-title\">\r\n                    <Link to=\"#\" className=\"end-bar-toggle float-end\" onClick={handleClose}>\r\n                        <i className=\"dripicons-cross noti-icon\"></i>\r\n                    </Link>\r\n                    <h5 className=\"m-0\">{title}</h5>\r\n                </div>\r\n\r\n                <SimpleBar style={{ maxHeight: '100%', zIndex: 10000 }} timeout={500} scrollbarMaxSize={320}>\r\n                    <div className=\"rightbar-content h-100\">{component}</div>\r\n                </SimpleBar>\r\n            </div>\r\n\r\n            <div className=\"rightbar-overlay\"></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RightSideBar;\r\n"],"names":["RightSideBar","props","dispatch","useDispatch","rightBarNodeRef","useRef","defaultProps","title","component","children","showRightSidebar","useSelector","state","Layout","handleOtherClick","e","current","contains","target","hideRightSidebar","useEffect","document","addEventListener","removeEventListener","_jsxs","_Fragment","className","ref","_jsx","Link","to","onClick","preventDefault","SimpleBar","style","maxHeight","zIndex","timeout","scrollbarMaxSize"],"sourceRoot":""}
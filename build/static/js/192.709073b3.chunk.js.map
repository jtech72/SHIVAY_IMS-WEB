{"version":3,"file":"static/js/192.709073b3.chunk.js","mappings":"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","sources":["pages/shivay/user/modal/AddUserModal.js","pages/shivay/user/User.js","helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { createUsersActions, getLocationActions, getWarehouseActions, updateUsersActions } from '../../../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { FiEye, FiEyeOff } from 'react-icons/fi';\n\nconst AddUserModal = ({ showModal, handleClose, UserData }) => {\n\n    const { type } = UserData;\n    const dispatch = useDispatch();\n    const {\n        handleSubmit,\n        register,\n        setValue,\n        reset,\n        formState: { errors },\n    } = useForm();\n\n    const [selectedWarehouse, setSelectedWarehouse] = useState([]);\n    const [locationSelected, setLocationSelected] = useState(null);\n    // console.log(selectedWarehouse, 'selectedWarehouseselectedWarehouse')\n    const { location } = useSelector((state) => state?.locationReducer || {});\n    const locationData = location?.response || [];\n    const WarehouseData = useSelector((state) => state?.getWarehouseReducer?.warehouseList?.response || []);\n\n    useEffect(() => {\n        dispatch(getLocationActions());\n        dispatch(getWarehouseActions({\n            limit: '',\n            page: '',\n            search: '',\n            stockFilter: true,\n        }));\n    }, [dispatch]);\n\n    const closeModal = () => {\n        reset();\n        handleClose()\n    }\n\n    const [showPassword, setShowPassword] = useState(false);\n\n    const togglePasswordVisibility = () => {\n        setShowPassword(prev => !prev);\n    };\n\n    useEffect(() => {\n\n        if (UserData.data) {\n            const updateWarehouses = UserData?.data?.warehouseData?.map((data) => (\n                {\n                    value: data?._id, label: data?.name\n                }\n            ))\n            setSelectedWarehouse(updateWarehouses)\n\n            setValue('name', UserData.data?.name)\n            setValue('email', UserData.data?.email)\n            setValue('password', UserData.data?.password)\n            setValue('phoneNumber', UserData.data?.phoneNumber)\n            setValue('address', UserData.data?.address)\n\n            setLocationSelected({\n                label: UserData?.data?.location,\n                value: UserData?.data?.location,\n            });\n        }\n    }, [UserData]);\n\n    const onSubmit = (data) => {\n        const payload = {\n            name: data?.name,\n            email: data?.email,\n            password: data?.password,\n            phoneNumber: data?.phoneNumber,\n            address: data?.address,\n            location: locationSelected?.value,\n            warehouseIds: selectedWarehouse?.map((item) => item.value),\n        };\n        if (UserData?.data?._id) {\n            const updatedData = {\n                ...payload,\n                userId: UserData?.data?._id,\n            };\n            dispatch(updateUsersActions(updatedData));\n        } else {\n            dispatch(createUsersActions(payload));\n        }\n        // console.log(payload,'payload')\n        closeModal();\n    };\n\n    return (\n        <Modal show={showModal} centered size='lg' onHide={handleClose}>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Modal.Header closeButton>\n                    <Modal.Title className='text-black'>{type} User</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <Col sm={6}>\n                            <Form.Group className=\"mb-1\">\n                                <Form.Label className=\"mb-0\">Warehouse</Form.Label>\n                                <Select\n                                    value={selectedWarehouse}\n                                    onChange={(selectedOption) => setSelectedWarehouse(selectedOption)}\n                                    options={WarehouseData?.map((data) => ({\n                                        label: data.name,\n                                        value: data._id,\n                                    }))}\n                                    placeholder=\"Select a warehouse\"\n                                    isClearable\n                                    isMulti\n                                />\n                            </Form.Group>\n                        </Col>\n                        <Col sm={6}>\n                            <Form.Group className=\"mb-1\">\n                                <Form.Label className='mb-0'>User Name</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter User Name\"\n                                    {...register(\"name\", { required: true })}\n                                />\n                                {errors.name && <small className=\"text-danger\">User Name is required</small>}\n                            </Form.Group>\n                        </Col>\n                        <Col sm={6}>\n                            <Form.Group className=\"mb-1\">\n                                <Form.Label className='mb-0'>Email Id</Form.Label>\n                                <Form.Control\n                                    type=\"email\"\n                                    placeholder=\"Enter Email Id\"\n                                    {...register(\"email\", { required: true })}\n                                />\n                                {errors.email && <small className=\"text-danger\">Email is required</small>}\n                            </Form.Group>\n                        </Col>\n                        <Col sm={6}>\n                            <Form.Group className=\"mb-1 position-relative\">\n                                <Form.Label className='mb-0'>Password</Form.Label>\n                                <div className=\"position-relative\">\n                                    <Form.Control\n                                        type={showPassword ? \"text\" : \"password\"}\n                                        placeholder=\"Enter Password\"\n                                        {...register(\"password\", {\n                                            required: \"Password is required\",\n                                            minLength: {\n                                                value: 8,\n                                                message: \"Minimum 8 characters\"\n                                            },\n                                            pattern: {\n                                                value: /^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n                                                message: \"Must include uppercase, number, and special character\"\n                                            }\n                                        })}\n                                    />\n                                    <span\n                                        onClick={togglePasswordVisibility}\n                                        className=\"position-absolute end-0 top-50 translate-middle-y me-2\"\n                                        style={{ cursor: 'pointer' }}\n                                    >\n                                        {showPassword ? <FiEyeOff /> : <FiEye />}\n                                    </span>\n                                </div>\n                                {errors.password && (\n                                    <small className=\"text-danger\">{errors.password.message}</small>\n                                )}\n                            </Form.Group>\n                        </Col>\n                        <Col sm={6}>\n                            <Form.Group className=\"mb-1\">\n                                <Form.Label className='mb-0'>Phone</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter Phone\"\n                                    maxLength={10}\n                                    onInput={(e) => {\n                                        e.target.value = e.target.value.replace(/\\D/g, '').slice(0, 10);\n                                    }}\n                                    {...register(\"phoneNumber\", {\n                                        required: \"Phone number is required\",\n                                        pattern: {\n                                            value: /^[0-9]{10}$/,\n                                            message: \"Phone number must be exactly 10 digits\"\n                                        }\n                                    })} />\n                                {errors.phoneNumber && <small className=\"text-danger\">Phone is required</small>}\n                            </Form.Group>\n                        </Col>\n                        <Col sm={6}>\n                            <Form.Group className=\"mb-1\">\n                                <Form.Label className=\"mb-0\">Location</Form.Label>\n                                <Select\n                                    options={locationData?.map((loc) => ({\n                                        label: loc.name,\n                                        value: loc.name,\n                                    }))}\n                                    placeholder=\"Select Location\"\n                                    onChange={(selectedOption) => {\n                                        console.log(selectedOption, 'gfxdcghbjk')\n                                        setLocationSelected(selectedOption);\n                                        setValue('location', selectedOption?.value);\n                                    }}\n                                    value={locationSelected}\n                                    isSearchable\n                                />\n                                {errors.location && <small className=\"text-danger\">Location is required</small>}\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12}>\n                            <Form.Group className=\"mb-1\">\n                                <Form.Label className='mb-0'>Full Address</Form.Label>\n                                <Form.Control\n                                    as=\"textarea\"\n                                    rows={3}\n                                    placeholder=\"Enter Full Address\"\n                                    {...register(\"address\", { required: true })}\n                                />\n                                {errors.address && <small className=\"text-danger\">Address is required</small>}\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button className='cancel-button' onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button className='custom-button' type='submit'>\n                        {type === 'Add' ? 'Save' : 'Update'}\n                    </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default AddUserModal;\n","import React, { useEffect, useState } from 'react'\nimport { Button, Card, Col, Form, Modal, Row } from 'react-bootstrap'\nimport { IoIosAdd } from \"react-icons/io\";\nimport PageTitle from '../../../helpers/PageTitle';\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport AddUserModal from './modal/AddUserModal';\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport { deleteUsersActions, getUsersListActions } from '../../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaRegCopy } from 'react-icons/fa';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport Pagination from '../../../helpers/Pagination';\nimport { Loading } from '../../../helpers/loader/Loading';\n\nconst User = () => {\n\n    const dispatch = useDispatch();\n    const [showConfirm, setShowConfirm] = useState(false);\n    const [userToDelete, setUserToDelete] = useState(null);\n    const [search, setSearch] = useState('')\n    const totalRecords = '0';\n    const [pageIndex, setPageIndex] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [totalPages, setTotalPages] = useState(Math.ceil(totalRecords / pageSize));\n    const store = useSelector((state) => state)\n\n    const UserData = store?.userListReducer?.userList?.response;\n    const createResponse = store?.createUsersReducer?.createUsers?.status;\n    const updateResponse = store?.updateUsersReducer?.updateUsers?.status;\n    const deleteResponse = store?.deleteUsersReducer?.deleteUsers?.status;\n\n    useEffect(() => {\n        dispatch(getUsersListActions({\n            limit: pageSize,\n            page: pageIndex,\n            search: search,\n            stockFilter: true,\n        }));\n    }, [dispatch, search, pageSize, pageIndex]);\n\n    useEffect(() => {\n        if (createResponse === 200 || deleteResponse === 200 || updateResponse === 200) {\n            dispatch(getUsersListActions({\n                limit: pageSize,\n                page: pageIndex,\n                search: search,\n                stockFilter: true,\n            }));\n        }\n    }, [createResponse, deleteResponse, updateResponse]);\n\n    const handleDelete = () => {\n        dispatch(deleteUsersActions({ userId: userToDelete }));\n        setShowConfirm(false);\n    };\n\n    const [showUserModal, setShowUserModal] = useState({\n        data: null,\n        type: null,\n        status: false\n    })\n\n    useEffect(() => {\n        setTotalPages(Math.ceil(totalRecords / pageSize));\n    },\n        [totalRecords, pageSize]);\n\n    const handleUserModal = (usersDetails, modalType, modalStatus) => {\n        setShowUserModal({ ...showUserModal, data: usersDetails, type: modalType, status: modalStatus })\n    }\n    const handleClose = () => {\n        setShowUserModal({ ...showUserModal, data: null, status: false })\n    }\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY User List\", path: \"/shivay/user\" },\n                    { label: \"User List\", path: \"/shivay/user\", active: true },\n                ]}\n                title={\"User List\"}\n            />\n            <Form>\n                <Row>\n                    <Col sm={12}>\n                        <div className='d-flex justify-content-end mt-1'>\n                            <input\n                                type=\"text\"\n                                className=\"form-control w-auto me-2\"\n                                style={{ height: '42px', marginTop: '10px' }}\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={(e) => setSearch(e.target.value)}\n                            />\n                            <Button className=\"mt-2 fw-bold custom-button\" onClick={() => handleUserModal(null, 'Add', true)}>\n                                <IoIosAdd className=\"fs-3\" />&nbsp;User\n                            </Button>\n                        </div>\n                    </Col>\n\n                    <div className='mt-2'>\n                        <Card\n                            style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                        >\n                            <Card.Body className=\"text-center py-1\">\n                                <table className=\"table table-striped bg-white mb-0\">\n                                    <thead>\n                                        <tr className=\"table_header\">\n                                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                            <th scope=\"col\">User Name</th>\n                                            <th scope=\"col\">Email Id</th>\n                                            <th scope=\"col\">Password</th>\n                                            {/* <th scope=\"col\">Action</th> */}\n                                        </tr>\n                                    </thead>\n                                    {store?.userListReducer?.loading ? (\n                                        <tr>\n                                            <td className='text-center' colSpan={6}>\n                                                <Loading />\n                                            </td>\n                                        </tr>\n                                    ) : (\n                                        <tbody>\n                                            {UserData?.length === 0 ? (\n                                                <tr>\n                                                    <td colSpan={6} className='text-center'>\n                                                        <p className='my-5 py-5 '>No User Found.</p>\n                                                    </td>\n                                                </tr>\n                                            ) : (\n                                                UserData?.map((data, index) => (\n                                                    <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td className=\"text-uppercase fw-bold \">\n                                                            {data?.name || <span className=\"text-danger\">N/A</span>}\n                                                        </td>\n                                                        <td className=\"fw-bold text-primary\">\n                                                            {data?.email ? (\n                                                                <>\n                                                                    <span>{data.email}</span>\n                                                                    <FaRegCopy\n                                                                        style={{ cursor: 'pointer' }}\n                                                                        title=\"Copy Email\"\n                                                                        className='text-muted ms-2 fs-6'\n                                                                        onClick={() => {\n                                                                            navigator.clipboard.writeText(data.email);\n                                                                            alert('Email copied to clipboard!');\n                                                                        }}\n                                                                    />\n                                                                </>\n                                                            ) : (\n                                                                <span className=\"text-danger\">N/A</span>\n                                                            )}\n                                                        </td>\n                                                        <td className=\" fw-bold\">\n                                                            {data?.password || <span className=\"text-danger\">N/A</span>}\n                                                        </td>\n                                                        <td></td>\n                                                        <div className=\"icon-container d-flex  pb-0\" >\n                                                            {/* <span className=\"icon-wrapper\" title=\"View\">\n                                                        <PiEye className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span> */}\n                                                            <span className=\"icon-wrapper\" title=\"Edit\">\n                                                                <AiOutlineEdit\n                                                                    className=\"fs-4 text-black\"\n                                                                    style={{ cursor: 'pointer' }}\n                                                                    onClick={() => handleUserModal(data, 'Edit', true)}\n                                                                />\n                                                            </span>\n                                                            <span className=\"icon-wrapper\" title=\"Delete\" onClick={() => { setUserToDelete(data?._id); setShowConfirm(true); }}>\n                                                                <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                            </span>\n                                                        </div>\n                                                    </tr>\n                                                )))}\n                                        </tbody>\n                                    )}\n                                </table>\n                                <Pagination\n                                    pageIndex={pageIndex}\n                                    pageSize={pageSize}\n                                    totalPages={useSelector((state) => state?.userListReducer?.userList?.totalPages)}\n                                    setPageIndex={setPageIndex}\n                                    onChangePageSize={setPageSize}\n                                />\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </Row>\n            </Form>\n\n            <AddUserModal showModal={showUserModal?.status} handleClose={handleClose} UserData={showUserModal} />\n\n            {/* delete modal */}\n            <Modal show={showConfirm} onHide={() => setShowConfirm(false)} >\n                <Modal.Body className='text-center'>\n                    <h4 className='text-black'>Confirm Deletion</h4>\n                    <p className='mt-2 mb-3'> Are you sure you want to delete this User?</p>\n                    <span className='bg-light rounded-circle p-3 '>\n                        <MdDeleteOutline className='fs-1  text-danger' />\n                    </span>\n                    <div className='d-flex justify-content-center mt-3 gap-2'>\n                        <Button className='cancel-button' onClick={() => setShowConfirm(false)}>\n                            Cancel\n                        </Button>\n                        <Button className='custom-button' onClick={handleDelete}>\n                            Delete\n                        </Button>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n}\n\nexport default User","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>{size}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page <strong>{pageIndex} of {totalPages}</strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\r\n                        return <li key={page} className=\"page-ittotalPagesem disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { ColorRing, ThreeDots } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '54vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DashboardLoading = () => {\r\n    return (\r\n        <div style={{ height: '30vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\" style={{ height: '2vh' }}>\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"25\"\r\n                width=\"25\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading, DashboardLoading };\r\n"],"names":["_ref","showModal","handleClose","UserData","type","dispatch","useDispatch","handleSubmit","register","setValue","reset","formState","errors","useForm","selectedWarehouse","setSelectedWarehouse","useState","locationSelected","setLocationSelected","location","useSelector","state","locationReducer","locationData","response","WarehouseData","_state$getWarehouseRe","_state$getWarehouseRe2","getWarehouseReducer","warehouseList","useEffect","getLocationActions","getWarehouseActions","limit","page","search","stockFilter","showPassword","setShowPassword","data","_UserData$data","_UserData$data$wareho","_UserData$data2","_UserData$data3","_UserData$data4","_UserData$data5","_UserData$data6","_UserData$data7","_UserData$data8","updateWarehouses","warehouseData","map","value","_id","label","name","email","password","phoneNumber","address","_jsx","Modal","show","centered","size","onHide","children","_jsxs","Form","onSubmit","_UserData$data9","payload","warehouseIds","item","_UserData$data10","updatedData","userId","updateUsersActions","createUsersActions","Header","closeButton","Title","className","Body","Row","Col","sm","Group","Label","Select","onChange","selectedOption","options","placeholder","isClearable","isMulti","Control","required","minLength","message","pattern","onClick","togglePasswordVisibility","prev","style","cursor","FiEyeOff","FiEye","maxLength","onInput","e","target","replace","slice","loc","console","log","isSearchable","as","rows","Footer","Button","User","_store$userListReduce","_store$userListReduce2","_store$createUsersRed","_store$createUsersRed2","_store$updateUsersRed","_store$updateUsersRed2","_store$deleteUsersRed","_store$deleteUsersRed2","_store$userListReduce3","showConfirm","setShowConfirm","userToDelete","setUserToDelete","setSearch","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","Math","ceil","store","userListReducer","userList","createResponse","createUsersReducer","createUsers","status","updateResponse","updateUsersReducer","updateUsers","deleteResponse","deleteUsersReducer","deleteUsers","getUsersListActions","showUserModal","setShowUserModal","handleUserModal","usersDetails","modalType","modalStatus","PageTitle","breadCrumbItems","path","active","title","height","marginTop","IoIosAdd","Card","boxShadow","scope","loading","colSpan","Loading","length","index","_Fragment","FaRegCopy","navigator","clipboard","writeText","alert","AiOutlineEdit","RiDeleteBinLine","Pagination","_state$userListReduce","_state$userListReduce2","onChangePageSize","AddUserModal","MdDeleteOutline","handleDelete","deleteUsersActions","max","newSize","Number","min","enteredPage","width","Link","to","Array","from","_","i","isCurrentPage","props","Breadcrumb","listProps","Item","href","color","display","justifyContent","alignItems","ThreeDots","strokeWidth","animationDuration","visible","DashboardLoading","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}
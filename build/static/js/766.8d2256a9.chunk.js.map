{"version":3,"file":"static/js/766.8d2256a9.chunk.js","mappings":"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","sources":["pages/shivay/dispatch/addDispatch/AddDispatch.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PageTitle from '../../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap'\nimport Select from 'react-select'; // Import React Select\nimport { IoIosAdd } from 'react-icons/io';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport AddProductModal from '../../openingStock/addStock/AddProductModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createDispatchActions, getWarehouseListActions, listingCustomerActions, listingUsersActions, updateDispatchActions } from '../../../../redux/actions';\nimport { useForm } from 'react-hook-form';\nimport { useSearchParams } from 'react-router-dom';\n\nconst AddDispatch = () => {\n    const [searchParams] = useSearchParams();\n    const stockId = searchParams.get('id')\n\n    const dispatch = useDispatch();\n    const { handleSubmit, register, setValue } = useForm()\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n    const store = useSelector((state) => state)\n    const [today, setToday] = useState(new Date().toISOString().split('T')[0]);\n    const [openingProducts, setOpeningProducts] = useState([])\n    console.log(openingProducts, 'openingProducts')\n    const DispatchData = store?.getDispatchDataReducer?.dispatchList?.response;\n    console.log(DispatchData, 'DispatchData')\n    const Warehouse = store?.getWarehouseListReducer?.searchWarehouse?.response;\n    const UsersList = store?.listingUsersReducer?.listingUsers?.response;\n    const CustomerList = store?.listingCustomerReducer?.listingCustomer?.response;\n    const warehouseOptions = Warehouse?.map((warehouse) => ({\n        value: warehouse._id,\n        label: warehouse.name,\n    }));\n\n    const usersOptions = UsersList?.map((users) => ({\n        value: users._id,\n        label: users.name,\n    }));\n\n    const customerOptions = CustomerList?.map((customer) => ({\n        value: customer._id,\n        label: customer.name,\n    }));\n\n    // State to handle selected warehouse\n    const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n    console.log(selectedWarehouse, 'selectedWarehouse')\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n    const [isAccordionOpen, setIsAccordionOpen] = useState(false);\n    const [selectedStock, setSelectedStock] = useState(null);\n\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedQuantity, setEditedQuantity] = useState('');\n    const inputRef = useRef(null);\n    console.log(editedQuantity, 'editedQuantity')\n    const handleQuantityChange = (e) => {\n        setEditedQuantity(e.target.value);\n    };\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSave();\n        }\n    };\n    console.log(selectedStock, 'selectedStock34534r')\n\n    // Handle save (when clicking outside or pressing Enter)\n    const handleSave = () => {\n        setIsEditing(false);\n        // Here you would typically also call an API to update the quantity in your backend\n    };\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n    useEffect(() => {\n        const handleClickOutside = (e) => {\n            if (inputRef.current && !inputRef.current.contains(e.target)) {\n                handleSave();\n            }\n        };\n\n\n        if (isEditing) {\n            document.addEventListener('mousedown', handleClickOutside);\n            return () => {\n                document.removeEventListener('mousedown', handleClickOutside);\n            };\n        }\n    }, [isEditing]);\n\n    useEffect(() => {\n        if (stockId && DispatchData?.length > 0) {\n            const foundStock = DispatchData?.find(item => item._id === stockId);\n            setSelectedStock(foundStock);\n        }\n    }, [stockId, DispatchData]);\n    useEffect(() => {\n        if (stockId && selectedStock) {\n            console.log(selectedStock, '2345432')\n            setToday(selectedStock?.createdAt ? new Date(selectedStock?.createdAt).toISOString().split('T')[0] : '')\n            const updateWarehouses = selectedStock?.warehouseData\n                ? { value: selectedStock.warehouseId, label: selectedStock.warehouseData?.find((ele) => ele?._id === selectedStock?.warehouseId)?.name }\n                : {};\n            setSelectedWarehouse(updateWarehouses)\n\n            const updatedUser = selectedStock?.customerData ? { value: selectedStock?.customerId, label: selectedStock.customerData?.find((ele) => ele?._id === selectedStock?.customerId)?.name }\n                : {}\n            setSelectedCustomer(updatedUser)\n\n            const updatedSupplier = selectedStock?.dispatchId ? { value: selectedStock?.dispatchId, label: selectedStock.dispatchByData?.[0]?.name }\n                : {}\n            setSelectedUser(updatedSupplier)\n\n            setValue('invoiceNumber', selectedStock?.invoiceNumber || '');\n            setValue('description', selectedStock?.description || '');\n            setValue('invoiceValue', selectedStock?.fright || '');\n            setValue('attachmentGRfile', selectedStock?.attachmentGRfile || '');\n            setValue('grNumber', selectedStock?.grNumber || '');\n            // setEditedQuantity(selectedStock?.productData?.stockInQty || '');\n        }\n\n    }, [stockId, selectedStock])\n    const handleAccordionToggle = () => {\n        setIsAccordionOpen(prevState => !prevState);\n    };\n    const handleWarehouseChange = (selectedOption) => {\n        setSelectedWarehouse(selectedOption);\n    };\n\n    const handleUserChange = (selectedUser) => {\n        setSelectedUser(selectedUser);\n    };\n\n    const handleCustomerChange = (selectedCustomer) => {\n        setSelectedCustomer(selectedCustomer);\n    };\n\n    useEffect(() => {\n        dispatch(getWarehouseListActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingUsersActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingCustomerActions());\n    }, [dispatch]);\n\n    const onSubmit = (data) => {\n\n        const cleanedProducts = openingProducts.map(({ product, ...rest }) => rest);\n\n        const formData = new FormData();\n        if (data?.attachmentGRfile?.[0] instanceof File) {\n            formData.append('attachmentGRfile', data.attachmentGRfile[0]);\n        }\n\n        formData.append('warehouseId', selectedWarehouse?.value)\n        formData.append('dispatchBy', selectedUser?.value);\n        formData.append('customerId', selectedCustomer?.value);\n        \n        formData.append('productDispatchQty', stockId?10:JSON.stringify(cleanedProducts));\n        formData.append('description', data?.description);\n        formData.append('date', data?.date);\n        formData.append('grNumber', data?.grNumber);\n        if (stockId) {\n            formData.append('_id', stockId);\n        }\n        if (stockId) {\n            dispatch(updateDispatchActions(formData))\n        } else {\n            dispatch(createDispatchActions(formData));\n        }\n        // console.log(formData, 'formData');\n    };\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Dispatch List\", path: \"/shivay/dispatch\" },\n                    { label: \"Add Dispatch \", path: \"/shivay/dispatch\", active: true },\n                ]}\n                title={\"Add Dispatch\"}\n            />\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"accordion mb-3\" id=\"accordionExample\">\n                    <div className=\"accordion-item\" style={{ border: '2px solid #6655D9' }}>\n                        <h2 className=\"accordion-header mt-0\">\n                            <button\n                                className=\"accordion-button py-1 d-flex justify-content-between align-items-center w-100\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#collapseOne\"\n                                aria-expanded={isAccordionOpen ? \"true\" : \"false\"}\n                                aria-controls=\"collapseOne\"\n                                onClick={handleAccordionToggle}\n                            >\n                                <div className=\"flex-grow-1 text-black fw-bold\"> Add Dispatch Details</div>\n\n                                <div className=\"d-flex\">\n                                    <Button\n                                        className=\"fw-bold custom-button me-2\"\n                                        onClick={handleShow}\n                                        disabled={!isAccordionOpen}\n                                    >\n                                        <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                                    </Button>\n                                </div>\n                            </button>\n                        </h2>\n                        <div\n                            id=\"collapseOne\"\n                            className={`accordion-collapse collapse ${isAccordionOpen ? \"show\" : \"\"}`}\n                            data-bs-parent=\"#accordionExample\"\n                        >\n                            <div className=\"accordion-body py-1\">\n                                <Form>\n                                    <Row>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className='mb-0'>Warehouse</Form.Label>\n                                                <Select\n                                                    value={selectedWarehouse}\n                                                    onChange={handleWarehouseChange}\n                                                    options={warehouseOptions}\n                                                    placeholder=\"Select a warehouse\"\n                                                    isClearable\n                                                    required\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">Customer</Form.Label>\n                                                <Select\n                                                    value={selectedCustomer}\n                                                    onChange={handleCustomerChange}\n                                                    options={customerOptions}\n                                                    placeholder=\"Select a Customer\"\n                                                    isClearable\n                                                    required\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">Dispatch By</Form.Label>\n                                                <Select\n                                                    value={selectedUser}\n                                                    onChange={handleUserChange}\n                                                    options={usersOptions}\n                                                    placeholder=\"Select a User\"\n                                                    isClearable\n                                                    required\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className='mb-0'>Date Range</Form.Label>\n                                                <Form.Control\n                                                    type=\"date\"\n                                                    defaultValue={today}\n                                                    {...register('date', { required: true })}\n                                                    required\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">GR Number</Form.Label>\n                                                <Form.Control\n                                                    type=\"number\"\n                                                    placeholder=\"Enter Invoice Number\"\n                                                    {...register('grNumber', { required: true })}\n                                                />\n                                            </Form.Group>\n                                        </Col>\n                                        <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">Attach GR File</Form.Label>\n                                                <Form.Control\n                                                    type=\"file\"\n                                                    placeholder=\"Upload file\"\n                                                    {...register('attachmentGRfile', {\n                                                        required: !selectedStock?.attachmentGRfile, // only require if no existing\n                                                    })}\n                                                />\n                                                {selectedStock?.attachmentGRfile && (\n                                                    <div className=\"mt-2\">\n                                                        <a\n                                                            href={selectedStock.attachmentGRfile}\n                                                            target=\"_blank\"\n                                                            rel=\"noopener noreferrer\"\n                                                        >\n                                                            View Existing Invoice\n                                                        </a>\n                                                    </div>\n                                                )}\n                                            </Form.Group>\n                                        </Col>\n                                        {/* <Col sm={3}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">Attach GR File</Form.Label>\n                                                <Form.Control\n                                                    type=\"file\"\n                                                    placeholder=\"Upload file\"\n                                                    required\n                                                    {...register('attachmentGRfile', { required: true })}\n                                                />\n                                            </Form.Group>\n                                        </Col> */}\n                                        <Col sm={6}>\n                                            <Form.Group className=\"mb-1\">\n                                                <Form.Label className=\"mb-0\">Description</Form.Label>\n                                                <Form.Control\n                                                    as=\"textarea\"\n                                                    rows={1}\n                                                    placeholder=\"Enter Description\"\n                                                    {...register('description', { required: true })}\n                                                />\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                </Form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='mt-2'>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center py-1\">\n                            <table className=\"table table-striped bg-white\">\n                                <thead>\n                                    <tr className=\"table_header\">\n                                        <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                        <th scope=\"col\">Product Name</th>\n                                        <th scope=\"col\">Modal</th>\n                                        <th scope=\"col\">Code</th>\n                                        <th scope=\"col\">Quantity</th>\n                                    </tr>\n                                </thead>\n                                {!stockId &&\n                                    <tbody>\n                                        {openingProducts && openingProducts.length > 0 ? (\n                                            openingProducts.map((data, index) => (\n                                                <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td className=\"text-uppercase fw-bold\">\n                                                        {data?.product?.name || <span className=\"text-danger\">N/A</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.product?.modelId?.name || <span className=\"text-danger\">N/A</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.product?.code || <span className=\"text-danger\">N/A</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.quantity || <span className=\"text-danger\">N/A</span>}\n                                                    </td>\n                                                    <td></td>\n                                                    {/* <td></td> */}\n                                                    <div className=\"icon-container d-flex pb-0\">\n                                                        <span className=\"icon-wrapper\" title=\"Edit\">\n                                                            <AiOutlineEdit className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                        </span>\n                                                        <span className=\"icon-wrapper\" title=\"Delete\">\n                                                            <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                        </span>\n                                                    </div>\n                                                </tr>\n                                            ))\n                                        ) : (\n                                            <tr>\n                                                <td colSpan=\"6\" className=\"text-center text-muted py-3\">\n                                                    No products added yet. Please add products to add dispatch.\n                                                </td>\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                }\n                                {stockId &&\n                                    <tbody>\n                                        {selectedStock?.productData?.map((data, index) => (\n                                            <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                <td>{index + 1}</td>\n                                                <td>{data?.name}</td>\n                                                <td>{selectedStock?.modelData?.find((ele) => ele?._id === data?.modelId)?.name}</td>\n                                                <td>{data?.code}</td>\n                                                <td>{data?.stockOutQty}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                }\n                            </table>\n\n                        </Card.Body>\n                    </Card>\n                    <div className=\"text-end\">\n                        <Button\n                            className=\"fw-bold cancel-button me-2\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button className=\"fw-bold custom-button\" type='submit'>Submit</Button>\n                    </div>\n                </div>\n            </Form>\n\n            <AddProductModal selectedWarehouse={selectedWarehouse} openingProducts={openingProducts} setOpeningProducts={setOpeningProducts} showModal={showModal} handleClose={handleClose} />\n        </div>\n    )\n}\n\nexport default AddDispatch"],"names":["AddDispatch","_store$getDispatchDat","_store$getDispatchDat2","_store$getWarehouseLi","_store$getWarehouseLi2","_store$listingUsersRe","_store$listingUsersRe2","_store$listingCustome","_store$listingCustome2","_selectedStock$produc","searchParams","useSearchParams","stockId","get","dispatch","useDispatch","handleSubmit","register","setValue","useForm","showModal","setShowModal","useState","store","useSelector","state","today","setToday","Date","toISOString","split","openingProducts","setOpeningProducts","console","log","DispatchData","getDispatchDataReducer","dispatchList","response","Warehouse","getWarehouseListReducer","searchWarehouse","UsersList","listingUsersReducer","listingUsers","CustomerList","listingCustomerReducer","listingCustomer","warehouseOptions","map","warehouse","value","_id","label","name","usersOptions","users","customerOptions","customer","selectedWarehouse","setSelectedWarehouse","selectedUser","setSelectedUser","selectedCustomer","setSelectedCustomer","isAccordionOpen","setIsAccordionOpen","selectedStock","setSelectedStock","isEditing","setIsEditing","editedQuantity","setEditedQuantity","inputRef","useRef","handleSave","useEffect","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","length","foundStock","find","item","_selectedStock$wareho","_selectedStock$wareho2","_selectedStock$custom","_selectedStock$custom2","_selectedStock$dispat","_selectedStock$dispat2","createdAt","updateWarehouses","warehouseData","warehouseId","ele","updatedUser","customerData","customerId","updatedSupplier","dispatchId","dispatchByData","invoiceNumber","description","fright","attachmentGRfile","grNumber","getWarehouseListActions","listingUsersActions","listingCustomerActions","_jsxs","children","_jsx","PageTitle","breadCrumbItems","path","active","title","Form","onSubmit","data","_data$attachmentGRfil","cleanedProducts","_ref","product","rest","formData","FormData","File","append","JSON","stringify","date","updateDispatchActions","createDispatchActions","className","id","style","border","type","onClick","handleAccordionToggle","prevState","Button","handleShow","disabled","IoIosAdd","Row","Col","sm","Group","Label","Select","onChange","selectedOption","options","placeholder","isClearable","required","Control","defaultValue","href","rel","as","rows","Card","boxShadow","Body","scope","index","_data$product","_data$product2","_data$product2$modelI","_data$product3","modelId","code","quantity","AiOutlineEdit","cursor","RiDeleteBinLine","colSpan","productData","_selectedStock$modelD","_selectedStock$modelD2","modelData","stockOutQty","AddProductModal","handleClose"],"sourceRoot":""}
{"version":3,"file":"static/js/65.cdeecf10.chunk.js","mappings":"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","sources":["pages/shivay/stockIn/addStockIn/AddStockIn.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PageTitle from '../../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap'\nimport Select from 'react-select'; // Import React Select\nimport { IoIosAdd } from 'react-icons/io';\nimport { PiEye } from 'react-icons/pi';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport AddProductModal from '../../openingStock/addStock/AddProductModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createStockInActions, getWarehouseListActions, listingSupplierActions, listingUsersActions } from '../../../../redux/actions';\nimport { useForm } from 'react-hook-form';\n\nconst AddStockIn = () => {\n\n    const dispatch = useDispatch();\n    const { handleSubmit, register } = useForm()\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n    const store = useSelector((state) => state)\n    const today = new Date().toISOString().split('T')[0];\n    const [openingProducts, setOpeningProducts] = useState([])\n\n    const Warehouse = store?.getWarehouseListReducer?.searchWarehouse?.response;\n    const UsersList = store?.listingUsersReducer?.listingUsers?.response;\n    const SupplierList = store?.listingSupplierReducer?.listingSupplier?.response;\n\n    const warehouseOptions = Warehouse?.map((warehouse) => ({\n        value: warehouse._id,\n        label: warehouse.name,\n    }));\n\n    const usersOptions = UsersList?.map((users) => ({\n        value: users._id,\n        label: users.name,\n    }));\n\n    const supplierOptions = SupplierList?.map((users) => ({\n        value: users._id,\n        label: users.name,\n    }));\n\n    const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [selectedSupplier, setSelectedSupplier] = useState(null);\n    const [isAccordionOpen, setIsAccordionOpen] = useState(false);\n\n    const handleAccordionToggle = () => {\n        setIsAccordionOpen(prevState => !prevState);\n    };\n    const handleWarehouseChange = (selectedOption) => {\n        setSelectedWarehouse(selectedOption);\n    };\n\n    const handleUserChange = (selectedUser) => {\n        setSelectedUser(selectedUser);\n    };\n\n    const handleSupplierChange = (selectedSupplier) => {\n        setSelectedSupplier(selectedSupplier);\n    };\n\n    useEffect(() => {\n        dispatch(getWarehouseListActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingUsersActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingSupplierActions());\n    }, [dispatch]);\n\n    const onSubmit = (data) => {\n\n        const cleanedProducts = openingProducts.map(({ product, ...rest }) => rest);\n        const formData = new FormData();\n        if (data?.invoiceAttachment?.[0] instanceof File) {\n            formData.append('invoiceAttachment', data.invoiceAttachment[0]);\n        }\n\n        formData.append('warehouseId', selectedWarehouse?.value)\n        formData.append('receivedBy', selectedUser?.value);\n        formData.append('supplierId', selectedSupplier?.value);\n        formData.append('stockInQty', JSON.stringify(cleanedProducts)); \n        formData.append('description', data?.description);\n        formData.append('date', data?.date);\n        formData.append('invoiceNumber', data?.invoiceNumber);\n        formData.append('fright', data?.invoiceValue);\n\n        dispatch(createStockInActions(formData));\n        // console.log(formData, 'formData');\n    };\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Stock In List\", path: \"/shivay/stockIn\" },\n                    { label: \"Add Stock In \", path: \"/shivay/stockIn\", active: true },\n                ]}\n                title={\"Add Stock In\"}\n            />\n            <Form onSubmit={handleSubmit(onSubmit)}>\n\n                <div className=\"accordion mb-3\" id=\"accordionExample\">\n                    <div className=\"accordion-item\" style={{ border: '2px solid #6655D9' }}>\n                        <h2 className=\"accordion-header mt-0\">\n                            <button\n                                className=\"accordion-button py-1 d-flex justify-content-between align-items-center w-100\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#collapseOne\"\n                                aria-expanded={isAccordionOpen ? \"true\" : \"false\"}\n                                aria-controls=\"collapseOne\"\n                                onClick={handleAccordionToggle}  // Toggle the accordion open state\n                            >\n                                <div className=\"flex-grow-1 text-black fw-bold\"> Add Stock In Details</div>\n\n                                {/* Right-aligned buttons */}\n                                <div className=\"d-flex\">\n                                    <Button\n                                        className=\"fw-bold custom-button me-2\"\n                                        onClick={handleShow}\n                                        disabled={!isAccordionOpen}\n                                    >\n                                        <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                                    </Button>\n                                </div>\n                            </button>\n                        </h2>\n\n                        <div\n                            id=\"collapseOne\"\n                            className={`accordion-collapse collapse ${isAccordionOpen ? \"show\" : \"\"}`}\n                            data-bs-parent=\"#accordionExample\"\n                        >\n                            <div className=\"accordion-body py-1\">\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className='mb-0'>Warehouse</Form.Label>\n                                            <Select\n                                                value={selectedWarehouse}\n                                                onChange={handleWarehouseChange}\n                                                options={warehouseOptions}\n                                                placeholder=\"Select a warehouse\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Received By</Form.Label>\n                                            <Select\n                                                value={selectedUser}\n                                                onChange={handleUserChange}\n                                                options={usersOptions}\n                                                placeholder=\"Select a User\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Supplier</Form.Label>\n                                            <Select\n                                                value={selectedSupplier}\n                                                onChange={handleSupplierChange}\n                                                options={supplierOptions}\n                                                placeholder=\"Select a Supplier\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className='mb-0'>Date Range</Form.Label>\n                                            <Form.Control\n                                                type=\"date\"\n                                                defaultValue={today}\n                                                {...register('date', { required: true })}\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Invoice Number</Form.Label>\n                                            <Form.Control\n                                                type=\"number\"\n                                                placeholder=\"Enter Invoice Number\"\n                                                {...register('invoiceNumber', { required: true })}\n\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Attach Invoice</Form.Label>\n                                            <Form.Control\n                                                type=\"file\"\n                                                placeholder=\"Upload file\"\n                                                required\n                                                {...register('invoiceAttachment', { required: true })}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Invoice Value</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                {...register('invoiceValue', { required: true })}\n                                                placeholder=\"Enter Invoice Value\"\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Description</Form.Label>\n                                            <Form.Control\n                                                as=\"textarea\"\n                                                rows={1}\n                                                {...register('description', { required: true })}\n                                                placeholder=\"Enter Description\"\n                                            />\n                                        </Form.Group>\n                                    </Col>\n\n                                </Row>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='mt-2'>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center py-1\">\n                            <table className=\"table table-striped bg-white\">\n                                <thead>\n                                    <tr className=\"table_header\">\n                                        <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                        <th scope=\"col\">Product Name</th>\n                                        <th scope=\"col\">Code</th>\n                                        <th scope=\"col\">Quantity</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {openingProducts && openingProducts.length > 0 ? (\n                                        openingProducts?.map((data, index) => (\n                                            <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td className=\"text-uppercase fw-bold \">\n                                                    {data?.product?.name || <span className=\"text-black\">-</span>}\n                                                </td>\n                                                <td className=\"fw-bold\">\n                                                    {data?.product?.code || <span className=\"text-black\">-</span>}\n                                                </td>\n                                                <td className=\"fw-bold\">\n                                                    {data?.quantity || <span className=\"text-black\">-</span>}\n                                                </td>\n                                                <td></td>\n                                                <td></td>\n                                                <div className=\"icon-container d-flex  pb-0\" >\n                                                    <span className=\"icon-wrapper\" title=\"View\">\n                                                        <PiEye className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                    <span className=\"icon-wrapper\" title=\"Edit\">\n                                                        <AiOutlineEdit className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                    <span className=\"icon-wrapper\" title=\"Delete\">\n                                                        <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                </div>\n                                            </tr>\n                                        ))\n                                    ) : (\n                                        <tr>\n                                            <td colSpan=\"6\" className=\"text-center text-muted py-3\">\n                                                No products added yet. Please add products to add stockIn.\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n\n                            </table>\n\n                        </Card.Body>\n                    </Card>\n                    <div className=\"text-end\">\n                        <Button\n                            className=\"fw-bold cancel-button me-2\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button className=\"fw-bold custom-button\" type='submit'>Submit</Button>\n                    </div>\n                </div>\n            </Form>\n            <AddProductModal openingProducts={openingProducts} setOpeningProducts={setOpeningProducts} showModal={showModal} handleClose={handleClose} />\n        </div >\n    )\n}\n\nexport default AddStockIn"],"names":["AddStockIn","_store$getWarehouseLi","_store$getWarehouseLi2","_store$listingUsersRe","_store$listingUsersRe2","_store$listingSupplie","_store$listingSupplie2","dispatch","useDispatch","handleSubmit","register","useForm","showModal","setShowModal","useState","store","useSelector","state","today","Date","toISOString","split","openingProducts","setOpeningProducts","Warehouse","getWarehouseListReducer","searchWarehouse","response","UsersList","listingUsersReducer","listingUsers","SupplierList","listingSupplierReducer","listingSupplier","warehouseOptions","map","warehouse","value","_id","label","name","usersOptions","users","supplierOptions","selectedWarehouse","setSelectedWarehouse","selectedUser","setSelectedUser","selectedSupplier","setSelectedSupplier","isAccordionOpen","setIsAccordionOpen","useEffect","getWarehouseListActions","listingUsersActions","listingSupplierActions","_jsxs","children","_jsx","PageTitle","breadCrumbItems","path","active","title","Form","onSubmit","data","_data$invoiceAttachme","cleanedProducts","_ref","product","rest","formData","FormData","invoiceAttachment","File","append","JSON","stringify","description","date","invoiceNumber","invoiceValue","createStockInActions","className","id","style","border","type","onClick","handleAccordionToggle","prevState","Button","handleShow","disabled","IoIosAdd","Row","Col","sm","Group","Label","Select","onChange","selectedOption","options","placeholder","isClearable","required","Control","defaultValue","as","rows","Card","boxShadow","Body","scope","length","index","_data$product","_data$product2","code","quantity","PiEye","cursor","AiOutlineEdit","RiDeleteBinLine","colSpan","AddProductModal","handleClose"],"sourceRoot":""}
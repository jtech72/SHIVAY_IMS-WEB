{"version":3,"file":"static/js/290.904e5770.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","pages/shivay/dashboard/tabs/Tab.js","pages/shivay/dashboard/chart/CardTitle.js","pages/shivay/dashboard/chart/PerformanceChart.js","pages/shivay/dashboard/filterSection/Filter.js","pages/shivay/dashboard/Dashboard.js","helpers/loader/Loading.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>{size}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page <strong>{pageIndex} of {totalPages}</strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\r\n                        return <li key={page} className=\"page-ittotalPagesem disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useState } from 'react';\nimport './Tab.css';\n\nconst Tab = ({ connectTab }) => {\n    const [activeTab, setActiveTab] = useState('StockIn');\n\n    const handleClick = (tab, item) => {\n        if (tab === activeTab) {\n            return;\n        }\n        setActiveTab(tab);\n        connectTab(item);\n    };\n\n    return (\n        <div>\n            <div className=\"navbar text-dark \">\n                <div\n                    className={`nav-item fw-bold ${activeTab === 'StockIn' ? 'active' : ''}`}\n                    onClick={() => handleClick('StockIn', 0)}>\n                    Stock In\n                </div>\n                <div\n                    className={`nav-item fw-bold ${activeTab === 'TotalDispatch' ? 'active' : ''}`}\n                    onClick={() => handleClick('TotalDispatch', 1)}>\n                    Total Dispatch\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Tab;","// @flow\nimport React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype MenuItem = {\n    label: string,\n    icon?: string,\n    variant?: string,\n    hasDivider?: boolean,\n};\n\ntype CardTitleProps = {\n    menuItems: Array<MenuItem>,\n    title: string | React$Node,\n    containerClass: string,\n    icon?: string,\n};\n\nconst CardTitle = ({ title, containerClass, icon, menuItems }: CardTitleProps): React$Element<any> => {\n    return (\n        <div className={classNames(containerClass)}>\n            {typeof title === 'string' ? <h6 className=\"header-title fs-6\">{title}</h6> : title}\n            <Dropdown>\n                <Dropdown.Toggle as={Link} to=\"#\" className=\"arrow-none card-drop\">\n                    <i className={classNames(icon ? icon : 'mdi mdi-dots-vertical')} />\n                </Dropdown.Toggle>\n                <Dropdown.Menu align=\"end\">\n                    {(menuItems || []).map((item, index) => {\n                        return (\n                            <React.Fragment key={index}>\n                                {item.hasDivider && <Dropdown.Divider as=\"div\" />}\n                                <Dropdown.Item className={classNames(item.variant ? item.variant : '')}>\n                                    {item.icon && <i className={classNames(item.icon, 'me-1')}></i>}\n                                    {item.label}\n                                </Dropdown.Item>\n                            </React.Fragment>\n                        );\n                    })}\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    );\n};\n\nexport default CardTitle;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport CardTitle from './CardTitle';\n\nconst PerformanceChart = ({ chartData = [] }): React$Element<any> => {\n    const categories = chartData?.map(item => item?.date);\n    const stockInSeries = chartData?.map(item => item?.totalStockInQty);\n    const stockOutSeries = chartData?.map(item => item?.totalStockOutQty);\n\n    const apexBarChartOpts = {\n        chart: {\n            height: 230,\n            type: 'bar',\n            stacked: false,\n            parentHeightOffset: 0,\n            toolbar: { show: false },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '40%',\n            },\n        },\n        dataLabels: { enabled: false },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent'],\n        },\n        legend: { show: true },\n        colors: ['#727cf5', '#fa5c7c'],\n        xaxis: {\n            categories,\n            axisBorder: { show: false },\n        },\n        yaxis: {\n            labels: {\n                formatter: val => val,\n            },\n        },\n        fill: { opacity: 1 },\n        tooltip: {\n            y: {\n                formatter: val => `${val}`,\n            },\n        },\n    };\n\n    const apexBarChartData = [\n        {\n            name: 'Stock In',\n            data: stockInSeries,\n        },\n        {\n            name: 'Stock Out',\n            data: stockOutSeries,\n        },\n    ];\n\n    return (\n        <Card className=\"mb-0\" style={{ boxShadow: 'none' }}>\n            <Card.Body className=\"p-0\">\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between fs-6\"\n                    title=\"Stock In VS Dispatch\"\n                    menuItems={[\n                        { label: 'Sales Report' },\n                        { label: 'Export Report' },\n                        { label: 'Profit' },\n                        { label: 'Action' },\n                    ]}\n                />\n                <div dir=\"ltr\">\n                    <Chart\n                        options={apexBarChartOpts}\n                        series={apexBarChartData}\n                        type=\"bar\"\n                        className=\"apex-charts\"\n                        height={220}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PerformanceChart;\n","import React, { useEffect, useState } from 'react'\nimport { Badge, Button, Col, Form, Row } from 'react-bootstrap'\nimport { TiArrowRight } from 'react-icons/ti'\nimport PerformanceChart from '../chart/PerformanceChart';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getLowStockActions, getRecentTransactionActions, getStockReportActions, getWarehouseListActions } from '../../../../redux/actions';\nimport Select from 'react-select';\nimport DatePicker from 'react-datepicker';\n\nconst Filter = () => {\n\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n  const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [startDate, endDate] = dateRange;\n  const [transactionType, setTransactionType] = useState('');\n  const [productSearch, setProductSearch] = useState('');\n\n  const StockReport = store?.stockReportReducer?.stockReport;\n  const ChartData = store?.stockReportReducer?.stockReport?.chartData;\n  const TopSelling = store?.recentTransactionReducer?.recentTransaction?.getTopSellingProduct;\n  const RecentTransaction = store?.recentTransactionReducer?.recentTransaction?.recentTransaction;\n  // console.log(RecentTransaction, 'RecentTransaction')\n  const TodaysDispatch = store?.lowStockReducer?.lowStock;\n  const LowStock = store?.lowStockReducer?.lowStock?.response;\n  // console.log(LowStock,'LowStock')\n  const Warehouse = store?.getWarehouseListReducer?.searchWarehouse?.response;\n\n\n  const warehouseOptions = Warehouse?.map((warehouse) => ({\n    value: warehouse._id,\n    label: warehouse.name,\n  }));\n\n  useEffect(() => {\n    dispatch(getWarehouseListActions());\n  }, [dispatch]);\n\n  const handleWarehouseChange = (selectedOption) => {\n    setSelectedWarehouse(selectedOption);\n  };\n\n  const formatDateToDDMMYYYY = (date) => {\n    if (!date) return '';\n    const d = new Date(date);\n    const day = String(d.getDate()).padStart(2, '0');\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const year = d.getFullYear();\n    return `${day}-${month}-${year}`;\n  };\n\n  const handleProductsSearch = () => {\n    const payload = {\n      warehouseId: selectedWarehouse?.value,\n      search: productSearch,\n      page: 1,\n      limit: 10,\n      startDate: formatDateToDDMMYYYY(startDate),\n      endDate: formatDateToDDMMYYYY(endDate),\n      stockFilter: transactionType,\n    }\n    dispatch(getLowStockActions(payload));\n    dispatch(getStockReportActions(payload));\n    dispatch(getRecentTransactionActions(payload));\n  }\n\n  const handleSelectChange = (e) => {\n    setTransactionType(e.target.value);\n  };\n\n  return (\n    <div>\n      <Form>\n        <Row>\n          <Col sm={6}>\n            <Form.Group className=\"mb-1\">\n              <Form.Label className='mb-0'>Warehouse <span className='text-danger'>*</span></Form.Label>\n              <Select\n                value={selectedWarehouse}\n                onChange={handleWarehouseChange}\n                options={warehouseOptions}\n                placeholder=\"Select a warehouse\"\n                isClearable\n                required\n              />\n            </Form.Group>\n          </Col>\n          <Col sm={6}>\n            <Form.Group className=\"mb-1\">\n              <Form.Label className='mb-0'>Date Range</Form.Label>\n              <DatePicker\n                selected={startDate}\n                onChange={(update) => setDateRange(update)}\n                startDate={startDate}\n                endDate={endDate}\n                selectsRange\n                className=\"form-control\"\n                placeholderText=\"Select date range\"\n                dateFormat=\"yyyy-MM-dd\"\n              />\n            </Form.Group>\n          </Col>\n          <Col sm={6}>\n            <Form.Group className=\"mb-1\">\n              <Form.Label className='mb-0'>Product</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Product Name\"\n                name=\"productSearch\"\n                value={productSearch}\n                onChange={(e) => setProductSearch(e.target.value)}\n              />\n            </Form.Group>\n          </Col>\n\n          <Col sm={6}>\n            <Form.Group className=\"mb-1\">\n              <Form.Label className='mb-0'>Transaction Type</Form.Label>\n              <Form.Select\n                name=\"transactionType\"\n                value={transactionType}\n                onChange={handleSelectChange}\n              >\n                <option value=\"\">Select a transaction type</option>\n                <option value=\"All\">All</option>\n                <option value=\"In Stock\">In Stock</option>\n                <option value=\"Low on Stock\">Low on Stock</option>\n                <option value=\"Out of Stock\">Out of Stock</option>\n              </Form.Select>\n            </Form.Group>\n          </Col>\n          <div className=\"d-flex justify-content-end mb-2\">\n            <Button className=\"fw-bold custom-button\" onClick={handleProductsSearch} disabled={!selectedWarehouse}>Search</Button>\n          </div>\n          <Col sm={6} className=\"mb-2\">\n            <div\n              className=\"d-flex justify-content-between align-items-center px-3 py-2 rounded-2\"\n              style={{\n                boxShadow:\n                  'rgba(0, 0, 0, 0.05) 0px 4px 10px, rgba(0, 0, 0, 0.03) 0px 2px 5px'\n              }}\n            >\n              <h3 className=\"text-success\">{StockReport?.totalStockIn || '-'}</h3>\n              <p className=\"mb-0\">Total Stock In</p>\n              <TiArrowRight className=\"fs-4\" />\n            </div>\n          </Col>\n          <Col sm={6} className=\"mb-2\">\n            <div\n              className=\"d-flex justify-content-between align-items-center px-3 py-2 rounded-2\"\n              style={{\n                boxShadow:\n                  'rgba(0, 0, 0, 0.05) 0px 4px 10px, rgba(0, 0, 0, 0.03) 0px 2px 5px'\n              }}\n            >\n              <h3 className=\"text-danger\">{StockReport?.totalStockOut || '-'}</h3>\n              <p className=\"mb-0\">Total Dispatch today</p>\n              <TiArrowRight className=\"fs-4\" />\n            </div>\n          </Col>\n          <div className=\"d-flex flex-wrap\">\n            <Col sm={6} className=\"mb-2 d-flex pe-2\">\n              <div\n                className=\"px-1 py-0 rounded-2 w-100\"\n                style={{\n                  boxShadow:\n                    'rgba(0, 0, 0, 0.05) 0px 4px 10px, rgba(0, 0, 0, 0.03) 0px 2px 5px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                }}\n              >\n                <h5>Total Stock Summary</h5>\n                <div>\n                  <PerformanceChart chartData={ChartData} />\n                </div>\n              </div>\n            </Col>\n\n            {/* Top Selling Products Table */}\n            <Col sm={6} className=\"mb-2 d-flex ps-2\">\n              <div\n                className=\"px-1 py-0 rounded-2 w-100\"\n                style={{\n                  boxShadow:\n                    'rgba(0, 0, 0, 0.05) 0px 4px 10px, rgba(0, 0, 0, 0.03) 0px 2px 5px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  height: '100%',\n                }}\n              >\n                <div>\n                  <div className=\"d-flex justify-content-between\">\n                    <h5>Top Selling Products</h5>\n                    <p className=\"mb-0 mt-1 text-primary fs-6\">View All</p>\n                  </div>\n                  <div className=\"table-responsive mb-0 flex-grow-1\">\n                    <table className=\"table table-striped bg-white mb-0\">\n                      <thead>\n                        <tr style={{ color: '#703133' }}>\n                          <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                          <th scope=\"col\">Name</th>\n                          <th scope=\"col\">Units</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {TopSelling && TopSelling.length > 0 ? (\n                          TopSelling.map((data, index) => (\n                            <tr key={index} className=\"text-dark fw-bold text-nowrap\">\n                              <th scope=\"row\" className=\"fs-6\">{index + 1}</th>\n                              <td className=\"text-uppercase fw-bold fs-6 text-primary\">\n                                {data?.name || <span className=\"text-black\">-</span>}\n                              </td>\n                              <td className=\"text-uppercase fw-bold fs-6 text-success\">\n                                {data?.unitsSold || <span className=\"text-black\">-</span>}\n                              </td>\n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td colSpan={3} className=\"text-center text-danger fw-bold\">No product found</td>\n                          </tr>\n                        )}\n                      </tbody>\n\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </Col>\n\n            {/* Recent Transaction Table */}\n            <Col sm={6} className=\"d-flex pe-2\">\n              <div\n                className=\"px-1 py-0 rounded-2 w-100\"\n                style={{\n                  boxShadow:\n                    'rgba(0, 0, 0, 0.05) 0px 4px 10px, rgba(0, 0, 0, 0.03) 0px 2px 5px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  height: '100%',\n                }}\n              >\n                <div>\n                  <div className=\"d-flex justify-content-between\">\n                    <h5>Recent Transaction</h5>\n                    <p className=\"mb-0 mt-1 text-primary fs-6\">View All</p>\n                  </div>\n                  <div className=\"table-responsive mb-0 flex-grow-1\">\n                    <table className=\"table table-striped bg-white mb-0\">\n                      <thead>\n                        <tr style={{ color: '#703133' }}>\n                          <th scope=\"col\">Date</th>\n                          <th scope=\"col\">Invoice</th>\n                          <th scope=\"col\">Location</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {RecentTransaction?.length > 0 ? (\n                          RecentTransaction.slice(0, 4).map((data, index) => (\n                            <tr key={index} className=\"text-dark fw-bold text-nowrap\">\n                              <td className=\"text-uppercase text-success fs-6\">\n                                {data?.date || <span className=\"text-danger\">-</span>}\n                              </td>\n                              <td className=\"text-primary fs-6\" title={data?.invoiceAttachment}>\n                                {data?.invoiceAttachment\n                                  ? `${data.invoiceAttachment.slice(0, 20)}${data.invoiceAttachment.length > 20 ? '...' : ''}`\n                                  : <span className=\"text-danger\">-</span>}\n                              </td>\n                              <td className=\"text-uppercase fw-bold text-primary fs-6\">\n                                {data?.location || <span className=\"text-danger\">-</span>}\n                              </td>\n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td colSpan=\"3\" className=\"text-center text-danger fw-bold\">No transaction found</td>\n                          </tr>\n                        )}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </Col>\n\n            {/* Low Stock Alert Table */}\n            <Col sm={6} className=\" d-flex ps-2\">\n              <div\n                className=\"px-1 py-0 rounded-2 w-100\"\n                style={{\n                  boxShadow:\n                    'rgba(0, 0, 0, 0.05) 0px 4px 10px, rgba(0, 0, 0, 0.03) 0px 2px 5px',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  height: '100%',\n                }}\n              >\n                <div>\n                  <div className=\"d-flex justify-content-between\">\n                    <h5>Low Stock Alert</h5>\n                    <p className=\"mb-0 mt-1 text-primary fs-6\">View All</p>\n                  </div>\n                  <div className=\"table-responsive mb-0 flex-grow-1\">\n                    <table className=\"table table-striped bg-white mb-0\">\n                      <thead>\n                        <tr style={{ color: '#703133' }}>\n                          <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                          <th scope=\"col\">Name</th>\n                          <th scope=\"col\">Quantity</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {LowStock?.length > 0 ? (\n                          LowStock.slice(0, 4).map((data, index) => (\n                            <tr key={index} className=\"text-dark fw-bold text-nowrap\">\n                              <th scope=\"row\" className=\"fs-6\">{index + 1}</th>\n                              <td className=\"text-uppercase fw-bold text-primary fs-6\">\n                                {data?.name || <span className=\"text-black\">-</span>}\n                              </td>\n                              <td className=\"text-uppercase fw-bold text-success fs-5\">\n                                <Badge className=\"bg-danger text-white\" style={{ width: '2rem' }}>\n                                  {data?.quantity !== undefined ? data.quantity : <span className=\"text-white\">-</span>}\n                                </Badge>\n                              </td>\n                            </tr>\n                          ))\n                        ) : (\n                          <tr>\n                            <td colSpan=\"3\" className=\"text-center text-danger fw-bold\">No stock found</td>\n                          </tr>\n                        )}\n                      </tbody>\n\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </Col>\n            <Col sm={12} className=\"mt-3 mb-2\">\n              <div\n                className=\"text-center px-3 py-2 rounded-2\"\n                style={{\n                  boxShadow:\n                    'rgba(0, 0, 0, 0.05) 0px 4px 10px, rgba(0, 0, 0, 0.03) 0px 2px 5px'\n                }}\n              >\n                <h5 className=\"text-secondary mb-0\">Today’s Dispatch</h5>\n                <p className=\"mb-0 fs-6\">{TodaysDispatch?.todayDispatch} Orders Dispatch Today.</p>\n              </div>\n            </Col>\n          </div>\n\n        </Row>\n      </Form>\n    </div>\n  )\n}\n\nexport default Filter","import { useEffect, useState } from \"react\";\r\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PageTitle from \"../../../helpers/PageTitle\";\r\nimport { getDashboardActions, getDispatchActions, getStockinActions } from \"../../../redux/actions\";\r\nimport { FaLayerGroup, FaUsers, } from \"react-icons/fa\";\r\nimport { MdOutlineSell } from \"react-icons/md\";\r\nimport { MdOutlineStoreMallDirectory } from \"react-icons/md\";\r\nimport { DashboardLoading } from \"../../../helpers/loader/Loading\";\r\nimport { MdFilterList } from \"react-icons/md\";\r\nimport Tab from \"./tabs/Tab\";\r\nimport { PiEye } from \"react-icons/pi\";\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport { TiArrowLeft } from \"react-icons/ti\";\r\nimport Filter from \"./filterSection/Filter\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Pagination from \"../../../helpers/Pagination\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Dashboard = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { reset } = useForm();\r\n  const navigate = useNavigate()\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    reset();\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const [search, setSearch] = useState('')\r\n  const totalRecords = '0';\r\n  const [pageIndex, setPageIndex] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [totalPages, setTotalPages] = useState(Math.ceil(totalRecords / pageSize));\r\n  const [dispatchSearch, setDispatchSearch] = useState('')\r\n  const dispatchTotalRecords = '0';\r\n  const [dispatchPageIndex, setDispatchPageIndex] = useState(1);\r\n  const [dispatchPageSize, setDispatchPageSize] = useState(10);\r\n  const [dispatchTotalPages, setDispatchTotalPages] = useState(Math.ceil(dispatchTotalRecords / dispatchPageSize));\r\n  const store = useSelector((state) => state)\r\n\r\n  const StockinData = store?.stockinTransListReducer?.stockinList?.data;\r\n  const DispatchData = store?.dispatchListReducer?.dispatchList?.data;\r\n  const DashboardCount = store?.dashboardDataReducer?.dashboardData?.response;\r\n\r\n  useEffect(() => {\r\n    dispatch(getDashboardActions());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getStockinActions({\r\n      limit: pageSize,\r\n      page: pageIndex,\r\n      search: search,\r\n    }));\r\n  }, [dispatch, search, pageSize, pageIndex]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getDispatchActions({\r\n      limit: dispatchPageSize,\r\n      page: dispatchPageIndex,\r\n      search: dispatchSearch,\r\n    }));\r\n  }, [dispatch, dispatchSearch, dispatchPageSize, dispatchPageIndex]);\r\n\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(totalRecords / pageSize));\r\n  },\r\n    [totalRecords, pageSize]);\r\n\r\n  useEffect(() => {\r\n    setDispatchTotalPages(Math.ceil(dispatchTotalRecords / dispatchPageSize));\r\n  },\r\n    [dispatchTotalRecords, dispatchPageSize]);\r\n\r\n  const dashboardItems = [\r\n    {\r\n      title: \"Total Warehouse\",\r\n      value: DashboardCount?.totalWarehouse,\r\n      icon: <MdOutlineStoreMallDirectory />,\r\n      background: \"#5566D9\",\r\n      link: \"/shivay/warehouse\"\r\n    },\r\n    {\r\n      title: \"Total Products\",\r\n      value: DashboardCount?.productCount,\r\n      icon: <FaLayerGroup />,\r\n      background: \"#5566D9\",\r\n      link: \"/shivay/inventory\"\r\n    },\r\n    {\r\n      title: \"Total User\",\r\n      value: DashboardCount?.userCount,\r\n      icon: <FaUsers />,\r\n      background: \"#5566D9\",\r\n      link: \"/shivay/user\"\r\n    },\r\n    {\r\n      title: \"Total Dispatch\",\r\n      value: DashboardCount?.dispatchCount,\r\n      icon: <MdOutlineSell />,\r\n      background: \"#5566D9\",\r\n      link: \"/shivay/dispatch\"\r\n    }\r\n  ];\r\n\r\n\r\n  const connectTab = (tabIndex) => {\r\n    setActiveTab(tabIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        breadCrumbItems={[\r\n          { label: \"SHIVAY Dashboard\", path: \"/shivay/dashboard\" },\r\n          { label: \"Dashboard\", path: \"/shivay/dashboard\", active: true },\r\n        ]}\r\n        title={\"Dashboard\"}\r\n      />\r\n      {/* card section */}\r\n      <Row className=\"g-4 mt-2\">\r\n        {dashboardItems?.map((item, index) => (\r\n          <Col key={index} md={6} lg={3}>\r\n            <Link to={item.link} className=\"text-decoration-none\">\r\n\r\n              <Card\r\n                className=\"border-0 text-white card-hover-effect cursor\"\r\n                style={\r\n                  item.background.startsWith(\"#\")\r\n                    ? { backgroundColor: item.background }\r\n                    : {\r\n                      backgroundImage: `url('${item.background}')`,\r\n                      backgroundSize: 'cover',\r\n                      backgroundPosition: 'center'\r\n                    }\r\n                }\r\n              >\r\n                <Card.Body className=\"d-flex align-items-center justify-content-between card-body-zoom\">\r\n                  <div>\r\n                    <h6 className=\"fw-bold\">{item.title}</h6>\r\n                    <h2 className=\"fw-bold\">{item.value}</h2>\r\n                  </div>\r\n                  <div className=\"fs-1\">{item.icon}</div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Link>\r\n\r\n          </Col>\r\n        ))}\r\n        <div>\r\n\r\n          {/* List section */}\r\n          <h4 className=\"text-black\">Transaction List</h4>\r\n\r\n          <div className=\"d-flex justify-content-between align-items-start\">\r\n            <Tab connectTab={connectTab} />\r\n\r\n            {/* Search input aligned to the end */}\r\n            <div className=\"d-flex align-items-center\">\r\n              {activeTab === 0 &&\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control w-auto me-2\"\r\n                  style={{ height: '42px', marginTop: '10px' }}\r\n                  placeholder=\"Search...\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n              }\r\n              {activeTab === 1 &&\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control w-auto me-2\"\r\n                  style={{ height: '42px', marginTop: '10px' }}\r\n                  placeholder=\"Search...\"\r\n                  value={dispatchSearch}\r\n                  onChange={(e) => setDispatchSearch(e.target.value)}\r\n                />\r\n              }\r\n\r\n              <Button className=\"mt-2 custom-button\" onClick={handleShow}>\r\n                <MdFilterList className=\"fs-3\" />\r\n              </Button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <Card\r\n              style={{\r\n                boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset',\r\n                // height: '40vh'\r\n              }}\r\n            >\r\n              <Card.Body className=\"text-center py-1\">\r\n\r\n                {activeTab === 0 &&\r\n                  <div>\r\n                    <table className=\"table table-striped bg-white mb-0\">\r\n                      <thead>\r\n                        <tr className=\"table_header\">\r\n                          <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\r\n                          <th scope=\"col\">Product Name</th>\r\n                          <th scope=\"col\">Supplier Name</th>\r\n                          <th scope=\"col\">Code</th>\r\n                          <th scope=\"col\">Stock In</th>\r\n                          <th scope=\"col\">Stock</th>\r\n                        </tr>\r\n                      </thead>\r\n                      {store?.stockinTransListReducer?.loading ? (\r\n                        <tr>\r\n                          <td className='text-center' colSpan={6}>\r\n                            <DashboardLoading />\r\n                          </td>\r\n                        </tr>\r\n                      ) : (\r\n                        <tbody>\r\n                          {StockinData?.length === 0 ? (\r\n                            <tr>\r\n                              <td colSpan={6} className='text-center'>\r\n                                <p className='my-4 py-5'>No stock-in data to show.</p>\r\n                              </td>\r\n                            </tr>\r\n                          ) : (\r\n                            StockinData?.map((data, index) => (\r\n                              <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\r\n                                <th scope=\"row\">{index + 1}</th>\r\n                                <td className=\"text-uppercase fw-bold\">\r\n                                  {data?.productName || <span className=\"text-black\">-</span>}\r\n                                </td>\r\n                                <td className=\"text-uppercase fw-bold\">\r\n                                  {data?.supplierName || <span className=\"text-black\">-</span>}\r\n                                </td>\r\n                                <td className=\"text-uppercase fw-bold\">\r\n                                  {data?.code || <span className=\"text-black\">-</span>}\r\n                                </td>\r\n                                <td className=\"text-uppercase fw-bold\">\r\n                                  {data?.stockIn || <span className=\"text-black\">-</span>}\r\n                                </td>\r\n                                <td className=\"text-uppercase fw-bold \">\r\n                                  {data?.stock || <span className=\"text-black\">-</span>}\r\n                                </td>\r\n                                <td></td> {/* maintain table structure */}\r\n\r\n                                {/* Horizontally centered icons */}\r\n                                <div className=\"icon-container d-flex  pb-0\" >\r\n                                  <span className=\"icon-wrapper me-4\" title=\"View\">\r\n                                    <PiEye className=\"fs-4 text-black\" onClick={() => navigate(`/shivay/addStockIn?id=${data?.productId}`)} style={{ cursor: 'pointer' }} />\r\n                                  </span>\r\n                                </div>\r\n                              </tr>\r\n                            )))}\r\n                        </tbody>\r\n                      )}\r\n                    </table>\r\n                    <Pagination\r\n                      pageIndex={pageIndex}\r\n                      pageSize={pageSize}\r\n                      totalPages={store?.stockinTransListReducer?.stockinList?.totalPages}\r\n                      setPageIndex={setPageIndex}\r\n                      onChangePageSize={setPageSize}\r\n                    />\r\n                  </div>\r\n                }\r\n                {activeTab === 1 &&\r\n                  <div>\r\n                    <div>\r\n                      <table className=\"table table-striped bg-white mb-0\">\r\n                        <thead>\r\n                          <tr className=\"table_header\">\r\n                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\r\n                            <th scope=\"col\" className=\"test\"> Product Name</th>\r\n                            <th scope=\"col\">Dispatch</th>\r\n                            <th scope=\"col\">Stock</th>\r\n                            {/* <th scope=\"col\">View</th> */}\r\n                          </tr>\r\n                        </thead>\r\n                        {store?.dispatchListReducer?.loading ? (\r\n                          <tr>\r\n                            <td className='text-center' colSpan={4}>\r\n                              <DashboardLoading />\r\n                            </td>\r\n                          </tr>\r\n                        ) : (\r\n                          <tbody>\r\n                            {DispatchData?.length === 0 ? (\r\n                              <tr>\r\n                                <td colSpan={6} className='text-center'>\r\n                                  <p className='my-4 py-5'>No dispatch data to show.</p>\r\n                                </td>\r\n                              </tr>\r\n                            ) : (\r\n                              DispatchData?.map((data, index) => (\r\n                                <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\r\n                                  <th scope=\"row\">{index + 1}</th>\r\n                                  <td className=\"text-uppercase fw-bold \">\r\n                                    {data?.productName || <span className=\"text-black\">-</span>}\r\n                                  </td>\r\n                                  <td className=\"text-uppercase fw-bold \">\r\n                                    {data?.stockOut !== undefined ? data.stockOut : <span className=\"text-black\">-</span>}\r\n                                  </td>\r\n                                  <td className=\"text-uppercase fw-bold \">\r\n                                    {data?.stock !== undefined ? data.stock : <span className=\"text-black\">-</span>}\r\n                                  </td>\r\n                                  <td ></td>\r\n                                  <div className=\"icon-container d-flex  pb-0\" >\r\n                                    <span className=\"icon-wrapper me-4\" title=\"View\">\r\n                                      <PiEye className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\r\n                                    </span>\r\n                                  </div>\r\n                                </tr>\r\n                              )))}\r\n                          </tbody>\r\n                        )}\r\n                      </table>\r\n                      <Pagination\r\n                        pageIndex={dispatchPageIndex}\r\n                        pageSize={dispatchPageSize}\r\n                        totalPages={store?.dispatchListReducer?.dispatchList?.totalPages}\r\n                        setPageIndex={setDispatchPageIndex}\r\n                        onChangePageSize={setDispatchPageSize}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                }\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </Row>\r\n      {/* } */}\r\n      {/* Off Canvas */}\r\n      <Offcanvas show={show} onHide={handleClose} placement=\"end\" style={{ width: '40rem' }}>\r\n        {/* backdrop=\"static\" */}\r\n        <Offcanvas.Header className=\"pb-0\" closeButton>\r\n          <Offcanvas.Title><TiArrowLeft className=\"fw-bold fs-3\" style={{ cursor: 'pointer' }} onClick={handleClose} />&nbsp;Filter</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body className=\"pt-0\">\r\n          <div>\r\n            <Filter />\r\n          </div>\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { ColorRing, ThreeDots } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '54vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DashboardLoading = () => {\r\n    return (\r\n        <div style={{ height: '30vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\" style={{ height: '2.2vh' }}>\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"25\"\r\n                width=\"25\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading, DashboardLoading };\r\n"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","connectTab","activeTab","setActiveTab","useState","handleClick","tab","containerClass","icon","menuItems","classNames","Dropdown","Toggle","as","Menu","align","React","hasDivider","Divider","variant","chartData","apexBarChartOpts","chart","height","stacked","parentHeightOffset","toolbar","show","plotOptions","bar","horizontal","columnWidth","dataLabels","enabled","stroke","colors","legend","xaxis","categories","date","axisBorder","yaxis","labels","formatter","val","fill","opacity","tooltip","y","apexBarChartData","name","data","totalStockInQty","totalStockOutQty","Card","boxShadow","Body","CardTitle","dir","Chart","options","series","Filter","_store$stockReportRed","_store$stockReportRed2","_store$stockReportRed3","_store$recentTransact","_store$recentTransact2","_store$recentTransact3","_store$recentTransact4","_store$lowStockReduce","_store$lowStockReduce2","_store$lowStockReduce3","_store$getWarehouseLi","_store$getWarehouseLi2","dispatch","useDispatch","store","useSelector","state","selectedWarehouse","setSelectedWarehouse","dateRange","setDateRange","startDate","endDate","transactionType","setTransactionType","productSearch","setProductSearch","StockReport","stockReportReducer","stockReport","ChartData","TopSelling","recentTransactionReducer","recentTransaction","getTopSellingProduct","RecentTransaction","TodaysDispatch","lowStockReducer","lowStock","LowStock","response","Warehouse","getWarehouseListReducer","searchWarehouse","warehouseOptions","warehouse","_id","getWarehouseListActions","formatDateToDDMMYYYY","d","Date","String","getDate","padStart","getMonth","getFullYear","Form","sm","Group","Label","Select","selectedOption","isClearable","required","DatePicker","selected","update","selectsRange","placeholderText","dateFormat","Control","Button","handleProductsSearch","payload","warehouseId","search","limit","stockFilter","getLowStockActions","getStockReportActions","getRecentTransactionActions","disabled","totalStockIn","TiArrowRight","totalStockOut","display","flexDirection","PerformanceChart","scope","unitsSold","colSpan","slice","invoiceAttachment","location","Badge","undefined","quantity","todayDispatch","Dashboard","_store$stockinTransLi","_store$stockinTransLi2","_store$dispatchListRe","_store$dispatchListRe2","_store$dashboardDataR","_store$dashboardDataR2","_store$stockinTransLi3","_store$stockinTransLi4","_store$stockinTransLi5","_store$dispatchListRe3","_store$dispatchListRe4","_store$dispatchListRe5","reset","useForm","navigate","useNavigate","setShow","handleClose","setSearch","setPageSize","setTotalPages","ceil","dispatchSearch","setDispatchSearch","dispatchPageIndex","setDispatchPageIndex","dispatchPageSize","setDispatchPageSize","dispatchTotalPages","setDispatchTotalPages","StockinData","stockinTransListReducer","stockinList","DispatchData","dispatchListReducer","dispatchList","DashboardCount","dashboardDataReducer","dashboardData","getDashboardActions","getStockinActions","getDispatchActions","dashboardItems","totalWarehouse","MdOutlineStoreMallDirectory","background","link","productCount","FaLayerGroup","userCount","FaUsers","dispatchCount","MdOutlineSell","_Fragment","PageTitle","md","lg","startsWith","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","Tab","tabIndex","marginTop","handleShow","MdFilterList","loading","DashboardLoading","productName","supplierName","code","stockIn","stock","PiEye","productId","cursor","Pagination","stockOut","Offcanvas","onHide","placement","Header","closeButton","Title","TiArrowLeft","Loading","justifyContent","alignItems","ThreeDots","strokeWidth","animationDuration","visible","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}
{"version":3,"file":"static/js/463.96f25cfb.chunk.js","mappings":"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","sources":["pages/shivay/dispatch/Dispatch.js","helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, Card, Col, Form, Modal, Row } from 'react-bootstrap'\nimport { IoIosAdd } from 'react-icons/io'\nimport { AiOutlineEdit } from 'react-icons/ai'\nimport { RiDeleteBinLine } from 'react-icons/ri'\nimport PageTitle from '../../../helpers/PageTitle'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteDispatchActions, getDispatchListActions } from '../../../redux/actions'\nimport { MdDeleteOutline } from 'react-icons/md'\nimport Pagination from '../../../helpers/Pagination'\nimport { Loading } from '../../../helpers/loader/Loading'\n\nconst Dispatch = () => {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState('')\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [dispatchToDelete, setDispatchToDelete] = useState(null);\n  const totalRecords = '0';\n  const [pageIndex, setPageIndex] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(Math.ceil(totalRecords / pageSize));\n  const store = useSelector((state) => state)\n\n  const DispatchData = store?.getDispatchDataReducer?.dispatchList?.response;\n  const deleteResponse = store?.deleteDispatchReducer?.deleteDispatch?.status;\n\n  useEffect(() => {\n    dispatch(getDispatchListActions({\n      limit: pageSize,\n      page: pageIndex,\n      search: search,\n    }));\n  }, [dispatch, search, pageSize, pageIndex]);\n\n  const handleDelete = () => {\n    dispatch(deleteDispatchActions({ _id: dispatchToDelete }));\n    setShowConfirm(false);\n  };\n\n  useEffect(() => {\n    if (deleteResponse === 200) {\n      dispatch(getDispatchListActions({\n        limit: pageSize,\n        page: pageIndex,\n        search: search,\n      }));\n    }\n  }, [deleteResponse]);\n\n  useEffect(() => {\n    setTotalPages(Math.ceil(totalRecords / pageSize));\n  },\n    [totalRecords, pageSize]);\n\n  return (\n    <div>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"SHIVAY Dispatch List\", path: \"/shivay/dispatch\" },\n          { label: \"Dispatch List\", path: \"/shivay/dispatch\", active: true },\n        ]}\n        title={\"Dispatch List\"}\n      />\n      <Form>\n        <Row>\n          <Col sm={12}>\n            <div className='d-flex justify-content-end mt-1'>\n              <input\n                type=\"text\"\n                className=\"form-control w-auto me-2\"\n                style={{ height: '42px', marginTop: '10px' }}\n                placeholder=\"Search...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button className=\"mt-2 fw-bold custom-button\"\n                onClick={() => {\n                  navigate('/shivay/addDispatch')\n                }}\n              >\n                <IoIosAdd className=\"fs-3\" />&nbsp;Dispatch\n              </Button>\n            </div>\n          </Col>\n\n          <div className='mt-2'>\n            <Card\n              style={{\n                boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset'\n              }}\n            >\n              <Card.Body className=\"text-center py-1\">\n                <table className=\"table table-striped bg-white mb-0\">\n                  <thead>\n                    <tr className=\"table_header\">\n                      <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                      <th scope=\"col\">Customer Name</th>\n                      <th scope=\"col\">Location</th>\n                      <th scope=\"col\">Date</th>\n                      <th scope=\"col\">Quantity</th>\n                    </tr>\n                  </thead>\n                  {store?.getDispatchDataReducer?.loading ? (\n                    <tr>\n                      <td className='text-center' colSpan={6}>\n                        <Loading />\n                      </td>\n                    </tr>\n                  ) : (\n                    <tbody>\n                      {DispatchData?.length === 0 ? (\n                        <tr>\n                          <td colSpan={6} className='text-center'>\n                            <p className='my-5 py-5 '>No data found in dispatch.</p>\n                          </td>\n                        </tr>\n                      ) : (\n                        DispatchData?.map((data, index) => (\n                          <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                            <th scope=\"row\">{index + 1}</th>\n                            <td className=\"text-uppercase fw-bold \">\n                              {data?.customerData?.[0]?.name || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td className=\"fw-bold\">\n                              {data?.customerData?.[0]?.location || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td className=\"fw-bold\">\n                              {data?.createdAt ? (\n                                new Date(data?.createdAt).toLocaleDateString('en-GB')\n                              ) : (\n                                <span className=\"text-black\">-</span>\n                              )}\n                            </td>\n                            <td className=\"fw-bold\">\n                              {data?.quantity || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td></td>\n                            <td></td>\n                            <div className=\"icon-container d-flex pb-0\" >\n                              <span className=\"icon-wrapper\" title=\"Edit\">\n                                <AiOutlineEdit onClick={()=>navigate(`/shivay/addDispatch?id=${data?._id}`)} className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                              </span>\n                              <span className=\"icon-wrapper\" title=\"Delete\" onClick={() => { setDispatchToDelete(data?._id); setShowConfirm(true); }}>\n                                <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                              </span>\n                            </div>\n                          </tr>\n                        )))}\n                    </tbody>\n                  )}\n                </table>\n                <Pagination\n                  pageIndex={pageIndex}\n                  pageSize={pageSize}\n                  totalPages={useSelector((state) => state?.getDispatchDataReducer?.dispatchList?.totalPages)}\n                  setPageIndex={setPageIndex}\n                  onChangePageSize={setPageSize}\n                />\n              </Card.Body>\n            </Card>\n          </div>\n        </Row>\n      </Form>\n\n      {/* delete modal */}\n      <Modal show={showConfirm} onHide={() => setShowConfirm(false)} >\n        <Modal.Body className='text-center'>\n          <h4 className='text-black'>Confirm Deletion</h4>\n          <p className='mt-2 mb-3'> Are you sure you want to delete this Dispatch?</p>\n          <span className='bg-light rounded-circle p-3 '>\n            <MdDeleteOutline className='fs-1  text-danger' />\n          </span>\n          <div className='d-flex justify-content-center mt-3 gap-2'>\n            <Button className='cancel-button' onClick={() => setShowConfirm(false)}>\n              Cancel\n            </Button>\n            <Button className='custom-button' onClick={handleDelete}>\n              Delete\n            </Button>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Dispatch\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>{size}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page <strong>{pageIndex} of {totalPages}</strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\r\n                        return <li key={page} className=\"page-ittotalPagesem disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { ColorRing, ThreeDots } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '54vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DashboardLoading = () => {\r\n    return (\r\n        <div style={{ height: '30vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\" style={{ height: '2.2vh' }}>\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"25\"\r\n                width=\"25\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading, DashboardLoading };\r\n"],"names":["Dispatch","_store$getDispatchDat","_store$getDispatchDat2","_store$deleteDispatch","_store$deleteDispatch2","_store$getDispatchDat3","navigate","useNavigate","dispatch","useDispatch","search","setSearch","useState","showConfirm","setShowConfirm","dispatchToDelete","setDispatchToDelete","pageIndex","setPageIndex","pageSize","setPageSize","totalPages","setTotalPages","Math","ceil","store","useSelector","state","DispatchData","getDispatchDataReducer","dispatchList","response","deleteResponse","deleteDispatchReducer","deleteDispatch","status","useEffect","getDispatchListActions","limit","page","_jsxs","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Form","Row","Col","sm","className","type","style","height","marginTop","placeholder","value","onChange","e","target","Button","onClick","IoIosAdd","Card","boxShadow","Body","scope","loading","colSpan","Loading","length","map","data","index","_data$customerData","_data$customerData$","_data$customerData2","_data$customerData2$","customerData","name","location","createdAt","Date","toLocaleDateString","quantity","AiOutlineEdit","_id","cursor","RiDeleteBinLine","Pagination","_state$getDispatchDat","_state$getDispatchDat2","onChangePageSize","Modal","show","onHide","MdDeleteOutline","handleDelete","deleteDispatchActions","_ref","max","newSize","Number","size","min","enteredPage","width","Link","to","Array","from","_","i","isCurrentPage","props","Breadcrumb","listProps","Item","href","item","color","display","justifyContent","alignItems","ThreeDots","strokeWidth","animationDuration","visible","DashboardLoading","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}
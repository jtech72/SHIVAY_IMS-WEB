{"version":3,"file":"static/js/65.0eaa4a2b.chunk.js","mappings":"4KAkBA,MA6BA,EA7BmBA,IAEXC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACAF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAAD,UACAE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBH,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAC7BE,EAAAA,EAAAA,MAACE,EAAAA,EAAU,CAACC,UAAW,CAAEF,UAAW,OAAQH,SAAA,EACxCF,EAAAA,EAAAA,KAACM,EAAAA,EAAWE,KAAI,CAACC,KAAK,IAAGP,SAAE,cAE1BH,EAAMW,gBAAgBC,KAAI,CAACC,EAAMC,IACvBD,EAAKE,QACRd,EAAAA,EAAAA,KAACM,EAAAA,EAAWE,KAAI,CAACM,QAAM,EAAaC,MAAO,CAAEC,MAAO,QAASd,SACxDU,EAAKK,OADmBJ,IAI7Bb,EAAAA,EAAAA,KAACM,EAAAA,EAAWE,KAAI,CAAaC,KAAMG,EAAKM,KAAKhB,SACxCU,EAAKK,OADYJ,WAOtCb,EAAAA,EAAAA,KAAA,MAAIK,UAAU,aAAaU,MAAO,CAAEC,MAAO,QAASd,SAAEH,EAAMoB,c,mQCvBhF,MAmgBA,EAngBmBC,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACrB,MAAOC,IAAgBC,EAAAA,EAAAA,MACjBC,EAAUF,EAAaG,IAAI,MAC3BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,aAAEC,EAAY,SAAEC,EAAQ,SAAEC,EAAQ,WAAEC,EAAU,MAACC,IAAUC,EAAAA,EAAAA,OACxDC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAGrCC,GAAQC,EAAAA,EAAAA,KAAaC,GAAUA,KAC9BC,EAAOC,IAAYL,EAAAA,EAAAA,WAAS,IAAIM,MAAOC,cAAcC,MAAM,KAAK,KAChEC,EAAiBC,IAAsBV,EAAAA,EAAAA,UAAS,IACjDW,EAAmB,OAALV,QAAK,IAALA,GAAyB,QAApB/B,EAAL+B,EAAOW,0BAAkB,IAAA1C,GAAa,QAAbC,EAAzBD,EAA2B2C,mBAAW,IAAA1C,OAAjC,EAALA,EAAwC2C,UACrDC,EAAeC,IAAoBhB,EAAAA,EAAAA,UAAS,MAC7CiB,GAAiB,OAALhB,QAAK,IAALA,GAA8B,QAAzB7B,EAAL6B,EAAOiB,+BAAuB,IAAA9C,GAAiB,QAAjBC,EAA9BD,EAAgC+C,uBAAe,IAAA9C,OAA1C,EAALA,EAAiDyC,SAC7DM,GAAiB,OAALnB,QAAK,IAALA,GAA0B,QAArB3B,EAAL2B,EAAOoB,2BAAmB,IAAA/C,GAAc,QAAdC,EAA1BD,EAA4BgD,oBAAY,IAAA/C,OAAnC,EAALA,EAA0CuC,SACtDS,GAAoB,OAALtB,QAAK,IAALA,GAA6B,QAAxBzB,EAALyB,EAAOuB,8BAAsB,IAAAhD,GAAiB,QAAjBC,EAA7BD,EAA+BiD,uBAAe,IAAAhD,OAAzC,EAALA,EAAgDqC,UAC9DY,GAAWC,KAAgB3B,EAAAA,EAAAA,WAAS,IACpC4B,GAAgBC,KAAqB7B,EAAAA,EAAAA,UAAS,KAC9C8B,GAAWC,KAAgB/B,EAAAA,EAAAA,UAAS,IACrCgC,IAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAMtC,EAAM,qBAClBuC,QAAQC,IAAIF,GAAI,OAEhB,MAAMG,GAAsB,OAALpC,QAAK,IAALA,GAA2B,QAAtBvB,EAALuB,EAAOqC,4BAAoB,IAAA5D,GAAe,QAAfC,EAA3BD,EAA6B6D,qBAAa,IAAA5D,OAArC,EAALA,EAA4C6D,QAE5DC,GAAgBC,KAAqB1C,EAAAA,EAAAA,UAAS,IAE/C2C,IAAeV,EAAAA,EAAAA,WAwBrBW,EAAAA,EAAAA,YAAU,KACiB,MAAnBP,IACA/C,EAAS,kBACb,GACD,CAAC+C,KAGJ,MAAMQ,GAAaA,KACflB,IAAa,EAAM,EAIjBmB,GAAkBA,KACpBnB,IAAa,EAAK,GAEtBiB,EAAAA,EAAAA,YAAU,KACN,MAAMG,EAAsBC,IACpBhB,GAASiB,UAAYjB,GAASiB,QAAQC,SAASF,EAAEG,SACjDN,IACJ,EAIJ,GAAInB,GAEA,OADA0B,SAASC,iBAAiB,YAAaN,GAChC,KACHK,SAASE,oBAAoB,YAAaP,EAAmB,CAErE,GACD,CAACrB,MAEJkB,EAAAA,EAAAA,YAAU,KACN,GAAI1D,IAAsB,OAAXyB,QAAW,IAAXA,OAAW,EAAXA,EAAa4C,QAAS,EAAG,CACpC,MAAMC,EAAwB,OAAX7C,QAAW,IAAXA,OAAW,EAAXA,EAAa8C,MAAKhG,GAAQA,EAAKiG,MAAQxE,IAC1D8B,EAAiBwC,EACrB,IACD,CAACtE,EAASyB,IAEb,MAAMgD,GAA4B,OAAT1C,SAAS,IAATA,QAAS,EAATA,GAAWzD,KAAKoG,IAAS,CAC9CC,MAAOD,EAAUF,IACjB5F,MAAO8F,EAAUE,SAGfC,GAAwB,OAAT3C,SAAS,IAATA,QAAS,EAATA,GAAW5D,KAAKwG,IAAK,CACtCH,MAAOG,EAAMN,IACb5F,MAAOkG,EAAMF,KACRtD,MAAM,KACNhD,KAAIyG,GAAQA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,GAAGC,gBACzDC,KAAK,SAIRC,GAA8B,OAAZhD,SAAY,IAAZA,QAAY,EAAZA,GAAc/D,KAAKwG,IAAK,CAC5CH,MAAOG,EAAMN,IACb5F,MAAOkG,EAAMF,UAGVU,GAAmBC,KAAwBzE,EAAAA,EAAAA,UAAS,OACpD0E,GAAcC,KAAmB3E,EAAAA,EAAAA,UAAS,OAC1C4E,GAAkBC,KAAuB7E,EAAAA,EAAAA,UAAS,OAClD8E,GAAiBC,KAAsB/E,EAAAA,EAAAA,WAAS,GACvDmC,QAAQC,IAAIoC,GAAmB,sBAC/B5B,EAAAA,EAAAA,YAAU,KACN,GAAI1D,GAAW6B,EAAe,CAAC,IAADiE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC1BpD,QAAQC,IAAIrB,EAAe,WAC3BV,EAAsB,OAAbU,QAAa,IAAbA,GAAAA,EAAeyE,UAAY,IAAIlF,KAAkB,OAAbS,QAAa,IAAbA,OAAa,EAAbA,EAAeyE,WAAWjF,cAAcC,MAAM,KAAK,GAAK,IACrG,MAAMiF,EAAgC,OAAb1E,QAAa,IAAbA,GAAAA,EAAe2E,cAClC,CAAE7B,MAAO9C,EAAc4E,YAAa7H,MAAkC,QAA7BkH,EAAEjE,EAAc2E,qBAAa,IAAAV,GAAwD,QAAxDC,EAA3BD,EAA6BvB,MAAMmC,IAAW,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKlC,QAAqB,OAAb3C,QAAa,IAAbA,OAAa,EAAbA,EAAe4E,sBAAY,IAAAV,OAAxD,EAA3BA,EAAqFnB,MAChI,CAAC,EACPW,GAAqBgB,GAErB,MAAMI,EAA2B,OAAb9E,QAAa,IAAbA,GAAAA,EAAe+E,eAAiB,CAAEjC,MAAoB,OAAb9C,QAAa,IAAbA,OAAa,EAAbA,EAAegF,WAAYjI,MAAmC,QAA9BoH,EAAEnE,EAAc+E,sBAAc,IAAAZ,GAAuD,QAAvDC,EAA5BD,EAA8BzB,MAAMmC,IAAW,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKlC,QAAqB,OAAb3C,QAAa,IAAbA,OAAa,EAAbA,EAAegF,qBAAW,IAAAZ,OAAvD,EAA5BA,EAAqFrB,MAC9K,CAAC,EACPa,GAAgBkB,GAEhB,MAAMG,EAA+B,OAAbjF,QAAa,IAAbA,GAAAA,EAAekF,WAAa,CAAEpC,MAAoB,OAAb9C,QAAa,IAAbA,OAAa,EAAbA,EAAekF,WAAYnI,MAAiC,QAA5BsH,EAAErE,EAAcmF,oBAAY,IAAAd,GAAuD,QAAvDC,EAA1BD,EAA4B3B,MAAMmC,IAAW,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKlC,QAAqB,OAAb3C,QAAa,IAAbA,OAAa,EAAbA,EAAekF,qBAAW,IAAAZ,OAAvD,EAA1BA,EAAmFvB,MAC5K,CAAC,EACPe,GAAoBmB,GAEpBtG,EAAS,iBAA8B,OAAbqB,QAAa,IAAbA,OAAa,EAAbA,EAAeoF,gBAAiB,IAC1DzG,EAAS,eAA4B,OAAbqB,QAAa,IAAbA,OAAa,EAAbA,EAAeqF,cAAe,IACtD1G,EAAS,gBAA6B,OAAbqB,QAAa,IAAbA,OAAa,EAAbA,EAAesF,SAAU,IAClD3G,EAAS,qBAAkC,OAAbqB,QAAa,IAAbA,OAAa,EAAbA,EAAeuF,oBAAqB,IAClE5D,IAA+B,OAAb3B,QAAa,IAAbA,OAAa,EAAbA,EAAewF,wBAAyB,IAC1D1E,IAA+B,OAAbd,QAAa,IAAbA,GAA0B,QAAbuE,EAAbvE,EAAeyF,mBAAW,IAAAlB,OAAb,EAAbA,EAA4BmB,aAAc,IAC5D1E,GAA0B,OAAbhB,QAAa,IAAbA,GAA0B,QAAbwE,EAAbxE,EAAeyF,mBAAW,IAAAjB,OAAb,EAAbA,EAA4B7B,IAC7C,IAED,CAACxE,EAAS6B,IACboB,QAAQC,IAAIoC,GAAmB,sBAgB/B5B,EAAAA,EAAAA,YAAU,KACNxD,GAASsH,EAAAA,EAAAA,MAA0B,GACpC,CAACtH,KAEJwD,EAAAA,EAAAA,YAAU,KACNxD,GAASuH,EAAAA,EAAAA,MAAsB,GAChC,CAACvH,KAEJwD,EAAAA,EAAAA,YAAU,KACNxD,GAASwH,EAAAA,EAAAA,MAAyB,GACnC,CAACxH,IAgDJ,OACInC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIF,EAAAA,EAAAA,KAACgK,EAAAA,EAAS,CACNtJ,gBAAiB,CACb,CAAEO,MAAO,uBAAwBC,KAAM,mBACvC,CAAED,MAAOoB,EAAU,gBAAkB,eAAgBnB,KAAM,kBAAmBJ,QAAQ,IAE1FK,MAAOkB,EAAU,gBAAkB,kBAEvCjC,EAAAA,EAAAA,MAAC6J,EAAAA,EAAI,CAACC,SAAUvH,GAlDNwH,IAAU,IAADC,EAC/B9E,QAAQC,IAAI4E,EAAK,gBAAgBrE,IACzB,MAAMuE,EAAkBzG,EAAgBjD,KAAI2J,IAAA,IAAC,QAAEC,KAAYC,GAAMF,EAAA,OAAKE,CAAI,IACpEC,EAAW,IAAIC,SAC8B,IAADC,GAA1C,OAAJR,QAAI,IAAJA,GAAuB,QAAnBC,EAAJD,EAAMV,yBAAiB,IAAAW,OAAnB,EAAJA,EAA0B,cAAcQ,MACxCH,EAASI,OAAO,oBAA2C,QAAxBF,EAAER,EAAKV,yBAAiB,IAAAkB,OAAA,EAAtBA,EAAyB,IAGlEF,EAASI,OAAO,cAAgC,OAAjBlD,SAAiB,IAAjBA,QAAiB,EAAjBA,GAAmBX,OAClDyD,EAASI,OAAO,aAA0B,OAAZhD,SAAY,IAAZA,QAAY,EAAZA,GAAcb,OAC5CyD,EAASI,OAAO,aAA8B,OAAhB9C,SAAgB,IAAhBA,QAAgB,EAAhBA,GAAkBf,OAChDyD,EAASI,OAAO,cAAmB,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMZ,aACrCkB,EAASI,OAAO,gBAAqB,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMb,eACvCmB,EAASI,OAAO,SAAc,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMW,cAChCL,EAASI,OAAO,wBAAyBjF,IAEpCvD,GACDoI,EAASI,OAAO,OAAY,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMY,MAG9B1I,GACAoI,EAASI,OAAO,MAAOxI,GAEvBA,GACAoI,EAASI,OAAO,YAAa5F,IAG7B5C,EACAoI,EAASI,OAAO,WAAYxI,EAAU2I,SAASjG,IAAkBkG,KAAKC,UAAUb,IAEhFI,EAASI,OAAO,aAAcxI,EAAU2I,SAASjG,IAAkBkG,KAAKC,UAAUb,IAIlF9H,EADAF,GACS8I,EAAAA,EAAAA,IAAqBV,IAErBW,EAAAA,EAAAA,IAAqBX,GAElC,IAY2CvK,SAAA,EAEnCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iBAAiBgL,GAAG,mBAAkBnL,UACjDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAiBU,MAAO,CAAEuK,OAAQ,qBAAsBpL,SAAA,EACnEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,wBAAuBH,UACjCE,EAAAA,EAAAA,MAAA,UACIC,UAAU,gFACVkL,KAAK,SACL,iBAAe,WACf,iBAAe,eACf,gBAAetD,GAAkB,OAAS,QAC1C,gBAAc,cACduD,QA9FEC,KAC1BvD,IAAmBwD,IAAcA,GAAU,EA6FcxL,SAAA,EAEjCE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCH,SAAA,CAAC,IAAEmC,EAAU,OAAS,MAAM,wBAG3ErC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,SAAQH,UACnBE,EAAAA,EAAAA,MAACuL,EAAAA,EAAM,CACHtL,UAAU,6BACVmL,QA7OjBI,IAAM1I,GAAa,GA8OFhD,SAAA,EAEAF,EAAAA,EAAAA,KAAC6L,EAAAA,IAAQ,CAACxL,UAAU,SAAS,yBAM7CL,EAAAA,EAAAA,KAAA,OACIqL,GAAG,cACHhL,UAAW,gCAA+B4H,GAAkB,GAAK,QACjE,iBAAe,oBAAmB/H,UAElCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sBAAqBH,UAChCE,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAA,CAAC,cAAYmC,IAAWrC,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaH,SAAC,UAClFF,EAAAA,EAAAA,KAACiM,EAAAA,GAAM,CACHjF,MAAOW,GACPuE,SAxHbC,IAC3BvE,GAAqBuE,EAAe,EAwHIC,QAAStF,GACTuF,YAAY,qBACZC,aAAW,EACXC,UAAQ,UAIpBvM,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAA,CAAC,gBAAcmC,IAAWrC,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaH,SAAC,UACpFF,EAAAA,EAAAA,KAACiM,EAAAA,GAAM,CACHjF,MAAOa,GACPqE,SAjIlBrE,IACtBC,GAAgBD,EAAa,EAiIWuE,QAASlF,GACTmF,YAAY,gBACZC,aAAW,EACXC,UAAQ,UAIpBvM,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAA,CAAC,aAAWmC,IAAWrC,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaH,SAAC,UACjFF,EAAAA,EAAAA,KAACiM,EAAAA,GAAM,CACHjF,MAAOe,GACPmE,SA1IdnE,IAC1BC,GAAoBD,EAAiB,EA0IGqE,QAAS1E,GACT2E,YAAY,oBACZC,aAAW,EACXC,UAAQ,UAIpBvM,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACiK,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAC,gBAC7BF,EAAAA,EAAAA,KAACiK,EAAAA,EAAKuC,QAAO,CACTjB,KAAK,OACLvE,MAAOzD,KACHX,EAAS,gBAIzB5C,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAA,CAAC,mBAAiBmC,IAAWrC,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaH,SAAC,UACvFF,EAAAA,EAAAA,KAACiK,EAAAA,EAAKuC,QAAO,CACTjB,KAAK,SACLc,YAAY,0BACRzJ,EAAS,gBAAiB,CAAE2J,UAAU,IAC1CA,UAAQ,UAIpBvM,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAA,CAAC,aAExB0F,KACGxF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,kBAAiBH,SAAA,CAAC,KAAG0F,GAAe,QAEzC,OAAb1B,QAAa,IAAbA,OAAa,EAAbA,EAAeuF,qBACbzJ,EAAAA,EAAAA,KAAA,KACIS,KAAmB,OAAbyD,QAAa,IAAbA,OAAa,EAAbA,EAAeuF,kBACrBnD,OAAO,SACPnF,MAAM,sBACNsL,IAAI,sBACJvM,UAEDF,EAAAA,EAAAA,KAAC0M,EAAAA,IAAuB,CAACrM,UAAU,iBAGxCgC,IAAWrC,EAAAA,EAAAA,KAAA,QAAMK,UAAU,cAAaH,SAAC,UAG7C0F,IAaExF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCH,SAAA,EAC5CF,EAAAA,EAAAA,KAACiK,EAAAA,EAAKuC,QAAO,CACTjB,KAAK,OACLc,YAAY,iBAERzJ,EAAS,wBAGjB5C,EAAAA,EAAAA,KAAC2M,EAAAA,IAAQ,CACLC,KAAM,GACNvM,UAAU,cACVU,MAAO,CAAE8L,OAAQ,WACjBrB,QA1UxBsB,KACxBjH,GAAkB,IAClBhD,EAAS,wBAAyB,IAClCC,EAAW,qBACPgD,GAAaM,UAASN,GAAaM,QAAQY,MAAQ,GAAE,EAuUT7F,MAAM,+BAzBdf,EAAAA,EAAAA,MAAC6J,EAAAA,EAAKgC,OAAM,CACR5L,UAAU,OAEV2G,MAAOpB,GACPsG,SA5TZ/F,IAChC,MAAMoF,EAAOpF,EAAEG,OAAOU,MACtBnB,GAAkB0F,GAClB1I,EAAS,wBAAyB0I,EAAK,EAyT0CrL,SAAA,EAGrCF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,GAAE9G,SAAC,4BACjBF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,UAAS9G,SAAC,aACxBF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,mBAAkB9G,SAAC,8BAwBjDF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACiK,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAC,mBAC7BF,EAAAA,EAAAA,KAACiK,EAAAA,EAAKuC,QAAO,CACTjB,KAAK,UACD3I,EAAS,gBACbyJ,YAAY,8BAIxBrM,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACiK,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAC,iBAC7BF,EAAAA,EAAAA,KAACiK,EAAAA,EAAKuC,QAAO,CACTO,GAAG,WACHC,KAAM,KACFpK,EAAS,eACbyJ,YAAY,wCAU5CjM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMH,SAAA,EACjBF,EAAAA,EAAAA,KAACiN,EAAAA,EAAI,CACDlM,MAAO,CAAEmM,UAAW,sIAAuIhN,UAE3JF,EAAAA,EAAAA,KAACiN,EAAAA,EAAKE,KAAI,CAAC9M,UAAU,mBAAkBH,UACnCE,EAAAA,EAAAA,MAAA,SAAOC,UAAU,+BAA8BH,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SAAAE,UACIE,EAAAA,EAAAA,MAAA,MAAIC,UAAU,eAAcH,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIoN,MAAM,MAAKlN,UAACF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,qBAC7BL,EAAAA,EAAAA,KAAA,MAAIoN,MAAM,MAAKlN,SAAC,kBAChBF,EAAAA,EAAAA,KAAA,MAAIoN,MAAM,MAAKlN,SAAC,gBAChBF,EAAAA,EAAAA,KAAA,MAAIoN,MAAM,MAAKlN,SAAC,UAChBF,EAAAA,EAAAA,KAAA,MAAIoN,MAAM,MAAKlN,SAAC,mBAGxBF,EAAAA,EAAAA,KAAA,SAAAE,SACMmC,GAiCEjC,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIoN,MAAM,MAAKlN,SAAC,OAChBF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,yBAAwBH,UACpB,OAAbgE,QAAa,IAAbA,GAA0B,QAAbnC,EAAbmC,EAAeyF,mBAAW,IAAA5H,OAAb,EAAbA,EAA4BkF,QAAQjH,EAAAA,EAAAA,KAAA,QAAMK,UAAU,aAAYH,SAAC,SAEtEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,UAASH,UACL,OAAbgE,QAAa,IAAbA,GAAwB,QAAXlC,EAAbkC,EAAemJ,iBAAS,IAAArL,GAAK,QAALC,EAAxBD,EAA2B,UAAE,IAAAC,OAAhB,EAAbA,EAA+BgF,QAAQjH,EAAAA,EAAAA,KAAA,QAAMK,UAAU,aAAYH,SAAC,SAEzEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,UAASH,UACL,OAAbgE,QAAa,IAAbA,GAA0B,QAAbhC,EAAbgC,EAAeyF,mBAAW,IAAAzH,OAAb,EAAbA,EAA4BoL,QAAQtN,EAAAA,EAAAA,KAAA,QAAMK,UAAU,aAAYH,SAAC,SAEtEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,UAASH,SAClB2E,IACG7E,EAAAA,EAAAA,KAAA,SACIuN,IAAKpI,GACLoG,KAAK,SACLvE,MAAOjC,GACPmH,SAzatB/F,IAC1BnB,GAAkBmB,EAAEG,OAAOU,MAAM,EAyaewG,WAva5BrH,IACN,UAAVA,EAAEsH,KACFzH,IACJ,EAsagD3F,UAAU,+BACVU,MAAO,CAAE2M,MAAO,MAAOC,QAAS,eAAgBC,UAAW,YAG/DxN,EAAAA,EAAAA,MAAA,QAAMoL,QAASvF,GAAgB/F,SAAA,CAAE,IAAE6E,GAAe,KAAC/E,EAAAA,EAAAA,KAAC6N,EAAAA,IAAmB,CAACxN,UAAU,8BAI1FL,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6BAA4BH,UACvCF,EAAAA,EAAAA,KAAA,QACIK,UAAU,qCACVc,MAAM,OACNqK,QAASvF,GAAgB/F,UAEzBF,EAAAA,EAAAA,KAAC8N,EAAAA,IAAa,CAACzN,UAAU,mBAAmBU,MAAO,CAAE8L,OAAQ,oBAnEzEjJ,GAAmBA,EAAgB8C,OAAS,EACxC9C,EAAgBjD,KAAI,CAACwJ,EAAMtJ,KAAK,IAAAkN,EAAAC,EAAAC,EAAAC,EAAA,OAC5B9N,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,8CAA6CH,SAAA,EACnEF,EAAAA,EAAAA,KAAA,MAAIoN,MAAM,MAAKlN,SAAEW,EAAQ,KACzBb,EAAAA,EAAAA,KAAA,MAAIK,UAAU,yBAAwBH,UAC7B,OAAJiK,QAAI,IAAJA,GAAa,QAAT4D,EAAJ5D,EAAMI,eAAO,IAAAwD,OAAT,EAAJA,EAAe9G,QAAQjH,EAAAA,EAAAA,KAAA,QAAMK,UAAU,aAAYH,SAAC,SAEzDF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,UAASH,UACd,OAAJiK,QAAI,IAAJA,GAAa,QAAT6D,EAAJ7D,EAAMI,eAAO,IAAAyD,GAAS,QAATC,EAAbD,EAAeG,eAAO,IAAAF,OAAlB,EAAJA,EAAwBhH,QAAQjH,EAAAA,EAAAA,KAAA,QAAMK,UAAU,aAAYH,SAAC,SAElEF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,UAASH,UACd,OAAJiK,QAAI,IAAJA,GAAa,QAAT+D,EAAJ/D,EAAMI,eAAO,IAAA2D,OAAT,EAAJA,EAAeZ,QAAQtN,EAAAA,EAAAA,KAAA,QAAMK,UAAU,aAAYH,SAAC,SAEzDF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,UAASH,UACd,OAAJiK,QAAI,IAAJA,OAAI,EAAJA,EAAMiE,YAAYpO,EAAAA,EAAAA,KAAA,QAAMK,UAAU,aAAYH,SAAC,SAEpDF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6BAA4BH,UACvCF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,oBAAoBc,MAAM,SAASqK,QAASA,IA5QnF6C,KACzB,MAAMC,EAAkB1K,EAAgB2K,QAAO,CAACC,EAAG3N,IAAUA,IAAUwN,IACvExK,EAAmByK,EAAgB,EA0Q+EG,CAAoB5N,GAAOX,UACzFF,EAAAA,EAAAA,KAAC0O,EAAAA,IAAe,CAACrO,UAAU,kBAAkBU,MAAO,CAAE8L,OAAQ,mBAjBjEhM,EAoBJ,KAGTb,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAA,MAAI2O,QAAQ,IAAItO,UAAU,+BAA8BH,SAAC,6FAqDrFE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUH,SAAA,EACrBF,EAAAA,EAAAA,KAAC2L,EAAAA,EAAM,CACHtL,UAAU,6BACVmL,QAASA,IAAM/I,EAAS,mBAAmBvC,SAC9C,YAIDF,EAAAA,EAAAA,KAAC2L,EAAAA,EAAM,CAACtL,UAAU,wBAAwBkL,KAAK,SAAQrL,SAAEmC,EAAU,SAAW,qBAI1FrC,EAAAA,EAAAA,KAAC4O,EAAAA,EAAe,CAAChL,gBAAiBA,EAAiBC,mBAAoBA,EAAoBZ,UAAWA,EAAW4L,YAtfrGA,IAAM3L,GAAa,OAuf5B,C,uKCvgBf,MAkPA,EAlPwBoH,IAAyF,IAADwE,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAvF,UAAEjM,EAAS,YAAE4L,EAAW,gBAAEjL,EAAe,mBAAEC,EAAkB,kBAAE8D,GAAmB2C,EAEvG,MAAM/H,GAAWC,EAAAA,EAAAA,OACX,aAAEG,EAAY,SAAEC,EAAQ,MAAEuM,IAAUnM,EAAAA,EAAAA,MACpCI,GAAQC,EAAAA,EAAAA,KAAaC,GAAUA,IAC/B8L,EAAqB,OAALhM,QAAK,IAALA,GAA2B,QAAtB0L,EAAL1L,EAAOiM,4BAAoB,IAAAP,GAAe,QAAfC,EAA3BD,EAA6BQ,qBAAa,IAAAP,OAArC,EAALA,EAA4C9K,SAC5DsL,EAAkB,OAALnM,QAAK,IAALA,GAA8B,QAAzB4L,EAAL5L,EAAOoM,+BAAuB,IAAAR,OAAzB,EAALA,EAAgCS,iBACnDnK,QAAQC,IAAIgK,EAAY,cACxB,MAAOG,EAAYC,IAAiBxM,EAAAA,EAAAA,UAAS,KACtCyM,EAAaC,IAAkB1M,EAAAA,EAAAA,UAAS,KACxCiL,EAAU0B,IAAe3M,EAAAA,EAAAA,YAC1B4M,GAAWC,EAAAA,EAAAA,MACjB1K,QAAQC,IAAI6J,EAAc,iBAE1B,MAAOa,EAAYC,IAAiB/M,EAAAA,EAAAA,UAAS,cAC7C4C,EAAAA,EAAAA,YAAU,KACwD,IAADoK,EAAnC,wBAAtBJ,EAASK,UAAsChC,GAC/C7L,GAAS8N,EAAAA,EAAAA,IAAwB,CAC7BvH,YAA8B,OAAjBnB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBX,MAAOsJ,IAAKlC,EAAUnJ,UAAwB,OAAbmK,QAAa,IAAbA,GAAkB,QAALe,EAAbf,EAAgB,UAAE,IAAAe,OAAL,EAAbA,EAAoBtJ,MAE7F,GACD,CAACkJ,EAAU3B,KACdrI,EAAAA,EAAAA,YAAU,KACN,MAAMwK,EAAkBC,YAAW,KAC3Bd,IACmB,cAAfO,EACA1N,GAASkO,EAAAA,EAAAA,IAAqB,CAAEC,UAAWhB,KACrB,SAAfO,GACP1N,GAASkO,EAAAA,EAAAA,IAAqB,CAAEnD,KAAMoC,KAE9C,GACD,KAEH,MAAO,IAAMiB,aAAaJ,EAAgB,GAC3C,CAACb,EAAYnN,EAAU0N,IAE1B,MAAMW,GAA4B,OAAbxB,QAAa,IAAbA,OAAa,EAAbA,EAAezO,KAAKwJ,IAAI,IAAA0G,EAAA,MAAM,CAC/C7J,MAAW,OAAJmD,QAAI,IAAJA,OAAI,EAAJA,EAAMtD,IACb5F,MAAW,OAAJkJ,QAAI,IAAJA,GAAa,QAAT0G,EAAJ1G,EAAMgE,eAAO,IAAA0C,OAAT,EAAJA,EAAe5J,KACtBkD,KAAMA,EACT,MAAM,GAED2G,GAA2B,OAAb1B,QAAa,IAAbA,OAAa,EAAbA,EAAezO,KAAKwJ,IAAI,CACxCnD,MAAW,OAAJmD,QAAI,IAAJA,OAAI,EAAJA,EAAMtD,IACb5F,MAAW,OAAJkJ,QAAI,IAAJA,OAAI,EAAJA,EAAMmD,KACbnD,KAAMA,QACH,IAGA4G,EAAeC,IAAoB7N,EAAAA,EAAAA,UAAS,MACnDmC,QAAQC,IAAIwL,EAAe,8BAC3B,MAAOE,EAAcC,IAAmB/N,EAAAA,EAAAA,UAAS,MACjDmC,QAAQC,IAAI0L,EAAc,iBAwB1BlL,EAAAA,EAAAA,YAAU,KACNxD,GAASkO,EAAAA,EAAAA,MAAuB,GACjC,CAAClO,IA8BJ,OAFA+C,QAAQC,IAAI6J,EAAe,iBAC3B9J,QAAQC,IAAIgK,EAAY,SAEpBvP,EAAAA,EAAAA,KAAA,OAAAE,UACIE,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAK,CAACC,KAAMnO,EAAWoO,UAAQ,EAACzE,KAAK,KAAK0E,OAAQzC,EAAa0C,SAAS,SAASC,UAAU,EAAMtR,SAAA,EAC9FF,EAAAA,EAAAA,KAACmR,EAAAA,EAAMM,OAAM,CAACC,aAAW,EAAAxR,UACrBF,EAAAA,EAAAA,KAACmR,EAAAA,EAAMQ,MAAK,CAACtR,UAAU,aAAYH,SAAC,mBAExCE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAI,CAACC,SAAUvH,GA3BVwH,IACd,GAAmB,OAAfvG,QAAe,IAAfA,GAAAA,EAAiBgO,MAAMzH,IAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMlF,cAA2B,OAAb8L,QAAa,IAAbA,OAAa,EAAbA,EAAe/J,UACnE6K,EAAAA,EAAAA,GAAe,wBAAyB,cACrC,CACH,MAAMC,EAAe,CACjB7M,UAAwB,OAAb8L,QAAa,IAAbA,OAAa,EAAbA,EAAe/J,MAC1BoH,SAAUA,EACV7D,QAAsB,OAAbwG,QAAa,IAAbA,OAAa,EAAbA,EAAe5G,MAE5B7E,QAAQC,IAAIuM,EAAc,gBAE1BjO,GAAmBkO,GAAQ,IAAIA,EAAMD,KACrCjD,IACAM,IACA+B,EAAgB,IAChBF,EAAiB,IACjBlB,EAAY,GAChB,KAU+C5P,SAAA,EACnCE,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAMhE,KAAI,CAAAjN,SAAA,EAEPE,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACiK,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAC,eAC7BE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAKgC,OAAM,CACRjF,MAAOiJ,EACP/D,SAAW/F,IACP+J,EAAc/J,EAAEG,OAAOU,OACvB2I,EAAc,IACdqB,EAAiB,MACjBE,EAAgB,MAChBrB,EAAe,GAAG,EACpB3P,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,YAAW9G,SAAC,WAC1BF,EAAAA,EAAAA,KAAA,UAAQgH,MAAM,OAAM9G,SAAC,iBAKjB,cAAf+P,GACGjQ,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACiK,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAC,gBAC7BF,EAAAA,EAAAA,KAACiM,EAAAA,GAAM,CACHjF,MAAO+J,EACP7E,SAxFbC,IAAoB,IAAD6F,EAAAC,EAAAC,EAC1ClB,EAAiB7E,GACjB+E,EAAgB,CACZlK,MAAqB,OAAdmF,QAAc,IAAdA,GAAoB,QAAN6F,EAAd7F,EAAgBhC,YAAI,IAAA6H,OAAN,EAAdA,EAAsBnL,IAC7B5F,MAAqB,OAAdkL,QAAc,IAAdA,GAAoB,QAAN8F,EAAd9F,EAAgBhC,YAAI,IAAA8H,OAAN,EAAdA,EAAsB3E,KAC7BnD,KAAoB,OAAdgC,QAAc,IAAdA,OAAc,EAAdA,EAAgBhC,OAG1B0F,EAA6B,OAAd1D,QAAc,IAAdA,GAAoB,QAAN+F,EAAd/F,EAAgBhC,YAAI,IAAA+H,OAAN,EAAdA,EAAsBjL,KAAK,EAiFNkL,cAAgBC,GAAezC,EAAcyC,GAC7ChG,QAASwE,EACTvE,YAAY,eACZC,aAAW,EACX+F,cAAY,EACZC,UAAgB,OAALlP,QAAK,IAALA,GAA2B,QAAtB6L,EAAL7L,EAAOiM,4BAAoB,IAAAJ,OAAtB,EAALA,EAA6BsD,gBAKpDvS,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACiK,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAC,UAC7BF,EAAAA,EAAAA,KAACiM,EAAAA,GAAM,CACHjF,MAAOiK,EACP/E,SA7FdC,IAAoB,IAADqG,EAAAC,EAAAC,EAAAC,EACzCzB,EAAgB/E,GAChB6E,EAAiB,CACbhK,MAAqB,OAAdmF,QAAc,IAAdA,GAAoB,QAANqG,EAAdrG,EAAgBhC,YAAI,IAAAqI,OAAN,EAAdA,EAAsB3L,IAC7B5F,MAAqB,OAAdkL,QAAc,IAAdA,GAAoB,QAANsG,EAAdtG,EAAgBhC,YAAI,IAAAsI,GAAS,QAATC,EAApBD,EAAsBtE,eAAO,IAAAuE,OAAf,EAAdA,EAA+BzL,KACtCkD,KAAoB,OAAdgC,QAAc,IAAdA,OAAc,EAAdA,EAAgBhC,OAE1B0F,EAA6B,OAAd1D,QAAc,IAAdA,GAAoB,QAANwG,EAAdxG,EAAgBhC,YAAI,IAAAwI,OAAN,EAAdA,EAAsB1L,KAAK,EAuFNkL,cAAgBC,GAAezC,EAAcyC,GAC7ChG,QAAS0E,EACTzE,YAAY,cACZC,aAAW,EACX+F,cAAY,EACZC,UAAgB,OAALlP,QAAK,IAALA,GAA2B,QAAtB8L,EAAL9L,EAAOiM,4BAAoB,IAAAH,OAAtB,EAALA,EAA6BqD,eAKxC,cAAftC,GACGjQ,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACiK,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAE,UAC9BF,EAAAA,EAAAA,KAACiK,EAAAA,EAAKuC,QAAO,CAACjB,KAAK,OAAOc,YAAY,OAAOrF,MAAmB,OAAZiK,QAAY,IAAZA,OAAY,EAAZA,EAAchQ,cAI1EjB,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACiK,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAE,gBAC9BF,EAAAA,EAAAA,KAACiK,EAAAA,EAAKuC,QAAO,CAACjB,KAAK,OAAOc,YAAY,aAAarF,MAAoB,OAAb+J,QAAa,IAAbA,OAAa,EAAbA,EAAe9P,cAKnF8P,GAAiBE,KACfjR,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACiK,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAC,kBAC7BF,EAAAA,EAAAA,KAACiK,EAAAA,EAAKuC,QAAO,CACTjB,KAAK,OACLvE,MAAO4I,EACPvD,YAAY,qBACZH,SAAW/F,GAAM0J,EAAe1J,EAAEG,OAAOU,OACzCuF,UAAQ,UAMxBvM,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC2L,GAAI,EAAE5L,UACPE,EAAAA,EAAAA,MAAC6J,EAAAA,EAAK8B,MAAK,CAAC1L,UAAU,OAAMH,SAAA,EACxBF,EAAAA,EAAAA,KAACiK,EAAAA,EAAK+B,MAAK,CAAC3L,UAAU,OAAMH,SAAC,cAC7BF,EAAAA,EAAAA,KAACiK,EAAAA,EAAKuC,QAAO,CACTjB,KAAK,SACLc,YAAY,eACZrF,MAAOoH,EACPlC,SAAW/F,IACP,MAAMyM,EAAM5H,SAAS7E,EAAEG,OAAOU,OAC9B8I,EAAY8C,EAAM,EAAIA,EAAM,GAAG,EAEnCrG,UAAQ,EACRsG,IAAK,YAMA,MAAV,OAAVtD,QAAU,IAAVA,OAAU,EAAVA,EAAY5J,SAAqC,wBAAtBoK,EAASK,WACjCpQ,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACI,UAAU,OAAMH,UACjBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uEAAsEH,UACtE,OAAVqP,QAAU,IAAVA,OAAU,EAAVA,EAAYuD,QAAS7H,KAAKC,UAAUqE,WAMrDnP,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAM4B,OAAM,CAAA7S,SAAA,EACTF,EAAAA,EAAAA,KAAC2L,EAAAA,EAAM,CAACtL,UAAU,gBAAgBmL,QAASqD,EAAY3O,SAAC,WAGxDF,EAAAA,EAAAA,KAAC2L,EAAAA,EAAM,CAACJ,KAAK,SAASlL,UAAU,gBAAeH,SAAE,mBAM3D,C","sources":["helpers/PageTitle.js","pages/shivay/stockIn/addStockIn/AddStockIn.js","pages/shivay/openingStock/addStock/AddProductModal.js"],"sourcesContent":["// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useEffect, useRef, useState } from 'react'\nimport PageTitle from '../../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap'\nimport Select from 'react-select'; \nimport { IoIosAdd } from 'react-icons/io';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport AddProductModal from '../../openingStock/addStock/AddProductModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createStockInActions, getWarehouseListActions, listingSupplierActions, listingUsersActions, updateStockInActions } from '../../../../redux/actions';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport { CgCloseO } from \"react-icons/cg\";\nimport { HiOutlineFolderDownload } from \"react-icons/hi\";\n\n\nconst AddStockIn = () => {\n    const [searchParams] = useSearchParams();\n    const stockId = searchParams.get('id')\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const { handleSubmit, register, setValue, resetField,watch } = useForm()\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n    const store = useSelector((state) => state)\n    const [today, setToday] = useState(new Date().toISOString().split('T')[0]);\n    const [openingProducts, setOpeningProducts] = useState([])\n    const StockInData = store?.stockInListReducer?.stockInList?.response;\n    const [selectedStock, setSelectedStock] = useState(null);\n    const Warehouse = store?.getWarehouseListReducer?.searchWarehouse?.response;\n    const UsersList = store?.listingUsersReducer?.listingUsers?.response;\n    const SupplierList = store?.listingSupplierReducer?.listingSupplier?.response;\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedQuantity, setEditedQuantity] = useState('');\n    const [productId, setProductId] = useState('');\n    const inputRef = useRef(null);\n    const xyz = watch('invoiceAttachment');\n    console.log(xyz,\"xyz\")\n\n    const createResponse = store?.createStockInReducer?.createStockIn?.status;\n    // console.log(openingProducts, 'openingProducts')\n    const [attachmentType, setAttachmentType] = useState(\"\");\n\n    const fileInputRef = useRef();\n\n    const handleAttachmentTypeChange = (e) => {\n        const type = e.target.value;\n        setAttachmentType(type);\n        setValue(\"invoiceAttachmentType\", type);\n    };\n\n    const resetAttachmentType = () => {\n        setAttachmentType(\"\");\n        setValue(\"invoiceAttachmentType\", \"\");\n        resetField(\"invoiceAttachment\");\n        if (fileInputRef.current) fileInputRef.current.value = \"\";\n    };\n\n    const handleQuantityChange = (e) => {\n        setEditedQuantity(e.target.value);\n    };\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSave();\n        }\n    };\n\n    useEffect(() => {\n        if (createResponse === 200) {\n            navigate(\"/shivay/stockIn\");\n        }\n    }, [createResponse]);\n\n    // Handle save (when clicking outside or pressing Enter)\n    const handleSave = () => {\n        setIsEditing(false);\n        // Here you would typically also call an API to update the quantity in your backend\n    };\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n    useEffect(() => {\n        const handleClickOutside = (e) => {\n            if (inputRef.current && !inputRef.current.contains(e.target)) {\n                handleSave();\n            }\n        };\n\n\n        if (isEditing) {\n            document.addEventListener('mousedown', handleClickOutside);\n            return () => {\n                document.removeEventListener('mousedown', handleClickOutside);\n            };\n        }\n    }, [isEditing]);\n\n    useEffect(() => {\n        if (stockId && StockInData?.length > 0) {\n            const foundStock = StockInData?.find(item => item._id === stockId);\n            setSelectedStock(foundStock);\n        }\n    }, [stockId, StockInData]);\n\n    const warehouseOptions = Warehouse?.map((warehouse) => ({\n        value: warehouse._id,\n        label: warehouse.name,\n    }));\n\n    const usersOptions = UsersList?.map((users) => ({\n        value: users._id,\n        label: users.name\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n            .join(' '),\n    }));\n\n\n    const supplierOptions = SupplierList?.map((users) => ({\n        value: users._id,\n        label: users.name,\n    }));\n\n    const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [selectedSupplier, setSelectedSupplier] = useState(null);\n    const [isAccordionOpen, setIsAccordionOpen] = useState(false);\n    console.log(selectedWarehouse, 'selectedWarehouse')\n    useEffect(() => {\n        if (stockId && selectedStock) {\n            console.log(selectedStock, '2345432')\n            setToday(selectedStock?.createdAt ? new Date(selectedStock?.createdAt).toISOString().split('T')[0] : '')\n            const updateWarehouses = selectedStock?.warehouseData\n                ? { value: selectedStock.warehouseId, label: selectedStock.warehouseData?.find((ele) => ele?._id === selectedStock?.warehouseId)?.name }\n                : {};\n            setSelectedWarehouse(updateWarehouses)\n\n            const updatedUser = selectedStock?.receivedByData ? { value: selectedStock?.receivedBy, label: selectedStock.receivedByData?.find((ele) => ele?._id === selectedStock?.receivedBy)?.name }\n                : {}\n            setSelectedUser(updatedUser)\n\n            const updatedSupplier = selectedStock?.supplierId ? { value: selectedStock?.supplierId, label: selectedStock.supplierData?.find((ele) => ele?._id === selectedStock?.supplierId)?.name }\n                : {}\n            setSelectedSupplier(updatedSupplier)\n\n            setValue('invoiceNumber', selectedStock?.invoiceNumber || '');\n            setValue('description', selectedStock?.description || '');\n            setValue('invoiceValue', selectedStock?.fright || '');\n            setValue('invoiceAttachment', selectedStock?.invoiceAttachment || '');\n            setAttachmentType(selectedStock?.invoiceAttachmentType || '');\n            setEditedQuantity(selectedStock?.productData?.stockInQty || '');\n            setProductId(selectedStock?.productData?._id)\n        }\n\n    }, [stockId, selectedStock])\n    console.log(selectedWarehouse, 'selectedWarehouse')\n    const handleAccordionToggle = () => {\n        setIsAccordionOpen(prevState => !prevState);\n    };\n    const handleWarehouseChange = (selectedOption) => {\n        setSelectedWarehouse(selectedOption);\n    };\n\n    const handleUserChange = (selectedUser) => {\n        setSelectedUser(selectedUser);\n    };\n\n    const handleSupplierChange = (selectedSupplier) => {\n        setSelectedSupplier(selectedSupplier);\n    };\n\n    useEffect(() => {\n        dispatch(getWarehouseListActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingUsersActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingSupplierActions());\n    }, [dispatch]);\n\n    const handleDeleteProduct = (indexToRemove) => {\n        const updatedProducts = openingProducts.filter((_, index) => index !== indexToRemove);\n        setOpeningProducts(updatedProducts);\n    };\n\n    const onSubmit = (data) => {\nconsole.log(data,'ouiyuttdfghjk',fileInputRef)\n        const cleanedProducts = openingProducts.map(({ product, ...rest }) => rest);\n        const formData = new FormData();\n        if (data?.invoiceAttachment?.[0] instanceof File) {\n            formData.append('invoiceAttachment', data.invoiceAttachment?.[0]);\n        }\n\n        formData.append('warehouseId', selectedWarehouse?.value)\n        formData.append('receivedBy', selectedUser?.value);\n        formData.append('supplierId', selectedSupplier?.value);\n        formData.append('description', data?.description);\n        formData.append('invoiceNumber', data?.invoiceNumber);\n        formData.append('fright', data?.invoiceValue);\n        formData.append('invoiceAttachmentType', attachmentType);\n\n        if (!stockId) {\n            formData.append('date', data?.date);\n        }\n\n        if (stockId) {\n            formData.append('_id', stockId);\n        }\n        if (stockId) {\n            formData.append('productId', productId);\n        }\n\n        if (stockId) {\n            formData.append('quantity', stockId ? parseInt(editedQuantity) : JSON.stringify(cleanedProducts));\n        }else{\n            formData.append('stockInQty', stockId ? parseInt(editedQuantity) : JSON.stringify(cleanedProducts));\n\n        }\n        if (stockId) {\n            dispatch(updateStockInActions(formData))\n        } else {\n            dispatch(createStockInActions(formData));\n            // console.log(formData, 'formData');\n        }\n    };\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Stock In List\", path: \"/shivay/stockIn\" },\n                    { label: stockId ? \"Edit Stock In\" : \"Add Stock In\", path: \"/shivay/stockIn\", active: true },\n                ]}\n                title={stockId ? \"Edit Stock In\" : \"Add Stock In\"}\n            />\n            <Form onSubmit={handleSubmit(onSubmit)}>\n\n                <div className=\"accordion mb-3\" id=\"accordionExample\">\n                    <div className=\"accordion-item\" style={{ border: '2px solid #6655D9' }}>\n                        <h2 className=\"accordion-header mt-0\">\n                            <button\n                                className=\"accordion-button py-1 d-flex justify-content-between align-items-center w-100\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#collapseOne\"\n                                aria-expanded={isAccordionOpen ? \"true\" : \"false\"}\n                                aria-controls=\"collapseOne\"\n                                onClick={handleAccordionToggle}  // Toggle the accordion open state\n                            >\n                                <div className=\"flex-grow-1 text-black fw-bold\"> {stockId ? \"Edit\" : \"Add\"} Stock In Details</div>\n\n                                {/* Right-aligned buttons */}\n                                <div className=\"d-flex\">\n                                    <Button\n                                        className=\"fw-bold custom-button me-2\"\n                                        onClick={handleShow}\n                                        // disabled={!isAccordionOpen}\n                                    >\n                                        <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                                    </Button>\n                                </div>\n                            </button>\n                        </h2>\n\n                        <div\n                            id=\"collapseOne\"\n                            className={`accordion-collapse collapse ${isAccordionOpen ? \"\" : \"show\"}`}\n                            data-bs-parent=\"#accordionExample\"\n                        >\n                            <div className=\"accordion-body py-1\">\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className='mb-0'>Warehouse {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Select\n                                                value={selectedWarehouse}\n                                                onChange={handleWarehouseChange}\n                                                options={warehouseOptions}\n                                                placeholder=\"Select a warehouse\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Received By {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Select\n                                                value={selectedUser}\n                                                onChange={handleUserChange}\n                                                options={usersOptions}\n                                                placeholder=\"Select a User\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Supplier {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Select\n                                                value={selectedSupplier}\n                                                onChange={handleSupplierChange}\n                                                options={supplierOptions}\n                                                placeholder=\"Select a Supplier\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className='mb-0'>Date Range</Form.Label>\n                                            <Form.Control\n                                                type=\"date\"\n                                                value={today}\n                                                {...register('date')}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Invoice Number {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Form.Control\n                                                type=\"number\"\n                                                placeholder=\"Enter Invoice Number\"\n                                                {...register('invoiceNumber', { required: true })}\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">\n                                                Attachment\n                                                {attachmentType && (\n                                                    <span className=\"text-capitalize\"> ({attachmentType})</span>\n                                                )}\n                                                 {selectedStock?.invoiceAttachment && (\n                                                    <a\n                                                        href={selectedStock?.invoiceAttachment}\n                                                        target=\"_blank\"\n                                                        title='Download Attachment'\n                                                        rel=\"noopener noreferrer\"\n                                                        // style={{position:'absolute', top:'20px'}}\n                                                    >\n                                                       <HiOutlineFolderDownload className='ms-1 fs-4'/>\n                                                    </a>\n                                            )}\n                                                {!stockId && <span className=\"text-danger\"> *</span>}\n                                            </Form.Label>\n\n                                            {!attachmentType ? (\n                                                <Form.Select\n                                                    className=\"mb-0\"\n                                                    // defaultValue=\"\"\n                                                    value={attachmentType}\n                                                    onChange={handleAttachmentTypeChange}\n                                                    \n                                                >\n                                                    <option value=\"\">Select Attachment Type</option>\n                                                    <option value=\"Invoice\">Invoice</option>\n                                                    <option value=\"Delivery Challan\">Delivery Challan</option>\n                                                </Form.Select>\n                                            ) : (\n                                                <div className=\"d-flex align-items-center gap-2\">\n                                                    <Form.Control\n                                                        type=\"file\"\n                                                        placeholder=\"Upload file\"\n                                                        // required={!stockId}\n                                                        {...register(\"invoiceAttachment\")}\n                                                        // ref={fileInputRef}\n                                                    />\n                                                    <CgCloseO\n                                                        size={20}\n                                                        className='text-danger'\n                                                        style={{ cursor: \"pointer\" }}\n                                                        onClick={resetAttachmentType}\n                                                        title=\"Change attachment type\"\n                                                    />\n                                                </div>\n                                            )}\n\n                                           \n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Invoice Value</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                {...register('invoiceValue')}\n                                                placeholder=\"Enter Invoice Value\"\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Description</Form.Label>\n                                            <Form.Control\n                                                as=\"textarea\"\n                                                rows={1}\n                                                {...register('description')}\n                                                placeholder=\"Enter Description\"\n                                            />\n                                        </Form.Group>\n                                    </Col>\n\n                                </Row>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='mt-2'>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center py-1\">\n                            <table className=\"table table-striped bg-white\">\n                                <thead>\n                                    <tr className=\"table_header\">\n                                        <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                        <th scope=\"col\">Product Name</th>\n                                        <th scope=\"col\">Model Name</th>\n                                        <th scope=\"col\">Code</th>\n                                        <th scope=\"col\">Quantity</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {!stockId ? (\n                                        openingProducts && openingProducts.length > 0 ? (\n                                            openingProducts.map((data, index) => (\n                                                <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td className=\"text-uppercase fw-bold\">\n                                                        {data?.product?.name || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.product?.modelId?.name || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.product?.code || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.quantity || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td></td>\n                                                    <div className=\"icon-container d-flex pb-0\">\n                                                        <span className=\"icon-wrapper me-4\" title=\"Delete\" onClick={() => handleDeleteProduct(index)}>\n                                                            <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                        </span>\n                                                    </div>\n                                                </tr>\n                                            ))\n                                        ) : (\n                                            <tr>\n                                                <td colSpan=\"6\" className=\"text-center text-danger py-3\">\n                                                    Note :  No products added yet. Please add products to proceed with stock-in.\n                                                </td>\n                                            </tr>\n                                        )\n                                    ) : (\n                                        <tr>\n                                            <th scope=\"row\">1</th>\n                                            <td className=\"text-uppercase fw-bold\">\n                                                {selectedStock?.productData?.name || <span className=\"text-black\">-</span>}\n                                            </td>\n                                            <td className=\"fw-bold\">\n                                                {selectedStock?.modelData?.[0]?.name || <span className=\"text-black\">-</span>}\n                                            </td>\n                                            <td className=\"fw-bold\">\n                                                {selectedStock?.productData?.code || <span className=\"text-black\">-</span>}\n                                            </td>\n                                            <td className=\"fw-bold\">\n                                                {isEditing ? (\n                                                    <input\n                                                        ref={inputRef}\n                                                        type=\"number\"  // or \"text\" depending on your needs\n                                                        value={editedQuantity}\n                                                        onChange={handleQuantityChange}\n                                                        onKeyPress={handleKeyPress}\n                                                        // autoFocus\n                                                        className=\"form-control form-control-md\"\n                                                        style={{ width: '5vw', display: 'inline-block', marginTop: '-10px' }}\n                                                    />\n                                                ) : (\n                                                    <span onClick={handleEditClick} > {editedQuantity} <BsThreeDotsVertical className='table_header cursor' /></span>\n                                                )}\n\n                                            </td>\n                                            <td></td>\n                                            <div className=\"icon-container d-flex pb-0\">\n                                                <span\n                                                    className=\"icon-wrapper text-danger me-5 pe-3\"\n                                                    title=\"Edit\"\n                                                    onClick={handleEditClick}\n                                                >\n                                                    <AiOutlineEdit className=\"fs-4 text-danger\" style={{ cursor: 'pointer' }} />\n                                                </span>\n                                            </div>\n                                        </tr>\n                                    )}\n\n                                </tbody>\n\n                            </table>\n\n                        </Card.Body>\n                    </Card>\n                    <div className=\"text-end\">\n                        <Button\n                            className=\"fw-bold cancel-button me-2\"\n                            onClick={() => navigate(\"/shivay/stockIn\")}\n                        >\n                            Cancel\n                        </Button>\n\n                        <Button className=\"fw-bold custom-button\" type='submit'>{stockId ? 'Update' : \"Submit\"}</Button>\n                    </div>\n                </div>\n            </Form>\n            <AddProductModal openingProducts={openingProducts} setOpeningProducts={setOpeningProducts} showModal={showModal} handleClose={handleClose} />\n        </div >\n    )\n}\n\nexport default AddStockIn","import React, { useEffect, useState } from 'react'\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Select from 'react-select'; // Import React Select\nimport { createStockCheckActions, searchProductActions } from '../../../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport ToastContainer from '../../../../helpers/toast/ToastContainer';\nimport { useLocation } from 'react-router-dom';\n\nconst AddProductModal = ({ showModal, handleClose, openingProducts, setOpeningProducts, selectedWarehouse }) => {\n\n    const dispatch = useDispatch();\n    const { handleSubmit, register, reset } = useForm()\n    const store = useSelector((state) => state)\n    const ProductSearch = store?.searchProductReducer?.searchProduct?.response;\n    const StockCheck = store?.createStockCheckReducer?.createStockCheck;\n    console.log(StockCheck, 'StockCheck')\n    const [searchTerm, setSearchTerm] = useState('');\n    const [productName, setProductName] = useState('');\n    const [quantity, setQuantity] = useState()\n    const location = useLocation()\n    console.log(ProductSearch,'ProductSearch')\n\n    const [searchType, setSearchType] = useState('modelName'); // default search type\n    useEffect(() => {\n        if (location.pathname === '/shivay/addDispatch' && quantity) {\n            dispatch(createStockCheckActions({\n                warehouseId: selectedWarehouse?.value, qty: quantity, productId: ProductSearch?.[0]?._id\n            }))\n        }\n    }, [location, quantity])\n    useEffect(() => {\n        const delayDebounceFn = setTimeout(() => {\n            if (searchTerm) {\n                if (searchType === 'modelName') {\n                    dispatch(searchProductActions({ modelName: searchTerm }));\n                } else if (searchType === 'code') {\n                    dispatch(searchProductActions({ code: searchTerm }));\n                }\n            }\n        }, 500);\n\n        return () => clearTimeout(delayDebounceFn);\n    }, [searchTerm, dispatch, searchType]);\n\n    const modalOptions = ProductSearch?.map((data) => ({\n        value: data?._id,\n        label: data?.modelId?.name,\n        data: data\n    })) || [];\n\n    const codeOptions = ProductSearch?.map((data) => ({\n        value: data?._id,\n        label: data?.code,\n        data: data\n    })) || []\n\n    // State to handle selected options\n    const [selectedModal, setSelectedModal] = useState(null);\n    console.log(selectedModal, 'selectedModalselectedModal')\n    const [selectedCode, setSelectedCode] = useState(null);\n    console.log(selectedCode, 'selectedCode')\n\n    // Handle changes in modal selection\n    const handleModalChange = (selectedOption) => {\n        setSelectedModal(selectedOption);\n        setSelectedCode({\n            value: selectedOption?.data?._id,\n            label: selectedOption?.data?.code,\n            data: selectedOption?.data\n\n        });\n        setProductName(selectedOption?.data?.name);\n    };\n\n    const handleCodeChange = (selectedOption) => {\n        setSelectedCode(selectedOption);\n        setSelectedModal({\n            value: selectedOption?.data?._id,\n            label: selectedOption?.data?.modelId?.name,\n            data: selectedOption?.data\n        });\n        setProductName(selectedOption?.data?.name);\n    };\n\n    useEffect(() => {\n        dispatch(searchProductActions());\n    }, [dispatch]);\n\n    const loadModalOptions = async (inputValue) => {\n        if (!inputValue) return [];\n\n        console.log(inputValue, 'inputValue')\n        dispatch(searchProductActions({ modelName: inputValue }))\n    };\n\n    const onSubmit = (data) => {\n        if (openingProducts?.some((data) => data?.productId === selectedModal?.value)) {\n            ToastContainer('Product Already Exist', 'danger')\n        } else {\n            const productsData = {\n                productId: selectedModal?.value,\n                quantity: quantity,\n                product: selectedModal?.data\n            }\n            console.log(productsData, 'productsData')\n\n            setOpeningProducts(prev => [...prev, productsData]);\n            handleClose();\n            reset();\n            setSelectedCode('');\n            setSelectedModal('');\n            setQuantity('');\n        }\n    }\n    console.log(ProductSearch, 'ProductSearch')\n    console.log(StockCheck, '0987')\n    return (\n        <div>\n            <Modal show={showModal} centered size='lg' onHide={handleClose} backdrop=\"static\" keyboard={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title className='text-black'>Add Product</Modal.Title>\n                </Modal.Header>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    <Modal.Body>\n                        {/* Your form or content here */}\n                        <Row>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label className=\"mb-0\">Search By</Form.Label>\n                                    <Form.Select\n                                        value={searchType}\n                                        onChange={(e) => {\n                                            setSearchType(e.target.value);\n                                            setSearchTerm(''); // clear input\n                                            setSelectedModal(null);\n                                            setSelectedCode(null);\n                                            setProductName('');\n                                        }}\n                                    >\n                                        <option value=\"modelName\">Model</option>\n                                        <option value=\"code\">Code</option>\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n\n                            {searchType === 'modelName' ? (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Model Name</Form.Label>\n                                        <Select\n                                            value={selectedModal}\n                                            onChange={handleModalChange}\n                                            onInputChange={(inputValue) => setSearchTerm(inputValue)}\n                                            options={modalOptions}\n                                            placeholder=\"Search Modal\"\n                                            isClearable\n                                            isSearchable\n                                            isLoading={store?.searchProductReducer?.loading}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            ) : (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Code</Form.Label>\n                                        <Select\n                                            value={selectedCode}\n                                            onChange={handleCodeChange}\n                                            onInputChange={(inputValue) => setSearchTerm(inputValue)}\n                                            options={codeOptions}\n                                            placeholder=\"Search Code\"\n                                            isClearable\n                                            isSearchable\n                                            isLoading={store?.searchProductReducer?.loading}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            )}\n                            {searchType === 'modelName' ? (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\" >Code</Form.Label>\n                                        <Form.Control type='text' placeholder=\"Code\" value={selectedCode?.label} />\n                                    </Form.Group>\n                                </Col>\n                            ) : (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\" >Model Name</Form.Label>\n                                        <Form.Control type='text' placeholder=\"Modal Name\" value={selectedModal?.label} />\n                                    </Form.Group>\n                                </Col>\n                            )}\n\n                            {(selectedModal || selectedCode) && (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Product Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={productName}\n                                            placeholder=\"Enter Product Name\"\n                                            onChange={(e) => setProductName(e.target.value)}\n                                            required\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            )}\n\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label className=\"mb-0\">Quantity</Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        placeholder=\"Enter Number\"\n                                        value={quantity}\n                                        onChange={(e) => {\n                                            const val = parseInt(e.target.value);\n                                            setQuantity(val > 0 ? val : '');\n                                        }}\n                                        required\n                                        min={1}\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n                        {StockCheck?.status==400 && location.pathname === '/shivay/addDispatch' && (\n                            <Row className=\"px-2\">\n                                <div className=\"py-1 text-center border border-primary rounded bg-light text-primary\">\n                                    {StockCheck?.error || JSON.stringify(StockCheck)}\n                                </div>\n                            </Row>\n                        )}\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className='cancel-button' onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button type='submit' className='custom-button' >\n                            Save\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AddProductModal"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","style","color","label","path","title","AddStockIn","_store$stockInListRed","_store$stockInListRed2","_store$getWarehouseLi","_store$getWarehouseLi2","_store$listingUsersRe","_store$listingUsersRe2","_store$listingSupplie","_store$listingSupplie2","_store$createStockInR","_store$createStockInR2","_selectedStock$produc3","_selectedStock$modelD","_selectedStock$modelD2","_selectedStock$produc4","searchParams","useSearchParams","stockId","get","dispatch","useDispatch","navigate","useNavigate","handleSubmit","register","setValue","resetField","watch","useForm","showModal","setShowModal","useState","store","useSelector","state","today","setToday","Date","toISOString","split","openingProducts","setOpeningProducts","StockInData","stockInListReducer","stockInList","response","selectedStock","setSelectedStock","Warehouse","getWarehouseListReducer","searchWarehouse","UsersList","listingUsersReducer","listingUsers","SupplierList","listingSupplierReducer","listingSupplier","isEditing","setIsEditing","editedQuantity","setEditedQuantity","productId","setProductId","inputRef","useRef","xyz","console","log","createResponse","createStockInReducer","createStockIn","status","attachmentType","setAttachmentType","fileInputRef","useEffect","handleSave","handleEditClick","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","length","foundStock","find","_id","warehouseOptions","warehouse","value","name","usersOptions","users","word","charAt","toUpperCase","slice","toLowerCase","join","supplierOptions","selectedWarehouse","setSelectedWarehouse","selectedUser","setSelectedUser","selectedSupplier","setSelectedSupplier","isAccordionOpen","setIsAccordionOpen","_selectedStock$wareho","_selectedStock$wareho2","_selectedStock$receiv","_selectedStock$receiv2","_selectedStock$suppli","_selectedStock$suppli2","_selectedStock$produc","_selectedStock$produc2","createdAt","updateWarehouses","warehouseData","warehouseId","ele","updatedUser","receivedByData","receivedBy","updatedSupplier","supplierId","supplierData","invoiceNumber","description","fright","invoiceAttachment","invoiceAttachmentType","productData","stockInQty","getWarehouseListActions","listingUsersActions","listingSupplierActions","PageTitle","Form","onSubmit","data","_data$invoiceAttachme","cleanedProducts","_ref","product","rest","formData","FormData","_data$invoiceAttachme2","File","append","invoiceValue","date","parseInt","JSON","stringify","updateStockInActions","createStockInActions","id","border","type","onClick","handleAccordionToggle","prevState","Button","handleShow","IoIosAdd","sm","Group","Label","Select","onChange","selectedOption","options","placeholder","isClearable","required","Control","rel","HiOutlineFolderDownload","CgCloseO","size","cursor","resetAttachmentType","as","rows","Card","boxShadow","Body","scope","modelData","code","ref","onKeyPress","key","width","display","marginTop","BsThreeDotsVertical","AiOutlineEdit","_data$product","_data$product2","_data$product2$modelI","_data$product3","modelId","quantity","indexToRemove","updatedProducts","filter","_","handleDeleteProduct","RiDeleteBinLine","colSpan","AddProductModal","handleClose","_store$searchProductR","_store$searchProductR2","_store$createStockChe","_store$searchProductR3","_store$searchProductR4","reset","ProductSearch","searchProductReducer","searchProduct","StockCheck","createStockCheckReducer","createStockCheck","searchTerm","setSearchTerm","productName","setProductName","setQuantity","location","useLocation","searchType","setSearchType","_ProductSearch$","pathname","createStockCheckActions","qty","delayDebounceFn","setTimeout","searchProductActions","modelName","clearTimeout","modalOptions","_data$modelId","codeOptions","selectedModal","setSelectedModal","selectedCode","setSelectedCode","Modal","show","centered","onHide","backdrop","keyboard","Header","closeButton","Title","some","ToastContainer","productsData","prev","_selectedOption$data","_selectedOption$data2","_selectedOption$data3","onInputChange","inputValue","isSearchable","isLoading","loading","_selectedOption$data4","_selectedOption$data5","_selectedOption$data6","_selectedOption$data7","val","min","error","Footer"],"sourceRoot":""}
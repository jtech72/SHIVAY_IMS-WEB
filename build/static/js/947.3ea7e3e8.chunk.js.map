{"version":3,"file":"static/js/947.3ea7e3e8.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js","pages/shivay/openingStock/OpeningStock.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>{size}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page <strong>{pageIndex} of {totalPages}</strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\r\n                        return <li key={page} className=\"page-ittotalPagesem disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { ColorRing, ThreeDots } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '54vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DashboardLoading = () => {\r\n    return (\r\n        <div style={{ height: '30vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\" style={{ height: '2vh' }}>\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"25\"\r\n                width=\"25\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading, DashboardLoading };\r\n","import React, { useEffect, useState } from 'react'\nimport PageTitle from '../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { IoIosAdd } from 'react-icons/io';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getStockListActions } from '../../../redux/actions';\nimport Pagination from '../../../helpers/Pagination';\nimport { Loading } from '../../../helpers/loader/Loading';\n\nconst OpeningStock = () => {\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState('')\n  const totalRecords = '0';\n  const [pageIndex, setPageIndex] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(Math.ceil(totalRecords / pageSize));\n  const store = useSelector((state) => state);\n  const OpeningStockData = store?.stockListReducer?.stockList?.response\n  const NoStockData = store?.stockListReducer?.stockList;\n  console.log(OpeningStockData, 'OpeningStockData')\n\n  useEffect(() => {\n    dispatch(getStockListActions({\n      limit: pageSize,\n      page: pageIndex,\n      search: search,\n    }));\n  }, [dispatch, search, pageSize, pageIndex]);\n\n  useEffect(() => {\n    setTotalPages(Math.ceil(totalRecords / pageSize));\n  },\n    [totalRecords, pageSize]);\n\n  return (\n    <div>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"SHIVAY Opening Stock List\", path: \"/shivay/openingStock\" },\n          { label: \"Opening Stock List\", path: \"/shivay/openingStock\", active: true },\n        ]}\n        title={\"Opening Stock List\"}\n      />\n      <Form>\n        <Row>\n          <Col sm={12}>\n            <div className='d-flex justify-content-end mt-1'>\n              <input\n                type=\"text\"\n                className=\"form-control w-auto me-2\"\n                style={{ height: '42px', marginTop: '10px' }}\n                placeholder=\"Search...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button className=\"mt-2 fw-bold custom-button\"\n                onClick={() => {\n                  navigate('/shivay/addOpeningStock')\n                }}\n              >\n                <IoIosAdd className=\"fs-3\" />&nbsp;Opening Stock\n              </Button>\n            </div>\n          </Col>\n\n          <div className='mt-2'>\n            <Card\n              style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n            >\n              <Card.Body className=\"text-center py-1\">\n                <table className=\"table table-striped bg-white mb-0\">\n                  <thead>\n                    <tr className=\"table_header\">\n                      <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                      <th scope=\"col\">Warehouse</th>\n                      <th scope=\"col\">Code</th>\n                      <th scope=\"col\">Discription</th>\n                      <th scope=\"col\">Quantity</th>\n                    </tr>\n                  </thead>\n                  {store?.stockListReducer?.loading ? (\n                    <tr>\n                      <td className='text-center' colSpan={6}>\n                        <Loading />\n                      </td>\n                    </tr>\n                  ) : (\n                    <tbody>\n                      {OpeningStockData && OpeningStockData.length > 0 ? (\n                        OpeningStockData.map((data, index) => (\n                          <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                            <th scope=\"row\">{index + 1}</th>\n                            <td className=\"text-uppercase fw-bold\">\n                              {data?.warehouseData?.name || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td className=\"fw-bold\">\n                              {data?.productData?.code || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td className=\"fw-bold\">\n                              {data?.description || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td className=\"fw-bold\">\n                              {data?.quantity || <span className=\"text-black\">-</span>}\n                            </td>\n                            <td></td>\n                            <td></td>\n                            <div className=\"icon-container d-flex  pb-0\" >\n                              <span className=\"icon-wrapper me-4\" title=\"Edit\">\n                                <AiOutlineEdit\n                                  className=\"fs-4 text-black\"\n                                  style={{ cursor: 'pointer' }}\n                                  onClick={() => {\n                                    navigate(`/shivay/addOpeningStock?Id=${data?._id}`);\n                                  }}\n                                />\n                              </span>\n\n                            </div>\n                          </tr>\n                        ))\n                      ) : (\n                        <tr>\n                          <td colSpan={6} className=\"py-5 text-center\">\n                            No stock records found.\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n                  )}\n                </table>\n                <Pagination\n                  pageIndex={pageIndex}\n                  pageSize={pageSize}\n                  totalPages={useSelector((state) => state?.stockListReducer?.stockList?.totalPages)}\n                  setPageIndex={setPageIndex}\n                  onChangePageSize={setPageSize}\n                />\n              </Card.Body>\n            </Card>\n          </div>\n        </Row>\n      </Form>\n    </div>\n  )\n}\n\nexport default OpeningStock"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","Loading","height","display","justifyContent","alignItems","ThreeDots","strokeWidth","animationDuration","visible","DashboardLoading","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors","OpeningStock","_store$stockListReduc","_store$stockListReduc2","_store$stockListReduc3","_store$stockListReduc4","navigate","useNavigate","dispatch","useDispatch","search","setSearch","useState","setPageSize","setTotalPages","ceil","store","useSelector","state","OpeningStockData","stockListReducer","stockList","response","console","log","getStockListActions","limit","PageTitle","Form","sm","marginTop","Button","IoIosAdd","Card","boxShadow","Body","scope","loading","colSpan","data","_data$warehouseData","_data$productData","warehouseData","name","productData","code","description","quantity","AiOutlineEdit","cursor","_id","Pagination","_state$stockListReduc","_state$stockListReduc2"],"sourceRoot":""}
{"version":3,"file":"static/js/371.72679958.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js","constants/menu.js","helpers/menu.js","layouts/Menu.js","layouts/LeftSidebar.js"],"sourcesContent":["/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args);\n      // @ts-ignore\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport { getChildRef } from '@restart/ui/utils';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: getChildRef(children),\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;","const MENU_ITEMS = [\r\n    { key: 'navigation', label: 'Navigation', isTitle: true },\r\n    {\r\n        key: 'dashboard',\r\n        label: 'Dashboard',\r\n        isTitle: false,\r\n        icon: 'uil-dashboard',\r\n        url: '/shivay/dashboard',\r\n    },\r\n    {\r\n        key: 'inventory',\r\n        label: 'Inventory',\r\n        isTitle: false,\r\n        icon: ' uil-shopping-cart-alt',\r\n        url: '/shivay/inventory',\r\n    },\r\n    {\r\n        key: 'report',\r\n        label: 'Report',\r\n        isTitle: false,\r\n        icon: ' uil-clipboard-alt',\r\n        url: '/shivay/report',\r\n    },\r\n    {\r\n        key: 'user',\r\n        label: 'User',\r\n        isTitle: false,\r\n        icon: ' uil-user-square',\r\n        url: '/shivay/user',\r\n    },\r\n    {\r\n        key: 'warehouse',\r\n        label: 'Warehouse',\r\n        isTitle: false,\r\n        icon: ' uil-store',\r\n        url: '/shivay/warehouse',\r\n    },\r\n    {\r\n        key: 'openingStock',\r\n        label: 'OpeningStock',\r\n        isTitle: false,\r\n        icon: ' uil-bell',\r\n        url: '/shivay/openingStock',\r\n    },\r\n    {\r\n        key: 'stockIn',\r\n        label: 'Stock In',\r\n        isTitle: false,\r\n        icon: 'uil-file-check-alt',\r\n        url: '/shivay/stockIn',\r\n    },\r\n    {\r\n        key: 'dispatch',\r\n        label: 'Dispatch',\r\n        isTitle: false,\r\n        icon: ' uil-file-block-alt',\r\n        url: '/shivay/dispatch',\r\n    },\r\n    {\r\n        key: 'customer',\r\n        label: 'Customer',\r\n        isTitle: false,\r\n        icon: ' uil-users-alt',\r\n        url: '/shivay/customer',\r\n    },\r\n     {\r\n        key: 'supplier',\r\n        label: 'Supplier',\r\n        isTitle: false,\r\n        icon: ' uil-truck',\r\n        url: '/shivay/supplier',\r\n    },\r\n    //  {\r\n    //     key: 'setting',\r\n    //     label: 'Settings',\r\n    //     isTitle: false,\r\n    //     icon: ' uil-cog',\r\n    //     url: '/shivay/setting',\r\n    // },\r\n   \r\n];\r\n\r\nexport default MENU_ITEMS;\r\n","import MENU_ITEMS from '../constants/menu';\r\n\r\nconst getMenuItems = () => {\r\n    // NOTE - You can fetch from server and return here as well\r\n    return MENU_ITEMS;\r\n};\r\n\r\nconst findAllParent = (menuItems, menuItem) => {\r\n    let parents = [];\r\n    const parent = findMenuItem(menuItems, menuItem['parentKey']);\r\n\r\n    if (parent) {\r\n        parents.push(parent['key']);\r\n        if (parent['parentKey']) parents = [...parents, ...findAllParent(menuItems, parent)];\r\n    }\r\n    return parents;\r\n};\r\n\r\nconst findMenuItem = (menuItems, menuItemKey) => {\r\n    if (menuItems && menuItemKey) {\r\n        for (var i = 0; i < menuItems.length; i++) {\r\n            if (menuItems[i].key === menuItemKey) {\r\n                return menuItems[i];\r\n            }\r\n            var found = findMenuItem(menuItems[i].children, menuItemKey);\r\n            if (found) return found;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nexport { getMenuItems, findAllParent, findMenuItem };\r\n","// @flow\r\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Collapse } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\nimport { findAllParent, findMenuItem } from '../helpers/menu';\r\n\r\nconst MenuItemWithChildren = ({ item, linkClassName, subMenuClassNames, activeMenuItems, toggleMenu }) => {\r\n    const [open, setOpen] = useState(activeMenuItems.includes(item.key));\r\n\r\n    useEffect(() => {\r\n        setOpen(activeMenuItems.includes(item.key));\r\n    }, [activeMenuItems, item]);\r\n\r\n    const toggleMenuItem = (e) => {\r\n        e.preventDefault();\r\n        const status = !open;\r\n        setOpen(status);\r\n        if (toggleMenu) toggleMenu(item, status);\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <li className={classNames('side-nav-item', { 'menuitem-active': open })}>\r\n            <Link\r\n                to=\"/#\"\r\n                onClick={toggleMenuItem}\r\n                data-menu-key={item.key}\r\n                aria-expanded={open}\r\n                className={classNames('has-arrow', 'side-sub-nav-link', linkClassName, {\r\n                    'menuitem-active': activeMenuItems.includes(item.key) ? 'active' : '',\r\n                })}>\r\n                {item.icon && <i className={item.icon}></i>}\r\n                {!item.badge ? (\r\n                    <span className=\"menu-arrow\"></span>\r\n                ) : (\r\n                    <span\r\n                        className={classNames('badge', 'bg-' + item.badge.variant, 'float-end', {\r\n                            'text-dark': item.badge.variant === 'light',\r\n                        })}>\r\n                        {item.badge.text}\r\n                    </span>\r\n                )}\r\n                <span> {item.label} </span>\r\n            </Link>\r\n            <Collapse in={open}>\r\n                <ul className={classNames(subMenuClassNames)}>\r\n                    {item.children.map((child, i) => {\r\n                        return (\r\n                            <React.Fragment key={i}>\r\n                                {child.children ? (\r\n                                    <>\r\n                                        {/* parent */}\r\n                                        <MenuItemWithChildren\r\n                                            item={child}\r\n                                            linkClassName={activeMenuItems.includes(child.key) ? 'active' : ''}\r\n                                            activeMenuItems={activeMenuItems}\r\n                                            subMenuClassNames=\"side-nav-third-level\"\r\n                                            toggleMenu={toggleMenu}\r\n                                        />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        {/* child */}\r\n                                        <MenuItem\r\n                                            item={child}\r\n                                            className={activeMenuItems.includes(child.key) ? 'menuitem-active' : ''}\r\n                                            linkClassName={activeMenuItems.includes(child.key) ? 'active' : ''}\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </Collapse>\r\n        </li>\r\n    );\r\n};\r\n\r\nconst MenuItem = ({ item, className, linkClassName }) => {\r\n    return (\r\n        <li className={classNames('side-nav-item', className)}>\r\n            <MenuItemLink item={item} className={linkClassName} />\r\n        </li>\r\n    );\r\n};\r\n\r\nconst MenuItemLink = ({ item, className }) => {\r\n    return (\r\n        <Link\r\n            to={{ pathname: item.url }}\r\n            target={item.target}\r\n            className={classNames('side-nav-link-ref', 'side-sub-nav-link', className)}\r\n            data-menu-key={item.key}>\r\n            {item.icon && <i className={item.icon}></i>}\r\n            {item.badge && (\r\n                <span\r\n                    className={classNames('badge', 'bg-' + item.badge.variant, 'rounded-pill', 'font-10', 'float-end', {\r\n                        'text-dark': item.badge.variant === 'light',\r\n                    })}>\r\n                    {item.badge.text}\r\n                </span>\r\n            )}\r\n            <span> {item.label} </span>\r\n        </Link>\r\n    );\r\n};\r\n\r\n/**\r\n * Renders the application menu\r\n */\r\n\r\ntype AppMenuProps = {\r\n    menuItems: Array<any>,\r\n};\r\n\r\nconst AppMenu = ({ menuItems }: AppMenuProps): React$Element<React$FragmentType> => {\r\n    let location = useLocation();\r\n    const menuRef = useRef(null);\r\n\r\n    const [activeMenuItems, setActiveMenuItems] = useState([]);\r\n\r\n    /*\r\n     * toggle the menus\r\n     */\r\n    const toggleMenu = (menuItem, show) => {\r\n        if (show) setActiveMenuItems([menuItem['key'], ...findAllParent(menuItems, menuItem)]);\r\n    };\r\n\r\n    /**\r\n     * activate the menuitems\r\n     */\r\n    const activeMenu = useCallback(() => {\r\n        const div = document.getElementById('main-side-menu');\r\n        let matchingMenuItem = null;\r\n\r\n        if (div) {\r\n            let items: any = div.getElementsByClassName('side-nav-link-ref');\r\n            for (let i = 0; i < items.length; ++i) {\r\n                if (location.pathname === items[i].pathname) {\r\n                    matchingMenuItem = items[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (matchingMenuItem) {\r\n                const mid = matchingMenuItem.getAttribute('data-menu-key');\r\n                const activeMt = findMenuItem(menuItems, mid);\r\n                if (activeMt) {\r\n                    setActiveMenuItems([activeMt['key'], ...findAllParent(menuItems, activeMt)]);\r\n                }\r\n            }\r\n        }\r\n    }, [location.pathname, menuItems]);\r\n\r\n    useEffect(() => {\r\n        activeMenu();\r\n    }, [activeMenu]);\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"side-nav\" ref={menuRef} id=\"main-side-menu\">\r\n                {(menuItems || []).map((item, idx) => {\r\n                    return (\r\n                        <React.Fragment key={idx}>\r\n                            {item.isTitle ? (\r\n                                <li className=\"side-nav-title side-nav-item\">{item.label}</li>\r\n                            ) : (\r\n                                <>\r\n                                    {item.children ? (\r\n                                        <MenuItemWithChildren\r\n                                            item={item}\r\n                                            toggleMenu={toggleMenu}\r\n                                            subMenuClassNames=\"side-nav-second-level\"\r\n                                            activeMenuItems={activeMenuItems}\r\n                                            linkClassName=\"side-nav-link\"\r\n                                        />\r\n                                    ) : (\r\n                                        <MenuItem\r\n                                            item={item}\r\n                                            linkClassName=\"side-nav-link\"\r\n                                            className={activeMenuItems.includes(item.key) ? 'menuitem-active' : ''}\r\n                                        />\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppMenu;\r\n","// @flow\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SimpleBar from 'simplebar-react';\r\nimport classNames from 'classnames';\r\n\r\nimport { getMenuItems } from '../helpers/menu';\r\n\r\n// components\r\nimport AppMenu from './Menu';\r\n\r\n// images\r\nimport { Logo, Shivay_Logo,  } from '../helpers/image';\r\n\r\ntype SideBarContentProps = {\r\n    hideUserProfile: boolean,\r\n};\r\n\r\n/* sidebar content */\r\nconst SideBarContent = ({ hideUserProfile }: SideBarContentProps) => {\r\n    return (\r\n        <>\r\n            {!hideUserProfile && (\r\n                <div className=\"leftbar-user\">\r\n                    <Link to=\"/\">\r\n                        {/* <img src={} alt=\"\" height=\"42\" className=\"rounded-circle shadow-sm\" /> */}\r\n                        <span className=\"leftbar-user-name\">Dominic Keller</span>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n            <AppMenu menuItems={getMenuItems()} />\r\n\r\n            <div className=\"clearfix\" />\r\n        </>\r\n    );\r\n};\r\n\r\ntype LeftSidebarProps = {\r\n    hideLogo: boolean,\r\n    hideUserProfile: boolean,\r\n    isLight: boolean,\r\n    isCondensed: boolean,\r\n};\r\n\r\nconst LeftSidebar = ({ isCondensed, isLight, hideLogo, hideUserProfile }: LeftSidebarProps): React$Element<any> => {\r\n    const menuNodeRef: any = useRef(null);\r\n\r\n    /**\r\n     * Handle the click anywhere in doc\r\n     */\r\n    const handleOtherClick = (e: any) => {\r\n        if (menuNodeRef && menuNodeRef.current && menuNodeRef.current.contains(e.target)) return;\r\n        // else hide the menubar\r\n        if (document.body) {\r\n            document.body.classList.remove('sidebar-enable');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleOtherClick, false);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleOtherClick, false);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"leftside-menu\" ref={menuNodeRef}>\r\n                {!hideLogo && (\r\n                    <>\r\n                        <Link to=\"/\" className=\"logo text-center logo-light\">\r\n                            <span className=\"logo-lg\">\r\n                                <img src={isLight ? Shivay_Logo : Shivay_Logo} alt=\"logo\" height=\"60\" />\r\n                            </span>\r\n                            <span className=\"logo-sm\">\r\n                                <img src={isLight ? Shivay_Logo : Shivay_Logo} alt=\"logo\" height=\"50\" />\r\n                            </span>\r\n                        </Link>\r\n\r\n                        <Link to=\"/\" className=\"logo text-center logo-dark\">\r\n                            <span className=\"logo-lg\">\r\n                                <img src={isLight ? Shivay_Logo : Shivay_Logo} alt=\"logo\" height=\"60\" />\r\n                            </span>\r\n                            <span className=\"logo-sm\">\r\n                                <img src={isLight ? Shivay_Logo : Shivay_Logo} alt=\"logo\" height=\"50\" />\r\n                            </span>\r\n                        </Link>\r\n                    </>\r\n                )}\r\n\r\n                <div className=\"mt-2\">\r\n                    {!isCondensed && (\r\n                        <SimpleBar style={{ maxHeight: '100%' }} timeout={500} scrollbarMaxSize={320}>\r\n                            <SideBarContent\r\n                                menuClickHandler={() => { }}\r\n                                isLight={isLight}\r\n                                hideUserProfile={hideUserProfile}\r\n                            />\r\n                        </SimpleBar>\r\n                    )}\r\n                    {isCondensed && <SideBarContent isLight={isLight} hideUserProfile={hideUserProfile} />}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nLeftSidebar.defaultProps = {\r\n    hideLogo: false,\r\n    hideUserProfile: false,\r\n    isLight: false,\r\n    isCondensed: false,\r\n};\r\n\r\nexport default LeftSidebar;\r\n"],"names":["_len","arguments","length","funcs","Array","_key","filter","f","reduce","acc","Error","_len2","args","_key2","apply","this","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","value","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","React","_ref","ref","onEnter","onEntering","onEntered","onExit","onExiting","className","children","in","inProp","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","props","computedDimension","handleEnter","useMemo","createChainedFunction","style","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","_jsx","TransitionWrapper","addEndListener","transitionEndListener","role","childRef","getChildRef","state","innerProps","classNames","key","label","isTitle","icon","url","getMenuItems","MENU_ITEMS","findAllParent","menuItems","menuItem","parents","parent","findMenuItem","push","menuItemKey","i","found","MenuItemWithChildren","item","linkClassName","subMenuClassNames","activeMenuItems","toggleMenu","open","setOpen","useState","includes","useEffect","_jsxs","Link","to","onClick","e","preventDefault","status","badge","variant","text","Collapse","map","child","_Fragment","MenuItem","_ref2","MenuItemLink","_ref3","pathname","target","_ref4","location","useLocation","menuRef","useRef","setActiveMenuItems","show","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByClassName","mid","getAttribute","activeMt","id","idx","SideBarContent","hideUserProfile","AppMenu","LeftSidebar","isCondensed","isLight","hideLogo","menuNodeRef","handleOtherClick","current","contains","body","classList","remove","addEventListener","removeEventListener","src","Shivay_Logo","alt","SimpleBar","maxHeight","scrollbarMaxSize","menuClickHandler","defaultProps"],"sourceRoot":""}
{"version":3,"file":"static/js/992.caf00296.chunk.js","mappings":"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","sources":["helpers/Pagination.js","helpers/PageTitle.js","helpers/loader/Loading.js","pages/shivay/inventory/modal/AddProductModal.js","pages/shivay/inventory/inventory.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Assuming you are using React Router\r\n\r\nconst Pagination = ({ pageIndex, pageSize, totalPages, setPageIndex, onChangePageSize }) => {\r\n    useEffect(() => {\r\n        // Ensure pageIndex stays within bounds when totalPages changes\r\n        if (pageIndex > totalPages) {\r\n            setPageIndex(Math.max(1, totalPages)); // Keep in valid range\r\n        }\r\n    }, [pageIndex, totalPages, setPageIndex]);\r\n\r\n    return (\r\n        <div className=\"d-lg-flex align-items-center text-center pb-1 pt-2\">\r\n            {/* Page Size Selection */}\r\n            <div className=\"d-inline-block me-3\">\r\n                <label className=\"me-1\">Display :</label>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        const newSize = Number(e.target.value);\r\n                        onChangePageSize(newSize);\r\n                        setPageIndex(1); // Reset to first page\r\n                    }}\r\n                    className=\"form-select d-inline-block w-auto\">\r\n                    {[10, 20, 50, 100].map((size) => (\r\n                        <option key={size} value={size}>{size}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Page Info */}\r\n            <span className=\"me-3\">\r\n                Page <strong>{pageIndex} of {totalPages}</strong>\r\n            </span>\r\n\r\n            {/* Go to Page Input */}\r\n            <label>Go to page: </label>\r\n            <input\r\n                type=\"number\"\r\n                placeholder={`${pageIndex}`}\r\n                min=\"1\"\r\n                max={totalPages}\r\n                onChange={(e) => {\r\n                    const enteredPage = Number(e.target.value);\r\n                    if (enteredPage >= 1 && enteredPage <= totalPages) {\r\n                        setPageIndex(enteredPage);\r\n                    }\r\n                }}\r\n                className=\"form-control ms-1 d-inline-block\"\r\n                style={{ width: '80px' }}\r\n            />\r\n\r\n            {/* Pagination Controls */}\r\n            <ul className=\"pagination pagination-rounded d-inline-flex ms-auto align-item-center mb-0 pe-4\">\r\n                {/* Previous Button */}\r\n                {pageIndex > 1 && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex - 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Previous</Link>\r\n                    </li>\r\n                )}\r\n\r\n                {/* Page Number Buttons */}\r\n                {Array.from({ length: totalPages }).map((_, i) => {\r\n                    const page = i + 1; // Adjust index to start from 1\r\n                    const isCurrentPage = page === pageIndex;\r\n                    const isNearCurrent = page >= pageIndex - 1 && page <= pageIndex + 1;\r\n                    const isEdgePage = page === 1 || page === totalPages;\r\n\r\n                    if (totalPages <= 5 || isNearCurrent || isEdgePage) {\r\n                        return (\r\n                            <li key={page} className={`page-item ${isCurrentPage ? 'active' : ''}`}\r\n                                onClick={() => setPageIndex(page)}>\r\n                                <Link to=\"#\" className=\"page-link\">{page}</Link>\r\n                            </li>\r\n                        );\r\n                    } else if ((page === 2 && pageIndex >= 5) || (page === totalPages - 1 && pageIndex <= totalPages - 4)) {\r\n                        return <li key={page} className=\"page-ittotalPagesem disabled\"><Link to=\"#\" className=\"page-link px-0\">...</Link></li>;\r\n                    }\r\n\r\n                    return null;\r\n                })}\r\n\r\n                {/* Next Button */}\r\n                {pageIndex < totalPages && (\r\n                    <li className=\"page-item\" onClick={() => setPageIndex(pageIndex + 1)}>\r\n                        <Link to=\"#\" className=\"page-link\">Next</Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { ColorRing, ThreeDots } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '54vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DashboardLoading = () => {\r\n    return (\r\n        <div style={{ height: '30vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\" style={{ height: '2.2vh' }}>\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"25\"\r\n                width=\"25\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading, DashboardLoading };\r\n","import React, { useEffect, useState } from 'react'\nimport { Modal, Button, Row, Col, Form, Spinner } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createProductActions, updateProductActions } from '../../../../redux/actions';\nimport { ButtonLoading } from '../../../../helpers/loader/Loading';\n\nconst AddProductModal = ({ showModal, handleClose, ProductData }) => {\n\n    const { type } = ProductData;\n    const dispatch = useDispatch();\n    const {\n        handleSubmit,\n        register,\n        setValue,\n        reset,\n        formState: { errors },\n        watch,\n        trigger,\n    } = useForm();\n    const [threshold, setThreshold] = useState(100);\n    const store = useSelector((state) => state)\n    const closeModal = () => {\n        reset();\n        handleClose();\n    };\n\n    useEffect(() => {\n        if (ProductData?.data) {\n            setValue('name', ProductData.data?.name);\n            setValue('model', ProductData.data?.modelData?.name);\n            setValue('code', ProductData.data?.code);\n            setValue('description', ProductData.data?.description);\n            setThreshold(Number(ProductData?.data?.lowestStock));\n        }\n    }, [ProductData, setValue]);\n\n    const onSubmit = (data) => {\n        const payload = {\n            name: data?.name,\n            modelName: data?.model,\n            code: data?.code,\n            description: data?.description,\n            lowestStock: threshold,\n        };\n\n        if (ProductData?.data?._id) {\n            const updatedData = {\n                ...payload,\n                productId: ProductData?.data?._id,\n            };\n            dispatch(updateProductActions(updatedData));\n        } else {\n            dispatch(createProductActions(payload));\n        }\n    };\n    const modelValue = watch(\"model\");\n    const codeValue = watch(\"code\");\n\n    const createResponse = store?.createProductReducer?.createProduct?.status;\n\n    useEffect(() => {\n        if (createResponse === 200) {\n            closeModal();\n        }\n    }, [createResponse]);\n\n    return (\n        <div>\n            <Modal show={showModal} centered size='lg' onHide={closeModal} backdrop=\"static\" keyboard={false}>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title className='text-black'>{type} Product</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {/* Your form or content here */}\n                        <Row>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-2\">\n                                    <Form.Label className=\"mb-0\">\n                                        Product Name <span className=\"text-danger\">*</span>\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Enter Product Name\"\n                                        {...register('name', {\n                                            required: 'Product Name is required',\n                                            validate: value =>\n                                                value?.trim() !== '' || 'Product Name cannot be only spaces',\n                                        })}\n                                    />\n                                    {errors.name && (\n                                        <small className=\"text-danger\">{errors.name.message}</small>\n                                    )}\n                                </Form.Group>\n\n                            </Col>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-2\">\n                                    <Form.Label className='mb-0'>Model</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Enter Model\"\n                                        {...register(\"model\", {\n                                            validate: (value) => {\n                                                if (!value?.trim() && !codeValue?.trim()) {\n                                                    return \"Either Model or Code is required\";\n                                                }\n                                                return true;\n                                            }\n                                        })}\n                                        onKeyUp={() => {\n                                            trigger(\"code\"); // revalidate code when model is typed\n                                        }}\n                                    />\n                                    {errors.model && !codeValue && (\n                                        <small className=\"text-danger\">{errors.model.message}</small>\n                                    )}\n                                </Form.Group>\n                            </Col>\n\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-2\">\n                                    <Form.Label className='mb-0'>Code</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Enter Code\"\n                                        {...register(\"code\", {\n                                            validate: (value) => {\n                                                if (!value?.trim() && !modelValue?.trim()) {\n                                                    return \"Either Code or Model is required\";\n                                                }\n                                                return true;\n                                            }\n                                        })}\n                                        onKeyUp={() => {\n                                            trigger(\"model\"); // revalidate model when code is typed\n                                        }}\n                                    />\n                                    {errors.code && !modelValue && (\n                                        <small className=\"text-danger\">{errors.code.message}</small>\n                                    )}\n                                </Form.Group>\n                            </Col>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-2\">\n                                    <Form.Label className=''>Low Stock Threshold</Form.Label>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <span>0</span>\n                                        <input\n                                            type=\"range\"\n                                            className=\"w-75\"\n                                            min=\"0\"\n                                            max=\"1000\"\n                                            step=\"100\"\n                                            defaultValue=\"100\"\n                                            onChange={(e) => setThreshold(Number(e.target.value))}\n                                        />\n                                        <span>1000</span>\n                                    </div>\n                                    {/* Display the current value */}\n                                    <div className=\"text-center mt-2\">\n                                        <strong>Current Threshold: {threshold}</strong>\n                                    </div>\n                                </Form.Group>\n                            </Col>\n                            <Col sm={12}>\n\n                                <Form.Group className=\"\">\n                                    <Form.Label className='mb-0'>Description</Form.Label>\n                                    <Form.Control\n                                        as=\"textarea\"\n                                        rows={2}\n                                        placeholder=\"Enter Description\"\n                                        name=\"Description\"\n                                        {...register(\"description\")}\n                                    // required\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className='cancel-button' onClick={closeModal}>\n                            Close\n                        </Button>\n                        <Button\n                            variant=\"primary\"\n                            type=\"submit\"\n                            className=\"custom-button\"\n                            disabled={store?.createProductReducer?.loading}\n                            style={{ width: '70px !important' }}\n                            >\n                            {store?.createProductReducer?.loading ? (\n                                <ButtonLoading color=\"white\" />\n                            ) : type === 'Add' ? (\n                                'Save'\n                            ) : (\n                                'Update'\n                            )}\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AddProductModal\n","import React, { useEffect, useState } from 'react'\nimport { Button, Card, Col, Form, Modal, Row } from 'react-bootstrap'\nimport { IoIosAdd } from \"react-icons/io\";\nimport PageTitle from '../../../helpers/PageTitle';\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport AddProductModal from './modal/AddProductModal';\nimport { deleteProductActions, getProductListActions } from '../../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport Pagination from '../../../helpers/Pagination';\nimport { Loading } from '../../../helpers/loader/Loading';\n\nconst Inventory = () => {\n\n    const dispatch = useDispatch();\n    const [showModal, setShowModal] = useState(false);\n    const [showConfirm, setShowConfirm] = useState(false);\n    const [productToDelete, setProductToDelete] = useState(null);\n    const totalRecords = '0';\n    const [pageIndex, setPageIndex] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [totalPages, setTotalPages] = useState(Math.ceil(totalRecords / pageSize));\n    const [search, setSearch] = useState('')\n    const handleShow = () => setShowModal(true);\n    const store = useSelector((state) => state)\n    const ProductData = store?.productListReducer?.productList?.response;\n    console.log(ProductData, 'ProductData')\n    const createResponse = store?.createProductReducer?.createProduct?.status;\n    const updateResponse = store?.updateProductReducer?.updateProduct?.status;\n    const deleteResponse = store?.deleteProductReducer?.deleteProduct?.status;\n\n    useEffect(() => {\n        dispatch(getProductListActions({\n            limit: pageSize,\n            page: pageIndex,\n            search: search,\n            stockFilter: true,\n        }));\n    }, [dispatch, search, pageSize, pageIndex]);\n\n    useEffect(() => {\n        if (createResponse === 200 || updateResponse === 200 || deleteResponse === 200) {\n            dispatch(getProductListActions({\n                limit: pageSize,\n                page: pageIndex,\n                search: search,\n                stockFilter: true,\n            }));\n        }\n    }, [createResponse, updateResponse, deleteResponse]);\n\n    const handleDelete = () => {\n        dispatch(deleteProductActions({ productId: productToDelete }));\n        setShowConfirm(false);\n    };\n\n    const [showProductModal, setShowProductModal] = useState({\n        data: null,\n        type: null,\n        status: false\n    })\n\n    useEffect(() => {\n        setTotalPages(Math.ceil(totalRecords / pageSize));\n    },\n        [totalRecords, pageSize]);\n\n    const handleUserModal = (productDetails, modalType, modalStatus) => {\n        setShowProductModal({ ...showProductModal, data: productDetails, type: modalType, status: modalStatus })\n    }\n    const handleClose = () => {\n        setShowProductModal({ ...showProductModal, data: null, status: false })\n    }\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Inventory\", path: \"/shivay/inventory\" },\n                    { label: \"Inventory\", path: \"/shivay/inventory\", active: true },\n                ]}\n                title={\"Inventory\"}\n            />\n            <Form>\n                <Row>\n                    <Col sm={12}>\n                        <div className='d-flex justify-content-end mt-1'>\n                            <input\n                                type=\"text\"\n                                className=\"form-control w-auto me-2\"\n                                style={{ height: '42px', marginTop: '10px' }}\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={(e) => setSearch(e.target.value)}\n                            />\n                            <Button className=\"mt-2 fw-bold custom-button\" onClick={() => handleUserModal(null, 'Add', true)}>\n                                <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                            </Button>\n                        </div>\n                    </Col>\n\n                    <div className='mt-2'>\n                        <Card\n                            style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                        >\n                            <Card.Body className=\"text-center py-1\">\n                                <table className=\"table table-striped bg-white mb-0\">\n                                    <thead>\n                                        <tr className=\"table_header\">\n                                            <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                            <th scope=\"col\">Product Name</th>\n                                            <th scope=\"col\">Model</th>\n                                            <th scope=\"col\">Code</th>\n                                            <th scope=\"col\">Qty</th>\n                                        </tr>\n                                    </thead>\n                                    {store?.productListReducer?.loading ? (\n                                        <tr>\n                                            <td className='text-center' colSpan={6}>\n                                                <Loading />\n                                            </td>\n                                        </tr>\n                                    ) : (\n                                        <tbody>\n                                            {ProductData?.length === 0 ? (\n                                                <tr>\n                                                    <td colSpan={6} className='text-center'>\n                                                        <p className='my-5 py-5 '>No Products to show.</p>\n                                                    </td>\n                                                </tr>\n                                            ) : (\n                                                ProductData?.map((data, index) => (\n                                                    <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                        <th scope=\"row\">{index + 1}</th>\n                                                        <td className=\"text-uppercase fw-bold \">\n                                                            {data?.name || <span className=\"text-black\">-</span>}\n                                                        </td>\n                                                        <td className=\"text-uppercase fw-bold \">\n                                                            {data?.modelData?.name || <span className=\"text-black\">-</span>}\n                                                        </td>\n                                                        <td className=\"text-uppercase fw-bold \">\n                                                            {data?.code || <span className=\"text-black\">-</span>}\n                                                        </td>\n                                                        <td className=\"text-uppercase fw-bold \">\n                                                            {data?.quantity !== undefined ? data?.quantity : <span className=\"text-black\">-</span>}\n                                                        </td>\n                                                        <td ></td>\n                                                        <div className=\"icon-container d-flex  pb-0\" >\n                                                            <span className=\"icon-wrapper\" title=\"Edit\">\n                                                                <AiOutlineEdit\n                                                                    className=\"fs-4 text-black\"\n                                                                    style={{ cursor: 'pointer' }}\n                                                                    onClick={() => handleUserModal(data, 'Edit', true)}\n                                                                />\n                                                            </span>\n                                                            <span className=\"icon-wrapper\" title=\"Delete\" onClick={() => { setProductToDelete(data?._id); setShowConfirm(true); }}>\n                                                                <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                            </span>\n                                                        </div>\n                                                    </tr>\n                                                )))}\n                                        </tbody>\n                                    )}\n                                </table>\n                                <Pagination\n                                    pageIndex={pageIndex}\n                                    pageSize={pageSize}\n                                    totalPages={useSelector((state) => state?.productListReducer?.productList?.totalPages)}\n                                    setPageIndex={setPageIndex}\n                                    onChangePageSize={setPageSize}\n                                />\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </Row>\n            </Form>\n\n            <AddProductModal showModal={showProductModal?.status} handleClose={handleClose} ProductData={showProductModal} />\n\n            {/* delete modal */}\n            <Modal show={showConfirm} onHide={() => setShowConfirm(false)} >\n                <Modal.Body className='text-center'>\n                    <h4 className='text-black'>Confirm Deletion</h4>\n                    <p className='mt-2 mb-3'> Are you sure you want to delete this User?</p>\n                    <span className='bg-light rounded-circle p-3 '>\n                        <MdDeleteOutline className='fs-1  text-danger' />\n                    </span>\n                    <div className='d-flex justify-content-center mt-3 gap-2'>\n                        <Button className='cancel-button' onClick={() => setShowConfirm(false)}>\n                            Cancel\n                        </Button>\n                        <Button className='custom-button' onClick={handleDelete}>\n                            Delete\n                        </Button>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Inventory"],"names":["_ref","pageIndex","pageSize","totalPages","setPageIndex","onChangePageSize","useEffect","Math","max","_jsxs","className","children","_jsx","value","onChange","e","newSize","Number","target","map","size","type","placeholder","min","enteredPage","style","width","onClick","Link","to","Array","from","length","_","i","page","isCurrentPage","props","Row","Col","Breadcrumb","listProps","Item","href","breadCrumbItems","item","index","active","color","label","path","title","Loading","height","display","justifyContent","alignItems","ThreeDots","strokeWidth","animationDuration","visible","DashboardLoading","ButtonLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors","_store$createProductR","_store$createProductR2","_store$createProductR3","_store$createProductR4","showModal","handleClose","ProductData","dispatch","useDispatch","handleSubmit","register","setValue","reset","formState","errors","watch","trigger","useForm","threshold","setThreshold","useState","store","useSelector","state","closeModal","_ProductData$data","_ProductData$data2","_ProductData$data2$mo","_ProductData$data3","_ProductData$data4","_ProductData$data5","data","name","modelData","code","description","lowestStock","modelValue","codeValue","createResponse","createProductReducer","createProduct","status","Modal","show","centered","onHide","backdrop","keyboard","Form","onSubmit","_ProductData$data6","payload","modelName","model","_id","_ProductData$data7","updatedData","productId","updateProductActions","createProductActions","Header","closeButton","Title","Body","sm","Group","Label","Control","required","validate","trim","message","onKeyUp","step","defaultValue","as","rows","Footer","Button","variant","disabled","loading","Inventory","_store$productListRed","_store$productListRed2","_store$updateProductR","_store$updateProductR2","_store$deleteProductR","_store$deleteProductR2","_store$productListRed3","setShowModal","showConfirm","setShowConfirm","productToDelete","setProductToDelete","setPageSize","setTotalPages","ceil","search","setSearch","productListReducer","productList","response","console","log","updateResponse","updateProductReducer","updateProduct","deleteResponse","deleteProductReducer","deleteProduct","getProductListActions","limit","stockFilter","showProductModal","setShowProductModal","handleUserModal","productDetails","modalType","modalStatus","PageTitle","marginTop","IoIosAdd","Card","boxShadow","scope","colSpan","_data$modelData","undefined","quantity","AiOutlineEdit","cursor","RiDeleteBinLine","Pagination","_state$productListRed","_state$productListRed2","AddProductModal","MdDeleteOutline","handleDelete","deleteProductActions"],"sourceRoot":""}
{"version":3,"file":"static/js/65.6b7acacb.chunk.js","mappings":"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","sources":["helpers/PageTitle.js","pages/shivay/stockIn/addStockIn/AddStockIn.js","helpers/loader/Loading.js","pages/shivay/openingStock/addStock/AddProductModal.js"],"sourcesContent":["// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useEffect, useRef, useState } from 'react'\nimport PageTitle from '../../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap'\nimport Select from 'react-select';\nimport { IoIosAdd } from 'react-icons/io';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport AddProductModal from '../../openingStock/addStock/AddProductModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createStockInActions, getStockInByIdActions, getWarehouseListActions, listingSupplierActions, listingUsersActions, updateStockInActions } from '../../../../redux/actions';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport { CgCloseO } from \"react-icons/cg\";\nimport { HiOutlineFolderDownload } from \"react-icons/hi\";\nimport { ButtonLoading } from '../../../../helpers/loader/Loading';\n\nconst AddStockIn = () => {\n    const [searchParams] = useSearchParams();\n    const stockId = searchParams.get('id')\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const { handleSubmit, register, setValue, resetField, watch } = useForm()\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n    const store = useSelector((state) => state)\n    const [today, setToday] = useState(new Date().toISOString().split('T')[0]);\n    const [openingProducts, setOpeningProducts] = useState([])\n    // const StockInData = store?.stockInListReducer?.stockInList?.response;\n    // const [selectedStock, setSelectedStock] = useState(null);\n    const Warehouse = store?.getWarehouseListReducer?.searchWarehouse?.response;\n    const UsersList = store?.listingUsersReducer?.listingUsers?.response;\n    const SupplierList = store?.listingSupplierReducer?.listingSupplier?.response;\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedQuantity, setEditedQuantity] = useState('');\n    const [productId, setProductId] = useState('');\n    const inputRef = useRef(null);\n    const xyz = watch('invoiceAttachment');\n    // console.log(selectedStock, \"selectedStock\")\n\n    const createResponse = store?.createStockInReducer?.createStockIn?.status;\n    const stockInData = store?.stockInByIdReducer?.stockInById?.response;\n    console.log(stockInData, 'stockInData')\n    const [attachmentType, setAttachmentType] = useState(\"\");\n\n    const fileInputRef = useRef();\n\n    const handleAttachmentTypeChange = (e) => {\n        const type = e.target.value;\n        setAttachmentType(type);\n        setValue(\"invoiceAttachmentType\", type);\n    };\n\n    const resetAttachmentType = () => {\n        setAttachmentType(\"\");\n        setValue(\"invoiceAttachmentType\", \"\");\n        resetField(\"invoiceAttachment\");\n        if (fileInputRef.current) fileInputRef.current.value = \"\";\n    };\n\n    const handleQuantityChange = (e) => {\n        const value = Number(e.target.value);\n        if (value >= 0) {\n            setEditedQuantity(value);\n        }\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSave();\n        }\n    };\n\n    useEffect(() => {\n        if (createResponse === 200) {\n            navigate(\"/shivay/stockIn\");\n        }\n    }, [createResponse]);\n\n    // Handle save (when clicking outside or pressing Enter)\n    const handleSave = () => {\n        setIsEditing(false);\n        // Here you would typically also call an API to update the quantity in your backend\n    };\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n    useEffect(() => {\n        const handleClickOutside = (e) => {\n            if (inputRef.current && !inputRef.current.contains(e.target)) {\n                handleSave();\n            }\n        };\n\n\n        if (isEditing) {\n            document.addEventListener('mousedown', handleClickOutside);\n            return () => {\n                document.removeEventListener('mousedown', handleClickOutside);\n            };\n        }\n    }, [isEditing]);\n\n    // useEffect(() => {\n    //     if (stockId && StockInData?.length > 0) {\n    //         const foundStock = StockInData?.find(item => item._id === stockId);\n    //         setSelectedStock(foundStock);\n    //         console.log(foundStock, 'foundStock')\n    //     }\n    // }, [stockId, StockInData]);\n\n    const warehouseOptions = Warehouse?.map((warehouse) => ({\n        value: warehouse._id,\n        label: warehouse.name,\n    }));\n\n    const usersOptions = UsersList?.map((users) => ({\n        value: users._id,\n        label: users.name\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n            .join(' '),\n    }));\n\n\n    const supplierOptions = SupplierList?.map((users) => ({\n        value: users._id,\n        label: users.name,\n    }));\n\n    const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [selectedSupplier, setSelectedSupplier] = useState(null);\n    const [isAccordionOpen, setIsAccordionOpen] = useState(false);\n    console.log(selectedWarehouse, 'selectedWarehouse')\n\n    useEffect(() => {\n        if (stockId) {\n            dispatch(getStockInByIdActions(stockId));\n        }\n    }, [dispatch, stockId]);\n\n\n    useEffect(() => {\n        if (stockId && stockInData) {\n            console.log(stockInData, '2345432')\n            setToday(stockInData?.[0]?.createdAt ? new Date(stockInData?.[0]?.createdAt).toISOString().split('T')[0] : '')\n            const updateWarehouses = stockInData?.[0]?.warehouseData\n                ? { value: stockInData?.[0].warehouseId, label: stockInData?.[0].warehouseData?.find((ele) => ele?._id === stockInData?.[0]?.warehouseId)?.name }\n                : {};\n            setSelectedWarehouse(updateWarehouses)\n\n            const updatedUser = stockInData?.[0]?.receivedByData ? { value: stockInData?.[0]?.receivedBy, label: stockInData?.[0].receivedByData?.find((ele) => ele?._id === stockInData?.[0]?.receivedBy)?.name }\n                : {}\n            setSelectedUser(updatedUser)\n\n            const updatedSupplier = stockInData?.[0]?.supplierId ? { value: stockInData?.[0]?.supplierId, label: stockInData?.[0].supplierData?.find((ele) => ele?._id === stockInData?.[0]?.supplierId)?.name }\n                : {}\n            setSelectedSupplier(updatedSupplier)\n\n            setValue('invoiceNumber', stockInData?.[0]?.invoiceNumber || '');\n            setValue('description', stockInData?.[0]?.description || '');\n            setValue('invoiceValue', stockInData?.[0]?.fright || '');\n            setValue('invoiceAttachment', stockInData?.[0]?.invoiceAttachment || '');\n            setAttachmentType(stockInData?.[0]?.invoiceAttachmentType || '');\n            setEditedQuantity(stockInData?.[0]?.stockInProducts?.quantity || '');\n            setProductId(stockInData?.[0]?.productData?._id)\n        }\n\n    }, [stockId, stockInData])\n\n    console.log(selectedWarehouse, 'selectedWarehouse')\n\n    const handleAccordionToggle = () => {\n        setIsAccordionOpen(prevState => !prevState);\n    };\n    const handleWarehouseChange = (selectedOption) => {\n        setSelectedWarehouse(selectedOption);\n    };\n\n    const handleUserChange = (selectedUser) => {\n        setSelectedUser(selectedUser);\n    };\n\n    const handleSupplierChange = (selectedSupplier) => {\n        setSelectedSupplier(selectedSupplier);\n    };\n\n    useEffect(() => {\n        dispatch(getWarehouseListActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingUsersActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingSupplierActions());\n    }, [dispatch]);\n\n    const handleDeleteProduct = (indexToRemove) => {\n        const updatedProducts = openingProducts.filter((_, index) => index !== indexToRemove);\n        setOpeningProducts(updatedProducts);\n    };\n\n    const onSubmit = (data) => {\n        console.log(data, 'ouiyuttdfghjk', fileInputRef)\n        const cleanedProducts = openingProducts.map(({ product, ...rest }) => rest);\n        const formData = new FormData();\n        if (data?.invoiceAttachment?.[0] instanceof File) {\n            formData.append('invoiceAttachment', data.invoiceAttachment?.[0]);\n        }\n\n        formData.append('warehouseId', selectedWarehouse?.value)\n        formData.append('receivedBy', selectedUser?.value);\n        formData.append('supplierId', selectedSupplier?.value);\n        formData.append('description', data?.description);\n        formData.append('invoiceNumber', data?.invoiceNumber);\n        formData.append('fright', data?.invoiceValue);\n        formData.append('invoiceAttachmentType', attachmentType);\n\n        if (!stockId) {\n            formData.append('date', data?.date);\n        }\n\n        if (stockId) {\n            formData.append('_id', stockId);\n        }\n        if (stockId) {\n            formData.append('productId', productId);\n        }\n\n        if (stockId) {\n            formData.append('quantity', stockId ? parseInt(editedQuantity) : JSON.stringify(cleanedProducts));\n        } else {\n            formData.append('stockInQty', stockId ? parseInt(editedQuantity) : JSON.stringify(cleanedProducts));\n\n        }\n        if (stockId) {\n            dispatch(updateStockInActions(formData))\n        } else {\n            dispatch(createStockInActions(formData));\n            // console.log(formData, 'formData');\n        }\n    };\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Stock In List\", path: \"/shivay/stockIn\" },\n                    { label: stockId ? \"Edit Stock In\" : \"Add Stock In\", path: \"/shivay/stockIn\", active: true },\n                ]}\n                title={stockId ? \"Edit Stock In\" : \"Add Stock In\"}\n            />\n            <Form onSubmit={handleSubmit(onSubmit)}>\n\n                <div className=\"accordion mb-3\" id=\"accordionExample\">\n                    <div className=\"accordion-item\" style={{ border: '2px solid #6655D9' }}>\n                        <h2 className=\"accordion-header mt-0\">\n                            <button\n                                className=\"accordion-button py-1 d-flex justify-content-between align-items-center w-100\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#collapseOne\"\n                                aria-expanded={isAccordionOpen ? \"true\" : \"false\"}\n                                aria-controls=\"collapseOne\"\n                                onClick={handleAccordionToggle}  // Toggle the accordion open state\n                            >\n                                <div className=\"flex-grow-1 text-black fw-bold\"> {stockId ? \"Edit\" : \"Add\"} Stock In Details</div>\n\n                                {/* Right-aligned buttons */}\n                                <div className=\"d-flex\">\n                                    <Button\n                                        className=\"fw-bold custom-button me-2\"\n                                        onClick={handleShow}\n                                    // disabled={!isAccordionOpen}\n                                    >\n                                        <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                                    </Button>\n                                </div>\n                            </button>\n                        </h2>\n\n                        <div\n                            id=\"collapseOne\"\n                            className={`accordion-collapse collapse ${isAccordionOpen ? \"\" : \"show\"}`}\n                            data-bs-parent=\"#accordionExample\"\n                        >\n                            <div className=\"accordion-body py-1\">\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className='mb-0'>Warehouse {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Select\n                                                value={selectedWarehouse}\n                                                onChange={handleWarehouseChange}\n                                                options={warehouseOptions}\n                                                placeholder=\"Select a warehouse\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Received By {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Select\n                                                value={selectedUser}\n                                                onChange={handleUserChange}\n                                                options={usersOptions}\n                                                placeholder=\"Select a User\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Supplier {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Select\n                                                value={selectedSupplier}\n                                                onChange={handleSupplierChange}\n                                                options={supplierOptions}\n                                                placeholder=\"Select a Supplier\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className='mb-0'>Date Range</Form.Label>\n                                            <Form.Control\n                                                type=\"date\"\n                                                value={today}\n                                                {...register('date')}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Invoice Number {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Form.Control\n                                                type=\"number\"\n                                                placeholder=\"Enter Invoice Number\"\n                                                {...register('invoiceNumber', { required: true })}\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">\n                                                Attachment\n                                                {attachmentType && (\n                                                    <span className=\"text-capitalize\"> ({attachmentType})</span>\n                                                )}\n                                                {stockInData?.[0]?.invoiceAttachment && (\n                                                    <a\n                                                        href={stockInData?.[0]?.invoiceAttachment}\n                                                        target=\"_blank\"\n                                                        title='Download Attachment'\n                                                        rel=\"noopener noreferrer\"\n                                                    // style={{position:'absolute', top:'20px'}}\n                                                    >\n                                                        <HiOutlineFolderDownload className='ms-1 fs-4' />\n                                                    </a>\n                                                )}\n                                                {!stockId && <span className=\"text-danger\"> *</span>}\n                                            </Form.Label>\n\n                                            {!attachmentType ? (\n                                                <Form.Select\n                                                    className=\"mb-0\"\n                                                    // defaultValue=\"\"\n                                                    value={attachmentType}\n                                                    onChange={handleAttachmentTypeChange}\n\n                                                >\n                                                    <option value=\"\">Select Attachment Type</option>\n                                                    <option value=\"Invoice\">Invoice</option>\n                                                    <option value=\"Delivery Challan\">Delivery Challan</option>\n                                                </Form.Select>\n                                            ) : (\n                                                <div className=\"d-flex align-items-center gap-2\">\n                                                    <Form.Control\n                                                        type=\"file\"\n                                                        accept=\".pdf,.docx,.jpg,.jpeg,.png\"\n                                                        placeholder=\"Upload file\"\n                                                        {...register(\"invoiceAttachment\")}\n                                                    />\n\n                                                    <CgCloseO\n                                                        size={20}\n                                                        className='text-danger'\n                                                        style={{ cursor: \"pointer\" }}\n                                                        onClick={resetAttachmentType}\n                                                        title=\"Change attachment type\"\n                                                    />\n                                                </div>\n                                            )}\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Invoice Value</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                {...register('invoiceValue')}\n                                                placeholder=\"Enter Invoice Value\"\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Description</Form.Label>\n                                            <Form.Control\n                                                as=\"textarea\"\n                                                rows={1}\n                                                {...register('description')}\n                                                placeholder=\"Enter Description\"\n                                            />\n                                        </Form.Group>\n                                    </Col>\n\n                                </Row>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='mt-2'>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center py-1\">\n                            <table className=\"table table-striped bg-white\">\n                                <thead>\n                                    <tr className=\"table_header\">\n                                        <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                        <th scope=\"col\">Product Name</th>\n                                        <th scope=\"col\">Model Name</th>\n                                        <th scope=\"col\">Code</th>\n                                        <th scope=\"col\">Quantity</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {!stockId ? (\n                                        openingProducts && openingProducts.length > 0 ? (\n                                            openingProducts.map((data, index) => (\n                                                <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td className=\"text-uppercase fw-bold\">\n                                                        {data?.product?.name || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.product?.modelId?.name || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.product?.code || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.quantity || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td></td>\n                                                    <div className=\"icon-container d-flex pb-0\">\n                                                        <span className=\"icon-wrapper me-4\" title=\"Delete\" onClick={() => handleDeleteProduct(index)}>\n                                                            <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                        </span>\n                                                    </div>\n                                                </tr>\n                                            ))\n                                        ) : (\n                                            <tr>\n                                                <td colSpan=\"6\" className=\"text-center text-danger py-3\">\n                                                    Note :  No products added yet. Please add products to proceed with stock-in.\n                                                </td>\n                                            </tr>\n                                        )\n                                    ) : (\n                                        stockInData?.[0]?.stockInProducts?.map((data, index) => (\n                                            <tr key={index}>\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td className=\"text-uppercase fw-bold\">\n                                                    {data?.productData?.name || <span className=\"text-black\">-</span>}\n                                                </td>\n                                                <td className=\"fw-bold\">\n                                                    {data?.productData?.modelData?.[0]?.name || <span className=\"text-black\">-</span>}\n                                                </td>\n                                                <td className=\"fw-bold\">\n                                                    {data?.productData?.code || <span className=\"text-black\">-</span>}\n                                                </td>\n                                                <td className=\"fw-bold\">\n                                                    {data?.quantity || <span className=\"text-black\">-</span>}\n\n                                                    {/* {isEditing ? (\n                                                        <input\n                                                            ref={inputRef}\n                                                            type=\"number\"\n                                                            min=\"0\"\n                                                            value={editedQuantity}\n                                                            onChange={handleQuantityChange}\n                                                            onKeyPress={handleKeyPress}\n                                                            className=\"form-control form-control-md\"\n                                                            style={{ width: '5vw', display: 'inline-block', marginTop: '-10px' }}\n                                                        />\n                                                    ) : (\n                                                        <span onClick={handleEditClick}>\n                                                            {editedQuantity} <BsThreeDotsVertical className=\"table_header cursor\" />\n                                                        </span>\n                                                    )} */}\n                                                </td>\n                                                <td></td>\n                                                <div className=\"icon-container d-flex pb-0\">\n                                                    <span\n                                                        className=\"icon-wrapper me-4\"\n                                                        title=\"Edit\"\n                                                        onClick={handleEditClick}\n                                                    >\n                                                        <AiOutlineEdit className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                </div>\n                                            </tr>\n                                        ))\n                                    )}\n\n                                </tbody>\n\n                            </table>\n\n                        </Card.Body>\n                    </Card>\n                    <div className=\"text-end\">\n                        <Button\n                            className=\"fw-bold cancel-button me-2\"\n                            onClick={() => navigate(\"/shivay/stockIn\")}\n                        >\n                            Cancel\n                        </Button>\n\n                        {/* <Button className=\"fw-bold custom-button\" type='submit'>{stockId ? 'Update' : \"Submit\"}</Button> */}\n                        <Button\n                            type=\"submit\"\n                            className=\"custom-button fw-bold\"\n                            disabled={store?.createStockInReducer?.loading}\n                            style={{ width: '100px' }}\n                        >\n                            {store?.createStockInReducer?.loading ? (\n                                <ButtonLoading color=\"white\" />\n                            ) : stockId ? (\n                                'Update'\n                            ) : (\n                                'Submit'\n                            )}\n                        </Button>\n                    </div>\n                </div>\n            </Form>\n            <AddProductModal openingProducts={openingProducts} setOpeningProducts={setOpeningProducts} showModal={showModal} handleClose={handleClose} />\n        </div >\n    )\n}\n\nexport default AddStockIn","import React from 'react';\r\nimport { ColorRing, ThreeDots } from 'react-loader-spinner';\r\nconst Loading = () => {\r\n    return (\r\n        <div style={{ height: '54vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DashboardLoading = () => {\r\n    return (\r\n        <div style={{ height: '30vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <ThreeDots\r\n                color=\"#6655D9\"\r\n                strokeWidth=\"5\"\r\n                animationDuration=\"0.75\"\r\n                width=\"70\"\r\n                visible={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst ButtonLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\" d-flex justify-content-center align-items-center w-100\" style={{ height: '2.2vh' }}>\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"25\"\r\n                width=\"25\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#fff', '#fff', '#fff', '#fff', '#fff']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CartLoading = () => {\r\n    return (\r\n        // <div style={{ height: \"5vh\", display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\r\n        <div className=\"p-0 d-flex justify-content-center align-items-center m-0\">\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"32\"\r\n                width=\"32\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{}}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\r\n            />\r\n\r\n            {/* <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { Loading, ButtonLoading, CartLoading, DashboardLoading };\r\n","import React, { useEffect, useState } from 'react'\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Select from 'react-select'; // Import React Select\nimport { createStockCheckActions, searchProductActions } from '../../../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport ToastContainer from '../../../../helpers/toast/ToastContainer';\nimport { useLocation } from 'react-router-dom';\n\nconst AddProductModal = ({ showModal, handleClose, openingProducts, setOpeningProducts, selectedWarehouse }) => {\n\n    const dispatch = useDispatch();\n    const { handleSubmit, register, reset } = useForm()\n    const store = useSelector((state) => state)\n    const ProductSearch = store?.searchProductReducer?.searchProduct?.response;\n    const StockCheck = store?.createStockCheckReducer?.createStockCheck;\n    console.log(StockCheck, 'StockCheck')\n    const [searchTerm, setSearchTerm] = useState('');\n    const [productName, setProductName] = useState('');\n    const [quantity, setQuantity] = useState()\n    const location = useLocation()\n    console.log(ProductSearch,'ProductSearch')\n\n    const [searchType, setSearchType] = useState('modelName'); // default search type\n    useEffect(() => {\n        if (location.pathname === '/shivay/addDispatch' && quantity) {\n            dispatch(createStockCheckActions({\n                warehouseId: selectedWarehouse?.value, qty: quantity, productId: ProductSearch?.[0]?._id\n            }))\n        }\n    }, [location, quantity])\n    useEffect(() => {\n        const delayDebounceFn = setTimeout(() => {\n            if (searchTerm) {\n                if (searchType === 'modelName') {\n                    dispatch(searchProductActions({ modelName: searchTerm }));\n                } else if (searchType === 'code') {\n                    dispatch(searchProductActions({ code: searchTerm }));\n                }\n            }\n        }, 500);\n\n        return () => clearTimeout(delayDebounceFn);\n    }, [searchTerm, dispatch, searchType]);\n\n    const modalOptions = ProductSearch?.map((data) => ({\n        value: data?._id,\n        label: data?.modelId?.name,\n        data: data\n    })) || [];\n\n    const codeOptions = ProductSearch?.map((data) => ({\n        value: data?._id,\n        label: data?.code,\n        data: data\n    })) || []\n\n    // State to handle selected options\n    const [selectedModal, setSelectedModal] = useState(null);\n    console.log(selectedModal, 'selectedModalselectedModal')\n    const [selectedCode, setSelectedCode] = useState(null);\n    console.log(selectedCode, 'selectedCode')\n\n    // Handle changes in modal selection\n    const handleModalChange = (selectedOption) => {\n        setSelectedModal(selectedOption);\n        setSelectedCode({\n            value: selectedOption?.data?._id,\n            label: selectedOption?.data?.code,\n            data: selectedOption?.data\n\n        });\n        setProductName(selectedOption?.data?.name);\n    };\n\n    const handleCodeChange = (selectedOption) => {\n        setSelectedCode(selectedOption);\n        setSelectedModal({\n            value: selectedOption?.data?._id,\n            label: selectedOption?.data?.modelId?.name,\n            data: selectedOption?.data\n        });\n        setProductName(selectedOption?.data?.name);\n    };\n\n    useEffect(() => {\n        dispatch(searchProductActions());\n    }, [dispatch]);\n\n    const loadModalOptions = async (inputValue) => {\n        if (!inputValue) return [];\n\n        console.log(inputValue, 'inputValue')\n        dispatch(searchProductActions({ modelName: inputValue }))\n    };\n\n    const onSubmit = (data) => {\n        if (openingProducts?.some((data) => data?.productId === selectedModal?.value)) {\n            ToastContainer('Product Already Exist', 'danger')\n        } else {\n            const productsData = {\n                productId: selectedModal?.value,\n                quantity: quantity,\n                product: selectedModal?.data\n            }\n            console.log(productsData, 'productsData')\n\n            setOpeningProducts(prev => [...prev, productsData]);\n            handleClose();\n            reset();\n            setSelectedCode('');\n            setSelectedModal('');\n            setQuantity('');\n        }\n    }\n    console.log(ProductSearch, 'ProductSearch')\n    console.log(StockCheck, '0987')\n    return (\n        <div>\n            <Modal show={showModal} centered size='lg' onHide={handleClose} backdrop=\"static\" keyboard={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title className='text-black'>Add Product</Modal.Title>\n                </Modal.Header>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    <Modal.Body>\n                        {/* Your form or content here */}\n                        <Row>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label className=\"mb-0\">Search By</Form.Label>\n                                    <Form.Select\n                                        value={searchType}\n                                        onChange={(e) => {\n                                            setSearchType(e.target.value);\n                                            setSearchTerm(''); // clear input\n                                            setSelectedModal(null);\n                                            setSelectedCode(null);\n                                            setProductName('');\n                                        }}\n                                    >\n                                        <option value=\"modelName\">Model</option>\n                                        <option value=\"code\">Code</option>\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n\n                            {searchType === 'modelName' ? (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Model Name</Form.Label>\n                                        <Select\n                                            value={selectedModal}\n                                            onChange={handleModalChange}\n                                            onInputChange={(inputValue) => setSearchTerm(inputValue)}\n                                            options={modalOptions}\n                                            placeholder=\"Search Modal\"\n                                            isClearable\n                                            isSearchable\n                                            isLoading={store?.searchProductReducer?.loading}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            ) : (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Code</Form.Label>\n                                        <Select\n                                            value={selectedCode}\n                                            onChange={handleCodeChange}\n                                            onInputChange={(inputValue) => setSearchTerm(inputValue)}\n                                            options={codeOptions}\n                                            placeholder=\"Search Code\"\n                                            isClearable\n                                            isSearchable\n                                            isLoading={store?.searchProductReducer?.loading}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            )}\n                            {searchType === 'modelName' ? (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\" >Code</Form.Label>\n                                        <Form.Control type='text' placeholder=\"Code\" value={selectedCode?.label} />\n                                    </Form.Group>\n                                </Col>\n                            ) : (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\" >Model Name</Form.Label>\n                                        <Form.Control type='text' placeholder=\"Modal Name\" value={selectedModal?.label} />\n                                    </Form.Group>\n                                </Col>\n                            )}\n\n                            {(selectedModal || selectedCode) && (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Product Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={productName}\n                                            placeholder=\"Enter Product Name\"\n                                            onChange={(e) => setProductName(e.target.value)}\n                                            required\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            )}\n\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label className=\"mb-0\">Quantity</Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        placeholder=\"Enter Number\"\n                                        value={quantity}\n                                        onChange={(e) => {\n                                            const val = parseInt(e.target.value);\n                                            setQuantity(val > 0 ? val : '');\n                                        }}\n                                        required\n                                        min={1}\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n                        {StockCheck?.status==400 && location.pathname === '/shivay/addDispatch' && (\n                            <Row className=\"px-2\">\n                                <div className=\"py-1 text-center border border-primary rounded bg-light text-primary\">\n                                    {StockCheck?.error || JSON.stringify(StockCheck)}\n                                </div>\n                            </Row>\n                        )}\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className='cancel-button' onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button type='submit' className='custom-button' >\n                            Save\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AddProductModal"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","style","color","label","path","title","AddStockIn","_store$getWarehouseLi","_store$getWarehouseLi2","_store$listingUsersRe","_store$listingUsersRe2","_store$listingSupplie","_store$listingSupplie2","_store$createStockInR","_store$createStockInR2","_store$stockInByIdRed","_store$stockInByIdRed2","_stockInData$18","_stockInData$19","_stockInData$20","_stockInData$20$stock","_store$createStockInR3","_store$createStockInR4","searchParams","useSearchParams","stockId","get","dispatch","useDispatch","navigate","useNavigate","handleSubmit","register","setValue","resetField","watch","useForm","showModal","setShowModal","useState","store","useSelector","state","today","setToday","Date","toISOString","split","openingProducts","setOpeningProducts","Warehouse","getWarehouseListReducer","searchWarehouse","response","UsersList","listingUsersReducer","listingUsers","SupplierList","listingSupplierReducer","listingSupplier","isEditing","setIsEditing","editedQuantity","setEditedQuantity","productId","setProductId","inputRef","useRef","createResponse","createStockInReducer","createStockIn","status","stockInData","stockInByIdReducer","stockInById","console","log","attachmentType","setAttachmentType","fileInputRef","useEffect","handleSave","handleEditClick","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","warehouseOptions","warehouse","value","_id","name","usersOptions","users","word","charAt","toUpperCase","slice","toLowerCase","join","supplierOptions","selectedWarehouse","setSelectedWarehouse","selectedUser","setSelectedUser","selectedSupplier","setSelectedSupplier","isAccordionOpen","setIsAccordionOpen","getStockInByIdActions","_stockInData$","_stockInData$2","_stockInData$3","_stockInData$0$wareho","_stockInData$0$wareho2","_stockInData$5","_stockInData$6","_stockInData$0$receiv","_stockInData$0$receiv2","_stockInData$8","_stockInData$9","_stockInData$0$suppli","_stockInData$0$suppli2","_stockInData$11","_stockInData$12","_stockInData$13","_stockInData$14","_stockInData$15","_stockInData$16","_stockInData$16$stock","_stockInData$17","_stockInData$17$produ","createdAt","updateWarehouses","warehouseData","warehouseId","find","ele","_stockInData$4","updatedUser","receivedByData","receivedBy","_stockInData$7","updatedSupplier","supplierId","supplierData","_stockInData$10","invoiceNumber","description","fright","invoiceAttachment","invoiceAttachmentType","stockInProducts","quantity","productData","getWarehouseListActions","listingUsersActions","listingSupplierActions","PageTitle","Form","onSubmit","data","_data$invoiceAttachme","cleanedProducts","_ref","product","rest","formData","FormData","_data$invoiceAttachme2","File","append","invoiceValue","date","parseInt","JSON","stringify","updateStockInActions","createStockInActions","id","border","type","onClick","handleAccordionToggle","prevState","Button","handleShow","IoIosAdd","sm","Group","Label","Select","onChange","selectedOption","options","placeholder","isClearable","required","Control","rel","HiOutlineFolderDownload","accept","CgCloseO","size","cursor","resetAttachmentType","as","rows","Card","boxShadow","Body","scope","_data$productData","_data$productData2","_data$productData2$mo","_data$productData2$mo2","_data$productData3","modelData","code","AiOutlineEdit","length","_data$product","_data$product2","_data$product2$modelI","_data$product3","modelId","indexToRemove","updatedProducts","filter","_","handleDeleteProduct","RiDeleteBinLine","colSpan","disabled","loading","width","ButtonLoading","AddProductModal","handleClose","Loading","height","display","justifyContent","alignItems","ThreeDots","strokeWidth","animationDuration","visible","DashboardLoading","ColorRing","ariaLabel","wrapperStyle","wrapperClass","colors","_store$searchProductR","_store$searchProductR2","_store$createStockChe","_store$searchProductR3","_store$searchProductR4","reset","ProductSearch","searchProductReducer","searchProduct","StockCheck","createStockCheckReducer","createStockCheck","searchTerm","setSearchTerm","productName","setProductName","setQuantity","location","useLocation","searchType","setSearchType","_ProductSearch$","pathname","createStockCheckActions","qty","delayDebounceFn","setTimeout","searchProductActions","modelName","clearTimeout","modalOptions","_data$modelId","codeOptions","selectedModal","setSelectedModal","selectedCode","setSelectedCode","Modal","show","centered","onHide","backdrop","keyboard","Header","closeButton","Title","some","ToastContainer","productsData","prev","_selectedOption$data","_selectedOption$data2","_selectedOption$data3","onInputChange","inputValue","isSearchable","isLoading","_selectedOption$data4","_selectedOption$data5","_selectedOption$data6","_selectedOption$data7","val","min","error","Footer"],"sourceRoot":""}
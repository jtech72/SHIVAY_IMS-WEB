{"version":3,"file":"static/js/65.55db791d.chunk.js","mappings":"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","sources":["helpers/PageTitle.js","pages/shivay/stockIn/addStockIn/AddStockIn.js","pages/shivay/openingStock/addStock/AddProductModal.js"],"sourcesContent":["// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\n\r\ntype BreadcrumbItems = {\r\n    label: string,\r\n    path: string,\r\n    active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: Array<BreadcrumbItems>,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\" >Dashboard</Breadcrumb.Item>\r\n\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index} style={{ color: '#000' }}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path} >\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\" style={{ color: '#000' }}>{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useEffect, useRef, useState } from 'react'\nimport PageTitle from '../../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap'\nimport Select from 'react-select'; // Import React Select\nimport { IoIosAdd } from 'react-icons/io';\nimport { PiEye } from 'react-icons/pi';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport AddProductModal from '../../openingStock/addStock/AddProductModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createStockInActions, getWarehouseListActions, listingSupplierActions, listingUsersActions, updateStockInActions } from '../../../../redux/actions';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\n\nconst AddStockIn = () => {\n    const [searchParams] = useSearchParams();\n    const stockId = searchParams.get('id')\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const { handleSubmit, register, setValue } = useForm()\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n    const store = useSelector((state) => state)\n    const [today, setToday] = useState(new Date().toISOString().split('T')[0]);\n    const [openingProducts, setOpeningProducts] = useState([])\n    const StockInData = store?.stockInListReducer?.stockInList?.response;\n    const [selectedStock, setSelectedStock] = useState(null);\n    const Warehouse = store?.getWarehouseListReducer?.searchWarehouse?.response;\n    const UsersList = store?.listingUsersReducer?.listingUsers?.response;\n    const SupplierList = store?.listingSupplierReducer?.listingSupplier?.response;\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedQuantity, setEditedQuantity] = useState('');\n    const inputRef = useRef(null);\n\n    const createResponse = store?.createStockInReducer?.createStockIn?.status;\n    console.log(openingProducts, 'openingProducts')\n\n    const handleQuantityChange = (e) => {\n        setEditedQuantity(e.target.value);\n    };\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSave();\n        }\n    };\n\n    useEffect(() => {\n        if (createResponse === 200) {\n            navigate(\"/shivay/stockIn\");\n        }\n    }, [createResponse]);\n\n    // Handle save (when clicking outside or pressing Enter)\n    const handleSave = () => {\n        setIsEditing(false);\n        // Here you would typically also call an API to update the quantity in your backend\n    };\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n    useEffect(() => {\n        const handleClickOutside = (e) => {\n            if (inputRef.current && !inputRef.current.contains(e.target)) {\n                handleSave();\n            }\n        };\n\n\n        if (isEditing) {\n            document.addEventListener('mousedown', handleClickOutside);\n            return () => {\n                document.removeEventListener('mousedown', handleClickOutside);\n            };\n        }\n    }, [isEditing]);\n\n    useEffect(() => {\n        if (stockId && StockInData?.length > 0) {\n            const foundStock = StockInData?.find(item => item._id === stockId);\n            setSelectedStock(foundStock);\n        }\n    }, [stockId, StockInData]);\n\n    const warehouseOptions = Warehouse?.map((warehouse) => ({\n        value: warehouse._id,\n        label: warehouse.name,\n    }));\n\n    const usersOptions = UsersList?.map((users) => ({\n        value: users._id,\n        label: users.name\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n            .join(' '),\n    }));\n    \n\n    const supplierOptions = SupplierList?.map((users) => ({\n        value: users._id,\n        label: users.name,\n    }));\n\n    const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [selectedSupplier, setSelectedSupplier] = useState(null);\n    const [isAccordionOpen, setIsAccordionOpen] = useState(false);\n    console.log(selectedWarehouse, 'selectedWarehouse')\n    useEffect(() => {\n        if (stockId && selectedStock) {\n            console.log(selectedStock, '2345432')\n            setToday(selectedStock?.createdAt ? new Date(selectedStock?.createdAt).toISOString().split('T')[0] : '')\n            const updateWarehouses = selectedStock?.warehouseData\n                ? { value: selectedStock.warehouseId, label: selectedStock.warehouseData?.find((ele) => ele?._id === selectedStock?.warehouseId)?.name }\n                : {};\n            setSelectedWarehouse(updateWarehouses)\n\n            const updatedUser = selectedStock?.receivedByData ? { value: selectedStock?.receivedBy, label: selectedStock.receivedByData?.find((ele) => ele?._id === selectedStock?.receivedBy)?.name }\n                : {}\n            setSelectedUser(updatedUser)\n\n            const updatedSupplier = selectedStock?.supplierId ? { value: selectedStock?.supplierId, label: selectedStock.supplierData?.find((ele) => ele?._id === selectedStock?.supplierId)?.name }\n                : {}\n            setSelectedSupplier(updatedSupplier)\n\n            setValue('invoiceNumber', selectedStock?.invoiceNumber || '');\n            setValue('description', selectedStock?.description || '');\n            setValue('invoiceValue', selectedStock?.fright || '');\n            setValue('invoiceAttachment', selectedStock?.invoiceAttachment || '');\n            setEditedQuantity(selectedStock?.productData?.stockInQty || '');\n        }\n\n    }, [stockId, selectedStock])\n    console.log(selectedWarehouse, 'selectedWarehouse')\n    const handleAccordionToggle = () => {\n        setIsAccordionOpen(prevState => !prevState);\n    };\n    const handleWarehouseChange = (selectedOption) => {\n        setSelectedWarehouse(selectedOption);\n    };\n\n    const handleUserChange = (selectedUser) => {\n        setSelectedUser(selectedUser);\n    };\n\n    const handleSupplierChange = (selectedSupplier) => {\n        setSelectedSupplier(selectedSupplier);\n    };\n\n    useEffect(() => {\n        dispatch(getWarehouseListActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingUsersActions());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listingSupplierActions());\n    }, [dispatch]);\n\n    const handleDeleteProduct = (indexToRemove) => {\n        const updatedProducts = openingProducts.filter((_, index) => index !== indexToRemove);\n        setOpeningProducts(updatedProducts);\n    };\n\n    const onSubmit = (data) => {\n\n        const cleanedProducts = openingProducts.map(({ product, ...rest }) => rest);\n        const formData = new FormData();\n        if (data?.invoiceAttachment?.[0] instanceof File) {\n            formData.append('invoiceAttachment', data.invoiceAttachment[0]);\n        }\n\n        formData.append('warehouseId', selectedWarehouse?.value)\n        formData.append('receivedBy', selectedUser?.value);\n        formData.append('supplierId', selectedSupplier?.value);\n        formData.append('stockInQty', stockId ? parseInt(editedQuantity) : JSON.stringify(cleanedProducts));\n        formData.append('description', data?.description);\n        formData.append('date', data?.date);\n        formData.append('invoiceNumber', data?.invoiceNumber);\n        formData.append('fright', data?.invoiceValue);\n        if (stockId) {\n            formData.append('_id', stockId);\n        }\n        if (stockId) {\n            alert('update')\n            dispatch(updateStockInActions(formData))\n        } else {\n            dispatch(createStockInActions(formData));\n        }\n        // console.log(formData, 'formData');\n    };\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Stock In List\", path: \"/shivay/stockIn\" },\n                    { label: stockId ? \"Edit Stock In\" : \"Add Stock In\", path: \"/shivay/stockIn\", active: true },\n                ]}\n                title={stockId ? \"Edit Stock In\" : \"Add Stock In\"}\n            />\n            <Form onSubmit={handleSubmit(onSubmit)}>\n\n                <div className=\"accordion mb-3\" id=\"accordionExample\">\n                    <div className=\"accordion-item\" style={{ border: '2px solid #6655D9' }}>\n                        <h2 className=\"accordion-header mt-0\">\n                            <button\n                                className=\"accordion-button py-1 d-flex justify-content-between align-items-center w-100\"\n                                type=\"button\"\n                                data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#collapseOne\"\n                                aria-expanded={isAccordionOpen ? \"true\" : \"false\"}\n                                aria-controls=\"collapseOne\"\n                                onClick={handleAccordionToggle}  // Toggle the accordion open state\n                            >\n                                <div className=\"flex-grow-1 text-black fw-bold\"> {stockId ? \"Edit\" : \"Add\"} Stock In Details</div>\n\n                                {/* Right-aligned buttons */}\n                                <div className=\"d-flex\">\n                                    <Button\n                                        className=\"fw-bold custom-button me-2\"\n                                        onClick={handleShow}\n                                        disabled={!isAccordionOpen}\n                                    >\n                                        <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                                    </Button>\n                                </div>\n                            </button>\n                        </h2>\n\n                        <div\n                            id=\"collapseOne\"\n                            className={`accordion-collapse collapse ${isAccordionOpen ? \"show\" : \"\"}`}\n                            data-bs-parent=\"#accordionExample\"\n                        >\n                            <div className=\"accordion-body py-1\">\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className='mb-0'>Warehouse {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Select\n                                                value={selectedWarehouse}\n                                                onChange={handleWarehouseChange}\n                                                options={warehouseOptions}\n                                                placeholder=\"Select a warehouse\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Received By {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Select\n                                                value={selectedUser}\n                                                onChange={handleUserChange}\n                                                options={usersOptions}\n                                                placeholder=\"Select a User\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Supplier {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Select\n                                                value={selectedSupplier}\n                                                onChange={handleSupplierChange}\n                                                options={supplierOptions}\n                                                placeholder=\"Select a Supplier\"\n                                                isClearable\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className='mb-0'>Date Range</Form.Label>\n                                            <Form.Control\n                                                type=\"date\"\n                                                value={today}\n                                                {...register('date')}\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Invoice Number {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Form.Control\n                                                type=\"number\"\n                                                placeholder=\"Enter Invoice Number\"\n                                                {...register('invoiceNumber', { required: true })}\n                                                required\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Attach Invoice {!stockId && <span className='text-danger'>*</span>}</Form.Label>\n                                            <Form.Control\n                                                type=\"file\"\n                                                placeholder=\"Upload file\"\n                                                required\n                                                {...register('invoiceAttachment')}\n                                            />\n                                            {selectedStock?.invoiceAttachment && (\n                                                <div className=\"mt-2\">\n                                                    <a\n                                                        href={selectedStock.invoiceAttachment}\n                                                        target=\"_blank\"\n                                                        rel=\"noopener noreferrer\"\n                                                    >\n                                                        View Existing Invoice\n                                                    </a>\n                                                </div>\n                                            )}\n                                        </Form.Group>\n                                    </Col>\n\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Invoice Value</Form.Label>\n                                            <Form.Control\n                                                type=\"text\"\n                                                {...register('invoiceValue')}\n                                                placeholder=\"Enter Invoice Value\"\n                                            />\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Group className=\"mb-1\">\n                                            <Form.Label className=\"mb-0\">Description</Form.Label>\n                                            <Form.Control\n                                                as=\"textarea\"\n                                                rows={1}\n                                                {...register('description')}\n                                                placeholder=\"Enter Description\"\n                                            />\n                                        </Form.Group>\n                                    </Col>\n\n                                </Row>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='mt-2'>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center py-1\">\n                            <table className=\"table table-striped bg-white\">\n                                <thead>\n                                    <tr className=\"table_header\">\n                                        <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                        <th scope=\"col\">Product Name</th>\n                                        <th scope=\"col\">Model Name</th>\n                                        <th scope=\"col\">Code</th>\n                                        <th scope=\"col\">Quantity</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {!stockId ? (\n                                        openingProducts && openingProducts.length > 0 ? (\n                                            openingProducts.map((data, index) => (\n                                                <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                    <th scope=\"row\">{index + 1}</th>\n                                                    <td className=\"text-uppercase fw-bold\">\n                                                        {data?.product?.name || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.product?.modelId?.name || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.product?.code || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td className=\"fw-bold\">\n                                                        {data?.quantity || <span className=\"text-black\">-</span>}\n                                                    </td>\n                                                    <td></td>\n                                                    <div className=\"icon-container d-flex pb-0\">\n                                                        <span className=\"icon-wrapper me-4\" title=\"Delete\" onClick={() => handleDeleteProduct(index)}>\n                                                            <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                        </span>\n                                                    </div>\n                                                </tr>\n                                            ))\n                                        ) : (\n                                            <tr>\n                                                <td colSpan=\"6\" className=\"text-center text-danger py-3\">\n                                                    Note :  No products added yet. Please add products to proceed with stock-in.\n                                                </td>\n                                            </tr>\n                                        )\n                                    ) : (\n                                        <tr>\n                                            <th scope=\"row\">1</th>\n                                            <td className=\"text-uppercase fw-bold\">\n                                                {selectedStock?.productData?.name || <span className=\"text-black\">-</span>}\n                                            </td>\n                                            <td className=\"fw-bold\">\n                                                {selectedStock?.modelData?.[0]?.name || <span className=\"text-black\">-</span>}\n                                            </td>\n                                            <td className=\"fw-bold\">\n                                                {selectedStock?.productData?.code || <span className=\"text-black\">-</span>}\n                                            </td>\n                                            <td className=\"fw-bold\">\n                                                {isEditing ? (\n                                                    <input\n                                                        ref={inputRef}\n                                                        type=\"number\"  // or \"text\" depending on your needs\n                                                        value={editedQuantity}\n                                                        onChange={handleQuantityChange}\n                                                        onKeyPress={handleKeyPress}\n                                                        // autoFocus\n                                                        className=\"form-control form-control-md\"\n                                                        style={{ width: '5vw', display: 'inline-block', marginTop: '-10px' }}\n                                                    />\n                                                ) : (\n                                                    <span onClick={handleEditClick} > {editedQuantity} <BsThreeDotsVertical className='table_header cursor'/></span>\n                                                )}\n\n                                            </td>\n                                            <td></td>\n                                            <div className=\"icon-container d-flex pb-0\">\n                                                <span\n                                                    className=\"icon-wrapper text-danger me-5 pe-3\"\n                                                    title=\"Edit\"\n                                                    onClick={handleEditClick}\n                                                >\n                                                    <AiOutlineEdit className=\"fs-4 text-danger\" style={{ cursor: 'pointer' }} />\n                                                </span>\n                                            </div>\n                                        </tr>\n                                    )}\n\n                                </tbody>\n\n                            </table>\n\n                        </Card.Body>\n                    </Card>\n                    <div className=\"text-end\">\n                        <Button\n                            className=\"fw-bold cancel-button me-2\"\n                            onClick={() => navigate(\"/shivay/stockIn\")}\n                        >\n                            Cancel\n                        </Button>\n\n                        <Button className=\"fw-bold custom-button\" type='submit'>{stockId ? 'Update' : \"Submit\"}</Button>\n                    </div>\n                </div>\n            </Form>\n            <AddProductModal openingProducts={openingProducts} setOpeningProducts={setOpeningProducts} showModal={showModal} handleClose={handleClose} />\n        </div >\n    )\n}\n\nexport default AddStockIn","import React, { useEffect, useState } from 'react'\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Select from 'react-select'; // Import React Select\nimport { createStockCheckActions, searchProductActions } from '../../../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport ToastContainer from '../../../../helpers/toast/ToastContainer';\nimport { useLocation } from 'react-router-dom';\n\nconst AddProductModal = ({ showModal, handleClose, openingProducts, setOpeningProducts, selectedWarehouse }) => {\n\n    const dispatch = useDispatch();\n    const { handleSubmit, register, reset } = useForm()\n    const store = useSelector((state) => state)\n    const ProductSearch = store?.searchProductReducer?.searchProduct?.response;\n    const StockCheck = store?.createStockCheckReducer?.createStockCheck;\n    console.log(StockCheck, 'StockCheck')\n    const [searchTerm, setSearchTerm] = useState('');\n    const [productName, setProductName] = useState('');\n    const [quantity, setQuantity] = useState()\n    const location = useLocation()\n    // console.log(location.pathname)\n\n    const [searchType, setSearchType] = useState('modelName'); // default search type\n    useEffect(() => {\n        if (location.pathname === '/shivay/addDispatch' && quantity) {\n            dispatch(createStockCheckActions({\n                warehouseId: selectedWarehouse?.value, qty: quantity, productId: ProductSearch?.[0]?._id\n            }))\n        }\n    }, [location, quantity])\n    useEffect(() => {\n        const delayDebounceFn = setTimeout(() => {\n            if (searchTerm) {\n                if (searchType === 'modelName') {\n                    dispatch(searchProductActions({ modelName: searchTerm }));\n                } else if (searchType === 'code') {\n                    dispatch(searchProductActions({ code: searchTerm }));\n                }\n            }\n        }, 500);\n\n        return () => clearTimeout(delayDebounceFn);\n    }, [searchTerm, dispatch, searchType]);\n\n    const modalOptions = ProductSearch?.map((data) => ({\n        value: data?._id,\n        label: data?.modelId?.name,\n        data: data\n    })) || [];\n\n    const codeOptions = ProductSearch?.map((data) => ({\n        value: data?._id,\n        label: data?.code,\n        data: data\n    })) || []\n\n    // State to handle selected options\n    const [selectedModal, setSelectedModal] = useState(null);\n    console.log(selectedModal, 'selectedModalselectedModal')\n    const [selectedCode, setSelectedCode] = useState(null);\n    console.log(selectedCode, 'selectedCode')\n\n    // Handle changes in modal selection\n    const handleModalChange = (selectedOption) => {\n        setSelectedModal(selectedOption);\n        setSelectedCode({\n            value: selectedOption?.data?._id,\n            label: selectedOption?.data?.code,\n            data: selectedOption?.data\n\n        });\n        setProductName(selectedOption?.data?.name);\n    };\n\n    const handleCodeChange = (selectedOption) => {\n        setSelectedCode(selectedOption);\n        setSelectedModal({\n            value: selectedOption?.data?._id,\n            label: selectedOption?.data?.modelId?.name,\n            data: selectedOption?.data\n        });\n        setProductName(selectedOption?.data?.name);\n    };\n\n    useEffect(() => {\n        dispatch(searchProductActions());\n    }, [dispatch]);\n\n    const loadModalOptions = async (inputValue) => {\n        if (!inputValue) return [];\n\n        console.log(inputValue, 'inputValue')\n        dispatch(searchProductActions({ modelName: inputValue }))\n    };\n\n    const onSubmit = (data) => {\n        if (openingProducts?.some((data) => data?.productId === selectedModal?.value)) {\n            ToastContainer('Product Already Exist', 'danger')\n        } else {\n            const productsData = {\n                productId: selectedModal?.value,\n                quantity: quantity,\n                product: selectedModal?.data\n            }\n            console.log(productsData, 'productsData')\n\n            setOpeningProducts(prev => [...prev, productsData]);\n            handleClose();\n            reset();\n            setSelectedCode('');\n            setSelectedModal('');\n            setQuantity('');\n        }\n    }\n    console.log(ProductSearch, 'ProductSearch')\n\n    return (\n        <div>\n            <Modal show={showModal} centered size='lg' onHide={handleClose} backdrop=\"static\" keyboard={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title className='text-black'>Add Product</Modal.Title>\n                </Modal.Header>\n                <Form onSubmit={handleSubmit(onSubmit)}>\n                    <Modal.Body>\n                        {/* Your form or content here */}\n                        <Row>\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label className=\"mb-0\">Search By</Form.Label>\n                                    <Form.Select\n                                        value={searchType}\n                                        onChange={(e) => {\n                                            setSearchType(e.target.value);\n                                            setSearchTerm(''); // clear input\n                                            setSelectedModal(null);\n                                            setSelectedCode(null);\n                                            setProductName('');\n                                        }}\n                                    >\n                                        <option value=\"modelName\">Model</option>\n                                        <option value=\"code\">Code</option>\n                                    </Form.Select>\n                                </Form.Group>\n                            </Col>\n\n                            {searchType === 'modelName' ? (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Model Name</Form.Label>\n                                        <Select\n                                            value={selectedModal}\n                                            onChange={handleModalChange}\n                                            onInputChange={(inputValue) => setSearchTerm(inputValue)}\n                                            options={modalOptions}\n                                            placeholder=\"Search Modal\"\n                                            isClearable\n                                            isSearchable\n                                            isLoading={store?.searchProductReducer?.loading}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            ) : (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Code</Form.Label>\n                                        <Select\n                                            value={selectedCode}\n                                            onChange={handleCodeChange}\n                                            onInputChange={(inputValue) => setSearchTerm(inputValue)}\n                                            options={codeOptions}\n                                            placeholder=\"Search Code\"\n                                            isClearable\n                                            isSearchable\n                                            isLoading={store?.searchProductReducer?.loading}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            )}\n                            {searchType === 'modelName' ? (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\" >Code</Form.Label>\n                                        <Form.Control type='text' placeholder=\"Code\" value={selectedCode?.label} />\n                                    </Form.Group>\n                                </Col>\n                            ) : (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\" >Model Name</Form.Label>\n                                        <Form.Control type='text' placeholder=\"Modal Name\" value={selectedModal?.label} />\n                                    </Form.Group>\n                                </Col>\n                            )}\n\n                            {(selectedModal || selectedCode) && (\n                                <Col sm={6}>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label className=\"mb-0\">Product Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={productName}\n                                            placeholder=\"Enter Product Name\"\n                                            onChange={(e) => setProductName(e.target.value)}\n                                            required\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            )}\n\n                            <Col sm={6}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label className=\"mb-0\">Quantity</Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        placeholder=\"Enter Number\"\n                                        value={quantity}\n                                        onChange={(e) => {\n                                            const val = parseInt(e.target.value);\n                                            setQuantity(val > 0 ? val : '');\n                                        }}\n                                        required\n                                        min={1}\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n                        {!StockCheck?.status && location.pathname === '/shivay/addDispatch' && StockCheck?.data?.length > 0 && (\n                            <Row className=\"px-2\">\n                                <div className=\"py-1 text-center border border-primary rounded bg-light text-primary\">\n                                    {StockCheck.message || JSON.stringify(StockCheck)}\n                                </div>\n                            </Row>\n                        )}\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className='cancel-button' onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button type='submit' className='custom-button' >\n                            Save\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AddProductModal"],"names":["props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","style","color","label","path","title","AddStockIn","_store$stockInListRed","_store$stockInListRed2","_store$getWarehouseLi","_store$getWarehouseLi2","_store$listingUsersRe","_store$listingUsersRe2","_store$listingSupplie","_store$listingSupplie2","_store$createStockInR","_store$createStockInR2","_selectedStock$produc2","_selectedStock$modelD","_selectedStock$modelD2","_selectedStock$produc3","searchParams","useSearchParams","stockId","get","dispatch","useDispatch","navigate","useNavigate","handleSubmit","register","setValue","useForm","showModal","setShowModal","useState","store","useSelector","state","today","setToday","Date","toISOString","split","openingProducts","setOpeningProducts","StockInData","stockInListReducer","stockInList","response","selectedStock","setSelectedStock","Warehouse","getWarehouseListReducer","searchWarehouse","UsersList","listingUsersReducer","listingUsers","SupplierList","listingSupplierReducer","listingSupplier","isEditing","setIsEditing","editedQuantity","setEditedQuantity","inputRef","useRef","createResponse","createStockInReducer","createStockIn","status","console","log","useEffect","handleSave","handleEditClick","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","length","foundStock","find","_id","warehouseOptions","warehouse","value","name","usersOptions","users","word","charAt","toUpperCase","slice","toLowerCase","join","supplierOptions","selectedWarehouse","setSelectedWarehouse","selectedUser","setSelectedUser","selectedSupplier","setSelectedSupplier","isAccordionOpen","setIsAccordionOpen","_selectedStock$wareho","_selectedStock$wareho2","_selectedStock$receiv","_selectedStock$receiv2","_selectedStock$suppli","_selectedStock$suppli2","_selectedStock$produc","createdAt","updateWarehouses","warehouseData","warehouseId","ele","updatedUser","receivedByData","receivedBy","updatedSupplier","supplierId","supplierData","invoiceNumber","description","fright","invoiceAttachment","productData","stockInQty","getWarehouseListActions","listingUsersActions","listingSupplierActions","PageTitle","Form","onSubmit","data","_data$invoiceAttachme","cleanedProducts","_ref","product","rest","formData","FormData","File","append","parseInt","JSON","stringify","date","invoiceValue","alert","updateStockInActions","createStockInActions","id","border","type","onClick","handleAccordionToggle","prevState","Button","handleShow","disabled","IoIosAdd","sm","Group","Label","Select","onChange","selectedOption","options","placeholder","isClearable","required","Control","rel","as","rows","Card","boxShadow","Body","scope","modelData","code","ref","onKeyPress","key","width","display","marginTop","BsThreeDotsVertical","AiOutlineEdit","cursor","_data$product","_data$product2","_data$product2$modelI","_data$product3","modelId","quantity","indexToRemove","updatedProducts","filter","_","handleDeleteProduct","RiDeleteBinLine","colSpan","AddProductModal","handleClose","_store$searchProductR","_store$searchProductR2","_store$createStockChe","_store$searchProductR3","_store$searchProductR4","_StockCheck$data","reset","ProductSearch","searchProductReducer","searchProduct","StockCheck","createStockCheckReducer","createStockCheck","searchTerm","setSearchTerm","productName","setProductName","setQuantity","location","useLocation","searchType","setSearchType","_ProductSearch$","pathname","createStockCheckActions","qty","productId","delayDebounceFn","setTimeout","searchProductActions","modelName","clearTimeout","modalOptions","_data$modelId","codeOptions","selectedModal","setSelectedModal","selectedCode","setSelectedCode","Modal","show","centered","size","onHide","backdrop","keyboard","Header","closeButton","Title","some","ToastContainer","productsData","prev","_selectedOption$data","_selectedOption$data2","_selectedOption$data3","onInputChange","inputValue","isSearchable","isLoading","loading","_selectedOption$data4","_selectedOption$data5","_selectedOption$data6","_selectedOption$data7","val","min","message","Footer"],"sourceRoot":""}
{"version":3,"file":"static/js/72.f7f80a2e.chunk.js","mappings":"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","sources":["pages/shivay/openingStock/addStock/AddOpeningStock.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PageTitle from '../../../../helpers/PageTitle'\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap'\nimport Select from 'react-select';\nimport { IoIosAdd } from 'react-icons/io';\nimport { AiOutlineEdit } from 'react-icons/ai';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport AddProductModal from './AddProductModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createStockActions, getWarehouseListActions } from '../../../../redux/actions';\nimport { useForm } from 'react-hook-form';\n\nconst AddOpeningStock = () => {\n\n    const dispatch = useDispatch();\n    const { handleSubmit, register } = useForm()\n    const [showModal, setShowModal] = useState(false);\n    const handleShow = () => setShowModal(true);\n    const handleClose = () => setShowModal(false);\n    const store = useSelector((state) => state)\n    const today = new Date().toISOString().split('T')[0];\n\n    const Warehouse = store?.getWarehouseListReducer?.searchWarehouse?.response;\n\n    const warehouseOptions = Warehouse?.map((warehouse) => ({\n        value: warehouse._id,\n        label: warehouse.name,\n    }));\n    const [openingProducts, setOpeningProducts] = useState([])\n\n    const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n\n    const handleWarehouseChange = (selectedOption) => {\n        setSelectedWarehouse(selectedOption);\n    };\n\n    useEffect(() => {\n        dispatch(getWarehouseListActions());\n    }, [dispatch]);\n\n    const onSubmit = (data) => {\n        const cleanedProducts = openingProducts.map(({ product, ...rest }) => rest);\n\n        const payload = {\n            warehouseId: selectedWarehouse?.value,\n            productStock: cleanedProducts,\n            description: data?.description,\n            date: data?.date\n        };\n        dispatch(createStockActions(payload));\n        // console.log(payload, 'payload');\n    };\n\n    const handleDeleteProduct = (indexToRemove) => {\n        const updatedProducts = openingProducts.filter((_, index) => index !== indexToRemove);\n        setOpeningProducts(updatedProducts);\n    };\n\n    return (\n        <div>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: \"SHIVAY Opening Stock List\", path: \"/shivay/openingStock\" },\n                    { label: \"Add Opening Stock \", path: \"/shivay/openingStock\", active: true },\n                ]}\n                title={\"Add Opening Stock\"}\n            />\n\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Row>\n                    <Col sm={3}>\n                        <Form.Group className=\"mb-1\">\n                            <Form.Label className='mb-0'>Warehouse</Form.Label>\n                            <Select\n                                value={selectedWarehouse}\n                                onChange={handleWarehouseChange}\n                                options={warehouseOptions}\n                                placeholder=\"Select a warehouse\"\n                                isClearable\n                                required\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col sm={3}>\n                        <Form.Group className=\"mb-1\">\n                            <Form.Label className='mb-0'>Date Range</Form.Label>\n                            <Form.Control\n                                type=\"date\"\n                                defaultValue={today}\n                                {...register('date', { required: true })}\n                                required\n                            />\n                        </Form.Group>\n                    </Col>\n\n                    <Col sm={3}>\n                        <Form.Group className=\"mb-1\">\n                            <Form.Label className='mb-0'>Description</Form.Label>\n                            <Form.Control\n                                as='textarea'\n                                rows={1}\n                                {...register('description', { required: true })}\n                                placeholder='Enter Description'\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col sm={3} className='text-end mt-1'>\n                        {/* <Button className=\"mt-2 fw-bold cancel-button me-2\"\n                            onClick={handleBack}\n                        >\n                            Back\n                        </Button> */}\n                        <Button className=\"mt-2 fw-bold custom-button\"\n                            onClick={handleShow}\n                        >\n                            <IoIosAdd className=\"fs-3\" />&nbsp;Product\n                        </Button>\n                    </Col>\n                </Row>\n\n                <div className='mt-2'>\n                    <Card\n                        style={{ boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset' }}\n                    >\n                        <Card.Body className=\"text-center py-1\">\n                            <table className=\"table table-striped bg-white\">\n                                <thead>\n                                    <tr className=\"table_header\">\n                                        <th scope=\"col\"><i className=\"mdi mdi-merge\"></i></th>\n                                        <th scope=\"col\">Product Name</th>\n                                        <th scope=\"col\">Code</th>\n                                        <th scope=\"col\">Quantity</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {openingProducts && openingProducts.length > 0 ? (\n                                        openingProducts.map((data, index) => (\n                                            <tr key={index} className=\"text-dark fw-bold text-nowrap highlight-row\">\n                                                <th scope=\"row\">{index + 1}</th>\n                                                <td className=\"text-uppercase fw-bold\">\n                                                    {data?.product?.name || <span className=\"text-danger\">N/A</span>}\n                                                </td>\n                                                <td className=\"fw-bold\">\n                                                    {data?.product?.code || <span className=\"text-danger\">N/A</span>}\n                                                </td>\n                                                <td className=\"fw-bold\">\n                                                    {data?.quantity || <span className=\"text-danger\">N/A</span>}\n                                                </td>\n\n                                                <div className=\"icon-container d-flex pb-0\">\n                                                    <span className=\"icon-wrapper\" title=\"Edit\">\n                                                        <AiOutlineEdit className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                    <span className=\"icon-wrapper\" title=\"Delete\" onClick={() => handleDeleteProduct(index)}>\n                                                        <RiDeleteBinLine className=\"fs-4 text-black\" style={{ cursor: 'pointer' }} />\n                                                    </span>\n                                                </div>\n                                            </tr>\n                                        ))\n                                    ) : (\n                                        <tr>\n                                            <td colSpan=\"6\" className=\"text-center text-muted py-3\">\n                                                No products added yet. Please add products to add opening stock.\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n\n                        </Card.Body>\n                    </Card>\n                    <div className=\"text-end\">\n                        <Button\n                            className=\"fw-bold cancel-button me-2\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button className=\"fw-bold custom-button\" type='submit'>Submit</Button>\n                    </div>\n                </div>\n            </Form>\n\n            <AddProductModal openingProducts={openingProducts} setOpeningProducts={setOpeningProducts} showModal={showModal} handleClose={handleClose} />\n\n        </div>\n    )\n}\n\nexport default AddOpeningStock"],"names":["AddOpeningStock","_store$getWarehouseLi","_store$getWarehouseLi2","dispatch","useDispatch","handleSubmit","register","useForm","showModal","setShowModal","useState","store","useSelector","state","today","Date","toISOString","split","Warehouse","getWarehouseListReducer","searchWarehouse","response","warehouseOptions","map","warehouse","value","_id","label","name","openingProducts","setOpeningProducts","selectedWarehouse","setSelectedWarehouse","useEffect","getWarehouseListActions","_jsxs","children","_jsx","PageTitle","breadCrumbItems","path","active","title","Form","onSubmit","data","cleanedProducts","_ref","product","rest","payload","warehouseId","productStock","description","date","createStockActions","Row","Col","sm","Group","className","Label","Select","onChange","selectedOption","options","placeholder","isClearable","required","Control","type","defaultValue","as","rows","Button","onClick","handleShow","IoIosAdd","Card","style","boxShadow","Body","scope","length","index","_data$product","_data$product2","code","quantity","AiOutlineEdit","cursor","indexToRemove","updatedProducts","filter","_","handleDeleteProduct","RiDeleteBinLine","colSpan","AddProductModal","handleClose"],"sourceRoot":""}